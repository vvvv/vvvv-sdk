#!/bin/sh

# Use junction points under windows XP
if [ $(uname -s) == 'MINGW32_NT-5.1' ]
then
	# Cleanup all junction points created before
	symlink_dirs=.git/symlink_dirs
	if [ -e $symlink_dirs ]
	then
		echo "Cleaning up symlinks from previous branch ..."
	
		cat $symlink_dirs |
		while read symlink_dir
		do
			cd $symlink_dir > nul
			cmd //C "dir /B /AL 2> nul" | sed '/^$/d' | xargs --no-run-if-empty -n 1 rmdir
			cd - > nul
		done
		
		rm $symlink_dirs
	fi
	
	# Find all .symlinks files
	git ls-files -- "*.symlinks" |
	while read symlinks_file
	do
		echo "Processing $symlinks_file"

		cd $(dirname $symlinks_file) > nul

		# Delete all previous junction points
		cmd //C "dir /B /AL 2> nul" | sed '/^$/d' | xargs --no-run-if-empty -n 1 -t rmdir

		# Create new junction points
		if [ -e $(basename $symlinks_file) ]
		then
			[ ! -f .gitignore ] && touch .gitignore

			sed '/# SYMLINKS/,$d' .gitignore > .gitignore_work
			echo '# SYMLINKS - do not modify - will be overwritten after checkout' >> .gitignore_work

			cat $(basename $symlinks_file) |
			while read link_line
			do
				link_name=$(echo $link_line | cut -d'>' -f1)
				link_target=$(echo $link_line | cut -d'>' -f2 | sed 's|/|\\|g')
				
				cmd //C linkd "$link_name" "$link_target"
				
				# Add it to ignore list
				
				echo "/$link_name/" >> .gitignore_work
			done
			
			mv .gitignore_work .gitignore
			git add .gitignore 2> nul
		fi

		cd - > nul
		
		echo $(dirname $symlinks_file) >> $symlink_dirs
	done
fi

# Use junction points under windows vista/7
if [ $(uname -s) == 'MINGW32_NT-6.0' -o $(uname -s) == 'MINGW32_NT-6.1' -o $(uname -s) == 'MINGW32_NT-6.2' ]
then
	# Cleanup all junction points created before
	symlink_dirs=.git/symlink_dirs
	if [ -e $symlink_dirs ]
	then
		echo "Cleaning up symlinks from previous branch ..."
	
		cat $symlink_dirs |
		while read symlink_dir
		do
			cd $symlink_dir > nul
			cmd //C "dir /B /AL 2> nul" | sed '/^$/d' | xargs --no-run-if-empty -n 1 rmdir
			cd - > nul
		done
		
		rm $symlink_dirs
	fi
	
	# Find all .symlinks files
	git ls-files -- "*.symlinks" |
	while read symlinks_file
	do
		echo "Processing $symlinks_file"

		cd $(dirname $symlinks_file) > nul

		# Delete all previous junction points
		cmd //C "dir /B /AL 2> nul" | sed '/^$/d' | xargs --no-run-if-empty -n 1 rmdir

		# Create new junction points
		if [ -e $(basename $symlinks_file) ]
		then
			[ ! -f .gitignore ] && touch .gitignore

			sed '/# SYMLINKS/,$d' .gitignore > .gitignore_work
			echo '# SYMLINKS - do not modify - will be overwritten after checkout' >> .gitignore_work

			cat $(basename $symlinks_file) |
			while read link_line
			do
				link_name=$(echo $link_line | cut -d'>' -f1)
				link_target=$(echo $link_line | cut -d'>' -f2 | sed 's|/|\\|g')
				
				cmd //C mklink //J "$link_name" "$link_target"
				
				# Add it to ignore list
				
				echo "/$link_name/" >> .gitignore_work
			done
			
			mv .gitignore_work .gitignore
			git add .gitignore 2> nul
		fi

		cd - > nul
		
		echo $(dirname $symlinks_file) >> $symlink_dirs
	done
fi