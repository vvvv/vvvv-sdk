<?xml version="1.0"?>
<doc>
    <assembly>
        <name>CefGlue</name>
    </assembly>
    <members>
        <member name="M:CefGlue.CefStringList.#ctor">
            <summary>
            Create new empty string list.
            </summary>
        </member>
        <member name="T:CefGlue.CefStringMultiMap">
            <summary>
            String multimap.
            </summary>
        </member>
        <member name="M:CefGlue.CefStringMultiMap.#ctor">
            <summary>
            Allocate a new string multimap.
            </summary>
        </member>
        <member name="M:CefGlue.CefStringMultiMap.Dispose">
            <summary>
            Dispose the string multimap.
            </summary>
        </member>
        <member name="M:CefGlue.CefStringMultiMap.FindCount(System.String)">
            <summary>
            Return the number of values with the specified key.
            </summary>
        </member>
        <member name="M:CefGlue.CefStringMultiMap.GetValue(System.String,System.Int32)">
            <summary>
            Return the value_index-th value with the specified key.
            </summary>
        </member>
        <member name="M:CefGlue.CefStringMultiMap.GetKey(System.Int32)">
            <summary>
            Return the key at the specified zero-based string multimap index.
            </summary>
        </member>
        <member name="M:CefGlue.CefStringMultiMap.GetValue(System.Int32)">
            <summary>
            Return the value at the specified zero-based string multimap index.
            </summary>
        </member>
        <member name="M:CefGlue.CefStringMultiMap.Append(System.String,System.String)">
            <summary>
            Append a new key/value pair at the end of the string multimap.
            </summary>
        </member>
        <member name="M:CefGlue.CefStringMultiMap.Clear">
            <summary>
            Clear the string multimap.
            </summary>
        </member>
        <member name="P:CefGlue.CefStringMultiMap.Count">
            <summary>
            Return the number of elements in the string multimap.
            </summary>
        </member>
        <member name="M:CefGlue.Cef.Initialize(CefGlue.CefSettings)">
            <summary>
            This function should be called on the main application thread to initialize
            CEF when the application is started.
            </summary>
            <param name="settings"></param>
            <exception cref="T:System.Exception"></exception>
        </member>
        <member name="M:CefGlue.Cef.Shutdown">
            <summary>
            This function should be called on the main application thread to shut down
            CEF before the application exits.
            </summary>
        </member>
        <member name="M:CefGlue.Cef.DoMessageLoopWork">
            <summary>
            Perform a single iteration of CEF message loop processing. This function is
            used to integrate the CEF message loop into an existing application message
            loop. Care must be taken to balance performance against excessive CPU usage.
            This function should only be called on the main application thread and only
            if cef_initialize() is called with a CefSettings.multi_threaded_message_loop
            value of false (0). This function will not block.
            </summary>
        </member>
        <member name="M:CefGlue.Cef.RunMessageLoop">
            <summary>
            Run the CEF message loop. Use this function instead of an application-
            provided message loop to get the best balance between performance and CPU
            usage. This function should only be called on the main application thread and
            only if cef_initialize() is called with a
            CefSettings.multi_threaded_message_loop value of false (0). This function
            will block until a quit message is received by the system.
            </summary>
        </member>
        <member name="M:CefGlue.Cef.RegisterExtension(System.String,System.String,CefGlue.CefV8Handler)">
             <summary>
             Register a new V8 extension with the specified JavaScript extension
             code and handler. Functions implemented by the handler are prototyped
             using the keyword 'native'. The calling of a native function is
             restricted to the scope in which the prototype of the native function
             is defined. This function may be called on any thread.
            
             Example JavaScript extension code: &lt;pre&gt;
               /// create the 'example' global object if it doesn't already exist.
               if (!example)
                 example = {};
               /// create the 'example.test' global object if it doesn't already exist.
               if (!example.test)
                 example.test = {};
               (function() {
                 /// Define the function 'example.test.myfunction'.
                 example.test.myfunction = function() {
                   /// Call CefV8Handler::Execute() with the function name 'MyFunction'
                   /// and no arguments.
                   native function MyFunction();
                   return MyFunction();
                 };
                 /// Define the getter function for parameter 'example.test.myparam'.
                 example.test.__defineGetter__('myparam', function() {
                   /// Call CefV8Handler::Execute() with the function name 'GetMyParam'
                   /// and no arguments.
                   native function GetMyParam();
                   return GetMyParam();
                 });
                 /// Define the setter function for parameter 'example.test.myparam'.
                 example.test.__defineSetter__('myparam', function(b) {
                   /// Call CefV8Handler::Execute() with the function name 'SetMyParam'
                   /// and a single argument.
                   native function SetMyParam();
                   if(b) SetMyParam(b);
                 });
            
                 /// Extension definitions can also contain normal JavaScript variables
                 /// and functions.
                 var myint = 0;
                 example.test.increment = function() {
                   myint += 1;
                   return myint;
                 };
               })();
             &lt;/pre&gt; Example usage in the page: &lt;pre&gt;
               /// Call the function.
               example.test.myfunction();
               /// Set the parameter.
               example.test.myparam = value;
               /// Get the parameter.
               value = example.test.myparam;
               /// Call another function.
               example.test.increment();
             &lt;/pre&gt;
             </summary>
        </member>
        <member name="M:CefGlue.Cef.RegisterCustomScheme(System.String,System.Boolean,System.Boolean,System.Boolean)">
             <summary>
             Register a custom scheme. This function should not be called for the
             built-in HTTP, HTTPS, FILE, FTP, ABOUT and DATA schemes.
            
             If |is_standard| is true (1) the scheme will be treated as a standard
             scheme. Standard schemes are subject to URL canonicalization and
             parsing rules as defined in the Common Internet Scheme Syntax RFC
             1738 Section 3.1 available at http://www.ietf.org/rfc/rfc1738.txt
            
             In particular, the syntax for standard scheme URLs must be of the
             form: &lt;pre&gt;
              [scheme]://[username]:[password]@[host]:[port]/[url-path]
             &lt;/pre&gt; Standard scheme URLs must have a host component that is a
             fully qualified domain name as defined in Section 3.5 of RFC 1034
             [13] and Section 2.1 of RFC 1123. These URLs will be canonicalized to
             "scheme://host/path" in the simplest case and
             "scheme://username:password@host:port/path" in the most explicit
             case. For example, "scheme:host/path" and "scheme:///host/path" will
             both be canonicalized to "scheme://host/path".
            
             For non-standard scheme URLs only the "scheme:" component is parsed
             and canonicalized. The remainder of the URL will be passed to the
             handler as-is. For example, "scheme:///some%20text" will remain the
             same. Non-standard scheme URLs cannot be used as a target for form
             submission.
            
             If |is_local| is true (1) the scheme will be treated as local (i.e.,
             with the same security rules as those applied to "file" URLs). This
             means that normal pages cannot link to or access URLs of this scheme.
            
             If |is_display_isolated| is true (1) the scheme will be treated as
             display- isolated. This means that pages cannot display these URLs
             unless they are from the same scheme. For example, pages in another
             origin cannot create iframes or hyperlinks to URLs with this scheme.
            
             This function may be called on any thread. It should only be called
             once per unique |scheme_name| value. If |scheme_name| is already
             registered or if an error occurs this function will return false (0).
             </summary>
        </member>
        <member name="M:CefGlue.Cef.RegisterSchemeHandlerFactory(System.String,System.String,CefGlue.CefSchemeHandlerFactory)">
            <summary>
            Register a scheme handler factory for the specified |scheme_name| and optional |domain_name|.
            An NULL |domain_name| value for a standard scheme will cause the factory to match all domain names.
            The |domain_name| value will be ignored for non-standard schemes.
            If |scheme_name| is a built-in scheme and no handler is returned by |factory| then the built-in scheme handler factory will be called.
            If |scheme_name| is a custom scheme the cef_register_custom_scheme() function should be called for that scheme.
            This function may be called multiple times to change or remove the factory that matches the specified |scheme_name| and optional |domain_name|.
            Returns false (0) if an error occurs.
            This function may be called on any thread.
            </summary>
        </member>
        <member name="M:CefGlue.Cef.ClearSchemeHandlerFactories">
            <summary>
            Clear all registered scheme handler factories.
            Returns false (0) on error.
            This function may be called on any thread.
            </summary>
        </member>
        <member name="M:CefGlue.Cef.AddCrossOriginWhitelistEntry(System.String,System.String,System.String,System.Boolean)">
             <summary>
             Add an entry to the cross-origin access whitelist.
            
             The same-origin policy restricts how scripts hosted from different
             origins (scheme + domain) can communicate. By default, scripts can
             only access resources with the same origin. Scripts hosted on the
             HTTP and HTTPS schemes (but no other schemes) can use the "Access-
             Control-Allow-Origin" header to allow cross-origin requests. For
             example, https://source.example.com can make XMLHttpRequest requests
             on http://target.example.com if the http://target.example.com request
             returns an "Access-Control-Allow-Origin: https://source.example.com"
             response header.
            
             Scripts in separate frames or iframes and hosted from the same
             protocol and domain suffix can execute cross-origin JavaScript if
             both pages set the document.domain value to the same domain suffix.
             For example, scheme://foo.example.com and scheme://bar.example.com
             can communicate using JavaScript if both domains set
             document.domain="example.com".
            
             This function is used to allow access to origins that would otherwise
             violate the same-origin policy. Scripts hosted underneath the fully
             qualified |source_origin| URL (like http://www.example.com) will be
             allowed access to all resources hosted on the specified
             |target_protocol| and |target_domain|. If |allow_target_subdomains|
             is true (1) access will also be allowed to all subdomains of the
             target domain. This function may be called on any thread. Returns
             false (0) if |source_origin| is invalid or the whitelist cannot be
             accessed.
             </summary>
        </member>
        <member name="M:CefGlue.Cef.RemoveCrossOriginWhitelistEntry(System.String,System.String,System.String,System.Boolean)">
            <summary>
            Remove an entry from the cross-origin access whitelist.
            Returns false (0) if |source_origin| is invalid or the whitelist cannot be accessed.
            </summary>
        </member>
        <member name="M:CefGlue.Cef.ClearCrossOriginWhitelist">
            <summary>
            Remove all entries from the cross-origin access whitelist.
            Returns false (0) if the whitelist cannot be accessed.
            </summary>
        </member>
        <member name="M:CefGlue.Cef.CurrentlyOn(CefGlue.CefThreadId)">
            <summary>
            CEF maintains multiple internal threads that are used for handling
            different types of tasks.
            The UI thread creates the browser window and is used for all interaction with the WebKit rendering engine and V8 JavaScript engine
            (The UI thread will be the same as the main application thread if cef_initialize() is called with a CefSettings.multi_threaded_message_loop value of false (0).)
            The IO thread is used for handling schema and network requests.
            The FILE thread is used for the application cache and other miscellaneous activities.
            This function will return true (1) if called on the specified thread.
            </summary>
        </member>
        <member name="M:CefGlue.Cef.PostTask(CefGlue.CefThreadId,CefGlue.CefTask)">
            <summary>
            Post a task for execution on the specified thread.
            This function may be called on any thread.
            </summary>
        </member>
        <member name="M:CefGlue.Cef.PostTask(CefGlue.CefThreadId,CefGlue.CefTask,System.Int64)">
            <summary>
            Post a task for delayed execution on the specified thread.
            This function may be called on any thread.
            </summary>
        </member>
        <member name="M:CefGlue.Cef.GetWebPluginCount">
            <summary>
            Returns the number of installed web plugins. This function must be
            called on the UI thread.
            </summary>
        </member>
        <member name="M:CefGlue.Cef.GetWebPluginInfo(System.Int32)">
            <summary>
            Returns information for web plugin at the specified zero-based index.
            This function must be called on the UI thread.
            </summary>
        </member>
        <member name="M:CefGlue.Cef.GetWebPluginInfo(System.String)">
            <summary>
            Returns information for web plugin with the specified name. This
            function must be called on the UI thread.
            </summary>
        </member>
        <member name="T:CefGlue.CefHandlerFocusSource">
            <summary>
            Focus sources.
            </summary>
        </member>
        <member name="F:CefGlue.CefHandlerFocusSource.Navigation">
            <summary>
            The source is explicit navigation via the API (LoadURL(), etc).
            </summary>
        </member>
        <member name="F:CefGlue.CefHandlerFocusSource.System">
            <summary>
            The source is a system-generated focus event.
            </summary>
        </member>
        <member name="F:CefGlue.CefHandlerFocusSource.Widget">
            <summary>
            The source is a child widget of the browser window requesting focus.
            </summary>
        </member>
        <member name="T:CefGlue.CefStorageType">
            <summary>
            Storage types.
            </summary>
        </member>
        <member name="M:CefGlue.CefProxyHandler.get_proxy_for_url(CefGlue.Interop.cef_proxy_handler_t*,CefGlue.Interop.cef_string_t*,CefGlue.Interop.cef_proxy_info_t*)">
            <summary>
            Called to retrieve proxy information for the specified |url|.
            </summary>
        </member>
        <member name="M:CefGlue.CefProxyHandler.AddRef">
            <summary>
            The AddRef method increments the reference count for the object.
            It should be called for every new copy of a pointer to a given object.
            The resulting reference count value is returned and should be used for diagnostic/testing purposes only.
            </summary>
        </member>
        <member name="M:CefGlue.CefProxyHandler.ReleaseRef(System.Boolean)">
            <summary>
            The Release method decrements the reference count for the object.
            If the reference count on the object falls to 0, then the object should free itself from memory.
            The resulting reference count value is returned and should be used for diagnostic/testing purposes only.
            </summary>
        </member>
        <member name="P:CefGlue.CefProxyHandler.RefCount">
            <summary>
            Return the current number of references.
            </summary>
        </member>
        <member name="M:CefGlue.CefResourceBundleHandler.get_localized_string(CefGlue.Interop.cef_resource_bundle_handler_t*,System.Int32,CefGlue.Interop.cef_string_t*)">
             <summary>
             Called to retrieve a localized translation for the string specified
             by |message_id|. To provide the translation set |string| to the
             translation string and return true (1). To use the default
             translation return false (0).
            
             WARNING: Be cautious when implementing this function. ID values are
             auto- generated when CEF is built and may change between versions.
             Existing ID values can be discovered by searching for *_strings.h in
             the "obj/global_intermediate" build output directory.
             </summary>
        </member>
        <member name="M:CefGlue.CefResourceBundleHandler.GetLocalizedString(System.Int32,System.String)">
             <summary>
             Called to retrieve a localized translation for the string specified
             by |message_id|. Return null to use the default translation.
            
             WARNING: Be cautious when implementing this function. ID values are
             auto- generated when CEF is built and may change between versions.
             Existing ID values can be discovered by searching for *_strings.h in
             the "obj/global_intermediate" build output directory.
             </summary>
        </member>
        <member name="M:CefGlue.CefResourceBundleHandler.get_data_resource(CefGlue.Interop.cef_resource_bundle_handler_t*,System.Int32,System.Void**,System.Int32*)">
             <summary>
             Called to retrieve data for the resource specified by |resource_id|.
             To provide the resource data set |data| and |data_size| to the data
             pointer and size respectively and return true (1). To use the default
             resource data return false (0). The resource data will not be copied
             and must remain resident in memory.
            
             WARNING: Be cautious when implementing this function. ID values are
             auto- generated when CEF is built and may change between versions.
             Existing ID values can be discovered by searching for *_resources.h
             in the "obj/global_intermediate" build output directory.
             </summary>
        </member>
        <member name="M:CefGlue.CefResourceBundleHandler.AddRef">
            <summary>
            The AddRef method increments the reference count for the object.
            It should be called for every new copy of a pointer to a given object.
            The resulting reference count value is returned and should be used for diagnostic/testing purposes only.
            </summary>
        </member>
        <member name="M:CefGlue.CefResourceBundleHandler.ReleaseRef(System.Boolean)">
            <summary>
            The Release method decrements the reference count for the object.
            If the reference count on the object falls to 0, then the object should free itself from memory.
            The resulting reference count value is returned and should be used for diagnostic/testing purposes only.
            </summary>
        </member>
        <member name="P:CefGlue.CefResourceBundleHandler.RefCount">
            <summary>
            Return the current number of references.
            </summary>
        </member>
        <member name="M:CefGlue.CefV8ContextHandler.AddRef">
            <summary>
            The AddRef method increments the reference count for the object.
            It should be called for every new copy of a pointer to a given object.
            The resulting reference count value is returned and should be used for diagnostic/testing purposes only.
            </summary>
        </member>
        <member name="M:CefGlue.CefV8ContextHandler.ReleaseRef(System.Boolean)">
            <summary>
            The Release method decrements the reference count for the object.
            If the reference count on the object falls to 0, then the object should free itself from memory.
            The resulting reference count value is returned and should be used for diagnostic/testing purposes only.
            </summary>
        </member>
        <member name="P:CefGlue.CefV8ContextHandler.RefCount">
            <summary>
            Return the current number of references.
            </summary>
        </member>
        <member name="M:CefGlue.CefPermissionHandler.on_before_script_extension_load(CefGlue.Interop.cef_permission_handler_t*,CefGlue.Interop.cef_browser_t*,CefGlue.Interop.cef_frame_t*,CefGlue.Interop.cef_string_t*)">
            <summary>
            Called on the UI thread before a script extension is loaded.
            Return false to let the extension load normally.
            </summary>
        </member>
        <member name="M:CefGlue.CefPermissionHandler.OnBeforeScriptExtensionLoad(CefGlue.CefBrowser,CefGlue.CefFrame,System.String)">
            <summary>
            Called on the UI thread before a script extension is loaded.
            Return false to let the extension load normally.
            </summary>
        </member>
        <member name="M:CefGlue.CefPermissionHandler.AddRef">
            <summary>
            The AddRef method increments the reference count for the object.
            It should be called for every new copy of a pointer to a given object.
            The resulting reference count value is returned and should be used for diagnostic/testing purposes only.
            </summary>
        </member>
        <member name="M:CefGlue.CefPermissionHandler.ReleaseRef(System.Boolean)">
            <summary>
            The Release method decrements the reference count for the object.
            If the reference count on the object falls to 0, then the object should free itself from memory.
            The resulting reference count value is returned and should be used for diagnostic/testing purposes only.
            </summary>
        </member>
        <member name="P:CefGlue.CefPermissionHandler.RefCount">
            <summary>
            Return the current number of references.
            </summary>
        </member>
        <member name="M:CefGlue.CefGeolocationHandler.on_request_geolocation_permission(CefGlue.Interop.cef_geolocation_handler_t*,CefGlue.Interop.cef_browser_t*,CefGlue.Interop.cef_string_t*,System.Int32,CefGlue.Interop.cef_geolocation_callback_t*)">
            <summary>
            Called when a page requests permission to access geolocation information.
            |requesting_url| is the URL requesting permission and |request_id| is the
            unique ID for the permission request. Call
            cef_geolocation_callback_t::Continue to allow or deny the permission
            request.
            </summary>
        </member>
        <member name="M:CefGlue.CefGeolocationHandler.on_cancel_geolocation_permission(CefGlue.Interop.cef_geolocation_handler_t*,CefGlue.Interop.cef_browser_t*,CefGlue.Interop.cef_string_t*,System.Int32)">
            <summary>
            Called when a geolocation access request is canceled.
            |requesting_url| is the URL that originally requested permission and
            |request_id| is the unique ID for the permission request.
            </summary>
        </member>
        <member name="M:CefGlue.CefGeolocationHandler.OnCancelGeolocationPermission(CefGlue.CefBrowser,System.String,System.Int32)">
            <summary>
            Called when a geolocation access request is canceled.
            |requesting_url| is the URL that originally requested permission and
            |request_id| is the unique ID for the permission request.
            </summary>
        </member>
        <member name="M:CefGlue.CefGeolocationHandler.AddRef">
            <summary>
            The AddRef method increments the reference count for the object.
            It should be called for every new copy of a pointer to a given object.
            The resulting reference count value is returned and should be used for diagnostic/testing purposes only.
            </summary>
        </member>
        <member name="M:CefGlue.CefGeolocationHandler.ReleaseRef(System.Boolean)">
            <summary>
            The Release method decrements the reference count for the object.
            If the reference count on the object falls to 0, then the object should free itself from memory.
            The resulting reference count value is returned and should be used for diagnostic/testing purposes only.
            </summary>
        </member>
        <member name="P:CefGlue.CefGeolocationHandler.RefCount">
            <summary>
            Return the current number of references.
            </summary>
        </member>
        <member name="M:CefGlue.CefZoomHandler.on_get_zoom_level(CefGlue.Interop.cef_zoom_handler_t*,CefGlue.Interop.cef_browser_t*,CefGlue.Interop.cef_string_t*,System.Double*)">
            <summary>
            Called when the browser wants to retrieve the zoom level for the
            given |url|. Return true (1) if |zoomLevel| has been set to the
            custom zoom level. Return false (0) for the browser's default zoom
            handling behavior.
            </summary>
        </member>
        <member name="M:CefGlue.CefZoomHandler.OnGetZoomLevel(CefGlue.CefBrowser,System.String,System.Double@)">
            <summary>
            Called when the browser wants to retrieve the zoom level for the
            given |url|. Return true if |zoomLevel| has been set to the
            custom zoom level. Return false for the browser's default zoom
            handling behavior.
            </summary>
        </member>
        <member name="M:CefGlue.CefZoomHandler.on_set_zoom_level(CefGlue.Interop.cef_zoom_handler_t*,CefGlue.Interop.cef_browser_t*,CefGlue.Interop.cef_string_t*,System.Double)">
            <summary>
            Called when the browser's zoom level has been set to |zoomLevel| for
            the given |url|. Return true (1) to indicate that the new setting has
            been handled. Return false (0) to use the browser's default zoom
            handling behavior.
            </summary>
        </member>
        <member name="M:CefGlue.CefZoomHandler.OnSetZoomLevel(CefGlue.CefBrowser,System.String,System.Double)">
            <summary>
            Called when the browser's zoom level has been set to |zoomLevel| for
            the given |url|. Return true to indicate that the new setting has
            been handled. Return false to use the browser's default zoom
            handling behavior.
            </summary>
        </member>
        <member name="M:CefGlue.CefZoomHandler.AddRef">
            <summary>
            The AddRef method increments the reference count for the object.
            It should be called for every new copy of a pointer to a given object.
            The resulting reference count value is returned and should be used for diagnostic/testing purposes only.
            </summary>
        </member>
        <member name="M:CefGlue.CefZoomHandler.ReleaseRef(System.Boolean)">
            <summary>
            The Release method decrements the reference count for the object.
            If the reference count on the object falls to 0, then the object should free itself from memory.
            The resulting reference count value is returned and should be used for diagnostic/testing purposes only.
            </summary>
        </member>
        <member name="P:CefGlue.CefZoomHandler.RefCount">
            <summary>
            Return the current number of references.
            </summary>
        </member>
        <member name="T:CefGlue.Interop.cef_menu_id_t">
            <summary>
            Key event types.
            </summary>
        </member>
        <member name="T:CefGlue.Interop.cef_menu_info_t">
            
        </member>
        <member name="F:CefGlue.Interop.cef_menu_info_t.typeFlags">
            
        </member>
        <member name="F:CefGlue.Interop.cef_menu_info_t.x">
            
        </member>
        <member name="F:CefGlue.Interop.cef_menu_info_t.editFlags">
            
        </member>
        <member name="T:CefGlue.Interop.cef_key_info_t">
            
        </member>
        <member name="T:CefGlue.JSBinding.IJSBindingContext">
            <summary>
            Defines methods that provide access to JS binding feature.
            </summary>
        </member>
        <member name="M:CefGlue.CefV8Exception.From(CefGlue.Interop.cef_v8exception_t*)">
            <summary>
            Create CefV8Exception proxy from pointer.
            </summary>
        </member>
        <member name="M:CefGlue.CefV8Exception.AddRef">
            <summary>
            The AddRef method increments the reference count for the object. It should
            be called for every new copy of a pointer to a given object. The resulting
            reference count value is returned and should be used for diagnostic/testing
            purposes only.
            </summary>
        </member>
        <member name="M:CefGlue.CefV8Exception.ReleaseRef">
            <summary>
            The Release method decrements the reference count for the object. If the
            reference count on the object falls to 0, then the object should free
            itself from memory.  The resulting reference count value is returned and
            should be used for diagnostic/testing purposes only.
            </summary>
        </member>
        <member name="P:CefGlue.CefV8Exception.RefCount">
            <summary>
            Return the current number of references.
            </summary>
        </member>
        <member name="M:CefGlue.CefCookieManager.GetGlobalManager">
            <summary>
            Returns the global cookie manager. By default data will be stored at
            CefSettings.CachePath if specified or in memory otherwise.
            </summary>
        </member>
        <member name="M:CefGlue.CefCookieManager.CreateManager(System.String)">
            <summary>
            Creates a new cookie manager. If |path| is empty data will be stored in
            memory only. Returns NULL if creation fails.
            </summary>
        </member>
        <member name="M:CefGlue.CefCookieManager.SetSupportedSchemes(System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Set the schemes supported by this manager. By default only "http" and
            "https" schemes are supported. Must be called before any cookies are
            accessed.
            </summary>
        </member>
        <member name="M:CefGlue.CefCookieManager.VisitAllCookies(CefGlue.CefCookieVisitor)">
            <summary>
            Visit all cookies. The returned cookies are ordered by longest path, then
            by earliest creation date. Returns false if cookies cannot be accessed.
            </summary>
        </member>
        <member name="M:CefGlue.CefCookieManager.VisitUrlCookies(System.String,System.Boolean,CefGlue.CefCookieVisitor)">
            <summary>
            Visit a subset of cookies. The results are filtered by the given url
            scheme, host, domain and path. If |includeHttpOnly| is true HTTP-only
            cookies will also be included in the results. The returned cookies are
            ordered by longest path, then by earliest creation date. Returns false if
            cookies cannot be accessed.
            </summary>
        </member>
        <member name="M:CefGlue.CefCookieManager.SetCookie(System.String,CefGlue.CefCookie)">
            <summary>
            Sets a cookie given a valid URL and explicit user-provided cookie
            attributes. This function expects each attribute to be well-formed. It will
            check for disallowed characters (e.g. the ';' character is disallowed
            within the cookie value attribute) and will return false without setting
            the cookie if such characters are found. This method must be called on the
            IO thread.
            </summary>
        </member>
        <member name="M:CefGlue.CefCookieManager.DeleteCookies(System.String,System.String)">
            <summary>
            Delete all cookies that match the specified parameters. If both |url| and
            values |cookieName| are specified all host and domain cookies matching
            both will be deleted. If only |url| is specified all host cookies (but not
            domain cookies) irrespective of path will be deleted. If |url| is empty all
            cookies for all hosts and domains will be deleted. Returns false if a non-
            empty invalid URL is specified or if cookies cannot be accessed. This
            method must be called on the IO thread.
            </summary>
        </member>
        <member name="M:CefGlue.CefCookieManager.SetStoragePath(System.String)">
            <summary>
            Sets the directory path that will be used for storing cookie data. If
            |path| is empty data will be stored in memory only. Returns false if
            cookies cannot be accessed.
            </summary>
        </member>
        <member name="M:CefGlue.CefCookieManager.From(CefGlue.Interop.cef_cookie_manager_t*)">
            <summary>
            Create CefCookieManager proxy from pointer.
            </summary>
        </member>
        <member name="M:CefGlue.CefCookieManager.AddRef">
            <summary>
            The AddRef method increments the reference count for the object. It should
            be called for every new copy of a pointer to a given object. The resulting
            reference count value is returned and should be used for diagnostic/testing
            purposes only.
            </summary>
        </member>
        <member name="M:CefGlue.CefCookieManager.ReleaseRef">
            <summary>
            The Release method decrements the reference count for the object. If the
            reference count on the object falls to 0, then the object should free
            itself from memory.  The resulting reference count value is returned and
            should be used for diagnostic/testing purposes only.
            </summary>
        </member>
        <member name="P:CefGlue.CefCookieManager.RefCount">
            <summary>
            Return the current number of references.
            </summary>
        </member>
        <member name="M:CefGlue.CefWebPluginInfo.From(CefGlue.Interop.cef_web_plugin_info_t*)">
            <summary>
            Create CefWebPluginInfo proxy from pointer.
            </summary>
        </member>
        <member name="M:CefGlue.CefWebPluginInfo.AddRef">
            <summary>
            The AddRef method increments the reference count for the object. It should
            be called for every new copy of a pointer to a given object. The resulting
            reference count value is returned and should be used for diagnostic/testing
            purposes only.
            </summary>
        </member>
        <member name="M:CefGlue.CefWebPluginInfo.ReleaseRef">
            <summary>
            The Release method decrements the reference count for the object. If the
            reference count on the object falls to 0, then the object should free
            itself from memory.  The resulting reference count value is returned and
            should be used for diagnostic/testing purposes only.
            </summary>
        </member>
        <member name="P:CefGlue.CefWebPluginInfo.Name">
            <summary>
            Returns the plugin name (i.e. Flash).
            </summary>
        </member>
        <member name="P:CefGlue.CefWebPluginInfo.Path">
            <summary>
            Returns the plugin file path (DLL/bundle/library).
            </summary>
        </member>
        <member name="P:CefGlue.CefWebPluginInfo.Version">
            <summary>
            Returns the version of the plugin (may be OS-specific).
            </summary>
        </member>
        <member name="P:CefGlue.CefWebPluginInfo.Description">
            <summary>
            Returns a description of the plugin from the version information.
            </summary>
        </member>
        <member name="P:CefGlue.CefWebPluginInfo.RefCount">
            <summary>
            Return the current number of references.
            </summary>
        </member>
        <member name="M:CefGlue.CefGeolocationCallback.Continue(System.Int32)">
            <summary>
            Call to allow or deny geolocation access.
            </summary>
        </member>
        <member name="M:CefGlue.CefGeolocationCallback.From(CefGlue.Interop.cef_geolocation_callback_t*)">
            <summary>
            Create CefGeolocationCallback proxy from pointer.
            </summary>
        </member>
        <member name="M:CefGlue.CefGeolocationCallback.AddRef">
            <summary>
            The AddRef method increments the reference count for the object. It should
            be called for every new copy of a pointer to a given object. The resulting
            reference count value is returned and should be used for diagnostic/testing
            purposes only.
            </summary>
        </member>
        <member name="M:CefGlue.CefGeolocationCallback.ReleaseRef">
            <summary>
            The Release method decrements the reference count for the object. If the
            reference count on the object falls to 0, then the object should free
            itself from memory.  The resulting reference count value is returned and
            should be used for diagnostic/testing purposes only.
            </summary>
        </member>
        <member name="P:CefGlue.CefGeolocationCallback.RefCount">
            <summary>
            Return the current number of references.
            </summary>
        </member>
        <member name="T:CefGlue.CefMenuInfo">
            <summary>
            Menu information.
            </summary>
        </member>
        <member name="P:CefGlue.CefMenuInfo.X">
            <summary>
            If window rendering is enabled value will be in screen coordinates.
            Otherwise, value will be in view coordinates.
            </summary>
        </member>
        <member name="P:CefGlue.CefMenuInfo.Y">
            <summary>
            If window rendering is enabled value will be in screen coordinates.
            Otherwise, value will be in view coordinates.
            </summary>
        </member>
        <member name="M:CefGlue.CefTask.Post(CefGlue.CefThreadId,CefGlue.CefTask)">
            <summary>
            Post a task for execution on the specified thread.
            This function may be called on any thread.
            </summary>
        </member>
        <member name="M:CefGlue.CefTask.Post(CefGlue.CefThreadId,CefGlue.CefTask,System.Int64)">
            <summary>
            Post a task for delayed execution on the specified thread.
            This function may be called on any thread.
            </summary>
        </member>
        <member name="M:CefGlue.CefTask.Post(CefGlue.CefThreadId,System.Action)">
            <summary>
            Post a task for execution on the specified thread.
            This function may be called on any thread.
            </summary>
        </member>
        <member name="M:CefGlue.CefTask.Post(CefGlue.CefThreadId,System.Action,System.Int64)">
            <summary>
            Post a task for delayed execution on the specified thread.
            This function may be called on any thread.
            </summary>
        </member>
        <member name="M:CefGlue.CefTask.Post(CefGlue.CefThreadId)">
            <summary>
            Post a task for execution on the specified thread.
            This function may be called on any thread.
            </summary>
        </member>
        <member name="M:CefGlue.CefTask.Post(CefGlue.CefThreadId,System.Int64)">
            <summary>
            Post a task for delayed execution on the specified thread.
            This function may be called on any thread.
            </summary>
        </member>
        <member name="M:CefGlue.CefTask.execute(CefGlue.Interop.cef_task_t*,CefGlue.Interop.cef_thread_id_t)">
            <summary>
            Method that will be executed.
            |threadId| is the thread executing the call.
            </summary>
        </member>
        <member name="M:CefGlue.CefTask.Execute(CefGlue.CefThreadId)">
            <summary>
            Method that will be executed.
            </summary>
            <param name="threadId">Thread executing the call.</param>
        </member>
        <member name="M:CefGlue.CefTask.AddRef">
            <summary>
            The AddRef method increments the reference count for the object.
            It should be called for every new copy of a pointer to a given object.
            The resulting reference count value is returned and should be used for diagnostic/testing purposes only.
            </summary>
        </member>
        <member name="M:CefGlue.CefTask.ReleaseRef(System.Boolean)">
            <summary>
            The Release method decrements the reference count for the object.
            If the reference count on the object falls to 0, then the object should free itself from memory.
            The resulting reference count value is returned and should be used for diagnostic/testing purposes only.
            </summary>
        </member>
        <member name="P:CefGlue.CefTask.RefCount">
            <summary>
            Return the current number of references.
            </summary>
        </member>
        <member name="M:CefGlue.WebBrowser.IWebFrame.VisitDom(CefGlue.CefDomVisitor)">
            <summary>
            Visit the DOM document.
            </summary>
        </member>
        <member name="M:CefGlue.WebBrowser.IWebBrowser.Close">
            <summary>
            Closes this browser window. This method will do not block the calling thread.
            </summary>
        </member>
        <member name="M:CefGlue.WebBrowser.IWebBrowser.GoBack">
            <summary>
            Navigate backwards.
            </summary>
        </member>
        <member name="M:CefGlue.WebBrowser.IWebBrowser.GoForward">
            <summary>
            Navigate backwards.
            </summary>
        </member>
        <member name="M:CefGlue.WebBrowser.IWebBrowser.Reload">
            <summary>
            Reload the current page.
            </summary>
        </member>
        <member name="M:CefGlue.WebBrowser.IWebBrowser.Reload(System.Boolean)">
            <summary>
            Reload the current page.
            </summary>
            <param name="ignoreCache">If true - ignoring any cached data.</param>
        </member>
        <member name="M:CefGlue.WebBrowser.IWebBrowser.StopLoad">
            <summary>
            Stop loading the page.
            </summary>
        </member>
        <member name="M:CefGlue.WebBrowser.IWebBrowser.GetFrameNames">
            <summary>
            Returns the names of all existing frames.
            </summary>
        </member>
        <member name="M:CefGlue.WebBrowser.IWebBrowser.ShowDevTools">
            <summary>
            Open developer tools in its own window.
            </summary>
        </member>
        <member name="M:CefGlue.WebBrowser.IWebBrowser.CloseDevTools">
            <summary>
            Explicitly close the developer tools window if one exists for this browser instance.
            </summary>
        </member>
        <member name="M:CefGlue.CefClient.get_life_span_handler(CefGlue.Interop.cef_client_t*)">
            <summary>
            Return the handler for browser life span events.
            </summary>
        </member>
        <member name="M:CefGlue.CefClient.GetLifeSpanHandler">
            <summary>
            Return the handler for browser life span events.
            </summary>
        </member>
        <member name="M:CefGlue.CefClient.get_load_handler(CefGlue.Interop.cef_client_t*)">
            <summary>
            Return the handler for browser load status events.
            </summary>
        </member>
        <member name="M:CefGlue.CefClient.GetLoadHandler">
            <summary>
            Return the handler for browser load status events.
            </summary>
        </member>
        <member name="M:CefGlue.CefClient.get_request_handler(CefGlue.Interop.cef_client_t*)">
            <summary>
            Return the handler for browser request events.
            </summary>
        </member>
        <member name="M:CefGlue.CefClient.GetRequestHandler">
            <summary>
            Return the handler for browser request events.
            </summary>
        </member>
        <member name="M:CefGlue.CefClient.get_display_handler(CefGlue.Interop.cef_client_t*)">
            <summary>
            Return the handler for browser display state events.
            </summary>
        </member>
        <member name="M:CefGlue.CefClient.GetDisplayHandler">
            <summary>
            Return the handler for browser display state events.
            </summary>
        </member>
        <member name="M:CefGlue.CefClient.get_focus_handler(CefGlue.Interop.cef_client_t*)">
            <summary>
            Return the handler for focus events.
            </summary>
        </member>
        <member name="M:CefGlue.CefClient.GetFocusHandler">
            <summary>
            Return the handler for focus events.
            </summary>
        </member>
        <member name="M:CefGlue.CefClient.get_keyboard_handler(CefGlue.Interop.cef_client_t*)">
            <summary>
            Return the handler for keyboard events.
            </summary>
        </member>
        <member name="M:CefGlue.CefClient.GetKeyboardHandler">
            <summary>
            Return the handler for keyboard events.
            </summary>
        </member>
        <member name="M:CefGlue.CefClient.get_menu_handler(CefGlue.Interop.cef_client_t*)">
            <summary>
            Return the handler for context menu events.
            </summary>
        </member>
        <member name="M:CefGlue.CefClient.GetMenuHandler">
            <summary>
            Return the handler for context menu events.
            </summary>
        </member>
        <member name="M:CefGlue.CefClient.get_print_handler(CefGlue.Interop.cef_client_t*)">
            <summary>
            Return the handler for printing events.
            </summary>
        </member>
        <member name="M:CefGlue.CefClient.GetPrintHandler">
            <summary>
            Return the handler for printing events.
            </summary>
        </member>
        <member name="M:CefGlue.CefClient.get_permission_handler(CefGlue.Interop.cef_client_t*)">
            <summary>
            Return the handler for permission events.
            </summary>
        </member>
        <member name="M:CefGlue.CefClient.GetPermissionHandler">
            <summary>
            Return the handler for permission events.
            </summary>
        </member>
        <member name="M:CefGlue.CefClient.get_find_handler(CefGlue.Interop.cef_client_t*)">
            <summary>
            Return the handler for find result events.
            </summary>
        </member>
        <member name="M:CefGlue.CefClient.GetFindHandler">
            <summary>
            Return the handler for find result events.
            </summary>
        </member>
        <member name="M:CefGlue.CefClient.get_jsdialog_handler(CefGlue.Interop.cef_client_t*)">
            <summary>
            Return the handler for JavaScript dialog events.
            </summary>
        </member>
        <member name="M:CefGlue.CefClient.GetJSDialogHandler">
            <summary>
            Return the handler for JavaScript dialog events.
            </summary>
        </member>
        <member name="M:CefGlue.CefClient.get_v8context_handler(CefGlue.Interop.cef_client_t*)">
            <summary>
            Return the handler for JavaScript binding events.
            </summary>
        </member>
        <member name="M:CefGlue.CefClient.GetV8ContextHandler">
            <summary>
            Return the handler for JavaScript binding events.
            </summary>
        </member>
        <member name="M:CefGlue.CefClient.get_render_handler(CefGlue.Interop.cef_client_t*)">
            <summary>
            Return the handler for off-screen rendering events.
            </summary>
        </member>
        <member name="M:CefGlue.CefClient.GetRenderHandler">
            <summary>
            Return the handler for off-screen rendering events.
            </summary>
        </member>
        <member name="M:CefGlue.CefClient.get_drag_handler(CefGlue.Interop.cef_client_t*)">
            <summary>
            Return the handler for drag events.
            </summary>
        </member>
        <member name="M:CefGlue.CefClient.GetDragHandler">
            <summary>
            Return the handler for drag events.
            </summary>
        </member>
        <member name="M:CefGlue.CefClient.get_geolocation_handler(CefGlue.Interop.cef_client_t*)">
            <summary>
            Return the handler for geolocation permissions requests. If no handler is
            provided geolocation access will be denied by default.
            </summary>
        </member>
        <member name="M:CefGlue.CefClient.GetGeolocationHandler">
            <summary>
            Return the handler for geolocation permissions requests. If no handler is
            provided geolocation access will be denied by default.
            </summary>
        </member>
        <member name="M:CefGlue.CefClient.get_zoom_handler(CefGlue.Interop.cef_client_t*)">
            <summary>
            Return the handler for zoom events. If no handler is provided the default
            zoom behavior will be used.
            </summary>
        </member>
        <member name="M:CefGlue.CefClient.GetZoomHandler">
            <summary>
            Return the handler for zoom events. If no handler is provided the default
            zoom behavior will be used.
            </summary>
        </member>
        <member name="M:CefGlue.CefClient.From(CefGlue.Interop.cef_client_t*)">
            <summary>
            This is get object from pointer table, but note that this is works only when object passed to native side (i.e. RefCount > 0).
            </summary>
        </member>
        <member name="M:CefGlue.CefClient.AddRef">
            <summary>
            The AddRef method increments the reference count for the object.
            It should be called for every new copy of a pointer to a given object.
            The resulting reference count value is returned and should be used for diagnostic/testing purposes only.
            </summary>
        </member>
        <member name="M:CefGlue.CefClient.ReleaseRef(System.Boolean)">
            <summary>
            The Release method decrements the reference count for the object.
            If the reference count on the object falls to 0, then the object should free itself from memory.
            The resulting reference count value is returned and should be used for diagnostic/testing purposes only.
            </summary>
        </member>
        <member name="P:CefGlue.CefClient.RefCount">
            <summary>
            Return the current number of references.
            </summary>
        </member>
        <member name="M:CefGlue.CefDisplayHandler.on_nav_state_change(CefGlue.Interop.cef_display_handler_t*,CefGlue.Interop.cef_browser_t*,System.Int32,System.Int32)">
            <summary>
            Called when the navigation state has changed.
            </summary>
        </member>
        <member name="M:CefGlue.CefDisplayHandler.OnNavStateChange(CefGlue.CefBrowser,System.Boolean,System.Boolean)">
            <summary>
            Called when the navigation state has changed.
            </summary>
        </member>
        <member name="M:CefGlue.CefDisplayHandler.on_address_change(CefGlue.Interop.cef_display_handler_t*,CefGlue.Interop.cef_browser_t*,CefGlue.Interop.cef_frame_t*,CefGlue.Interop.cef_string_t*)">
            <summary>
            Called when a frame's address has changed.
            </summary>
        </member>
        <member name="M:CefGlue.CefDisplayHandler.OnAddressChange(CefGlue.CefBrowser,CefGlue.CefFrame,System.String)">
            <summary>
            Called when a frame's address has changed.
            </summary>
        </member>
        <member name="M:CefGlue.CefDisplayHandler.on_contents_size_change(CefGlue.Interop.cef_display_handler_t*,CefGlue.Interop.cef_browser_t*,CefGlue.Interop.cef_frame_t*,System.Int32,System.Int32)">
            <summary>
            Called when the size of the content area has changed.
            </summary>
        </member>
        <member name="M:CefGlue.CefDisplayHandler.OnContentsSizeChange(CefGlue.CefBrowser,CefGlue.CefFrame,System.Int32,System.Int32)">
            <summary>
            Called when the size of the content area has changed.
            </summary>
        </member>
        <member name="M:CefGlue.CefDisplayHandler.on_title_change(CefGlue.Interop.cef_display_handler_t*,CefGlue.Interop.cef_browser_t*,CefGlue.Interop.cef_string_t*)">
            <summary>
            Called when the page title changes.
            </summary>
        </member>
        <member name="M:CefGlue.CefDisplayHandler.OnTitleChange(CefGlue.CefBrowser,System.String)">
            <summary>
            Called when the page title changes.
            </summary>
        </member>
        <member name="M:CefGlue.CefDisplayHandler.on_tooltip(CefGlue.Interop.cef_display_handler_t*,CefGlue.Interop.cef_browser_t*,CefGlue.Interop.cef_string_t*)">
            <summary>
            Called when the browser is about to display a tooltip. |text|
            contains the text that will be displayed in the tooltip. To handle
            the display of the tooltip yourself return true. Otherwise, you can
            optionally modify |text| and then return false to allow the browser
            to display the tooltip.
            </summary>
        </member>
        <member name="M:CefGlue.CefDisplayHandler.OnTooltip(CefGlue.CefBrowser,System.String@)">
            <summary>
            Called when the browser is about to display a tooltip.
            |text| contains the text that will be displayed in the tooltip.
            To handle the display of the tooltip yourself return true.
            Otherwise, you can optionally modify |text| and then return false to allow the browser to display the tooltip.
            </summary>
        </member>
        <member name="M:CefGlue.CefDisplayHandler.on_status_message(CefGlue.Interop.cef_display_handler_t*,CefGlue.Interop.cef_browser_t*,CefGlue.Interop.cef_string_t*,CefGlue.Interop.cef_handler_statustype_t)">
            <summary>
            Called when the browser receives a status message.
            |text| contains the text that will be displayed in the status message and |type| indicates the status message type.
            </summary>
        </member>
        <member name="M:CefGlue.CefDisplayHandler.OnStatusMessage(CefGlue.CefBrowser,System.String,CefGlue.CefHandlerStatusType)">
            <summary>
            Called when the browser receives a status message.
            |text| contains the text that will be displayed in the status message and |type| indicates the status message type.
            </summary>
        </member>
        <member name="M:CefGlue.CefDisplayHandler.on_console_message(CefGlue.Interop.cef_display_handler_t*,CefGlue.Interop.cef_browser_t*,CefGlue.Interop.cef_string_t*,CefGlue.Interop.cef_string_t*,System.Int32)">
            <summary>
            Called to display a console message.
            Return true to stop the message from being output to the console.
            </summary>
        </member>
        <member name="M:CefGlue.CefDisplayHandler.OnConsoleMessage(CefGlue.CefBrowser,System.String,System.String,System.Int32)">
            <summary>
            Called to display a console message.
            Return true to stop the message from being output to the console.
            </summary>
        </member>
        <member name="M:CefGlue.CefDisplayHandler.AddRef">
            <summary>
            The AddRef method increments the reference count for the object.
            It should be called for every new copy of a pointer to a given object.
            The resulting reference count value is returned and should be used for diagnostic/testing purposes only.
            </summary>
        </member>
        <member name="M:CefGlue.CefDisplayHandler.ReleaseRef(System.Boolean)">
            <summary>
            The Release method decrements the reference count for the object.
            If the reference count on the object falls to 0, then the object should free itself from memory.
            The resulting reference count value is returned and should be used for diagnostic/testing purposes only.
            </summary>
        </member>
        <member name="P:CefGlue.CefDisplayHandler.RefCount">
            <summary>
            Return the current number of references.
            </summary>
        </member>
        <member name="M:CefGlue.CefDragHandler.on_drag_start(CefGlue.Interop.cef_drag_handler_t*,CefGlue.Interop.cef_browser_t*,CefGlue.Interop.cef_drag_data_t*,CefGlue.Interop.cef_drag_operations_mask_t)">
            <summary>
            Called when the browser window initiates a drag event. |dragData|
            contains the drag event data and |mask| represents the type of drag
            operation. Return false for default drag handling behavior or true to
            cancel the drag event.
            </summary>
        </member>
        <member name="M:CefGlue.CefDragHandler.OnDragStart(CefGlue.CefBrowser,CefGlue.CefDragData,CefGlue.CefDragOperations)">
            <summary>
            Called when the browser window initiates a drag event.
            |dragData| contains the drag event data and |mask| represents the type of drag
            operation.
            Return false for default drag handling behavior 
            or true to cancel the drag event.
            </summary>
        </member>
        <member name="M:CefGlue.CefDragHandler.on_drag_enter(CefGlue.Interop.cef_drag_handler_t*,CefGlue.Interop.cef_browser_t*,CefGlue.Interop.cef_drag_data_t*,CefGlue.Interop.cef_drag_operations_mask_t)">
            <summary>
            Called when an external drag event enters the browser window.
            |dragData| contains the drag event data and |mask| represents the
            type of drag operation. Return false for default drag handling
            behavior or true to cancel the drag event.
            </summary>
        </member>
        <member name="M:CefGlue.CefDragHandler.OnDragEnter(CefGlue.CefBrowser,CefGlue.CefDragData,CefGlue.CefDragOperations)">
            <summary>
            Called when an external drag event enters the browser window.
            |dragData| contains the drag event data 
            and |mask| represents the type of drag operation.
            Return false for default drag handling behavior
            or true to cancel the drag event.
            </summary>
        </member>
        <member name="M:CefGlue.CefDragHandler.AddRef">
            <summary>
            The AddRef method increments the reference count for the object.
            It should be called for every new copy of a pointer to a given object.
            The resulting reference count value is returned and should be used for diagnostic/testing purposes only.
            </summary>
        </member>
        <member name="M:CefGlue.CefDragHandler.ReleaseRef(System.Boolean)">
            <summary>
            The Release method decrements the reference count for the object.
            If the reference count on the object falls to 0, then the object should free itself from memory.
            The resulting reference count value is returned and should be used for diagnostic/testing purposes only.
            </summary>
        </member>
        <member name="P:CefGlue.CefDragHandler.RefCount">
            <summary>
            Return the current number of references.
            </summary>
        </member>
        <member name="M:CefGlue.CefJSDialogHandler.on_jsalert(CefGlue.Interop.cef_jsdialog_handler_t*,CefGlue.Interop.cef_browser_t*,CefGlue.Interop.cef_frame_t*,CefGlue.Interop.cef_string_t*)">
            <summary>
            Called  to run a JavaScript alert message. Return false to display
            the default alert or true if you displayed a custom alert.
            </summary>
        </member>
        <member name="M:CefGlue.CefJSDialogHandler.OnJSAlert(CefGlue.CefBrowser,CefGlue.CefFrame,System.String)">
            <summary>
            Called to run a JavaScript alert message.
            Return false to display the default alert or true if you displayed a custom alert.
            </summary>
        </member>
        <member name="M:CefGlue.CefJSDialogHandler.on_jsconfirm(CefGlue.Interop.cef_jsdialog_handler_t*,CefGlue.Interop.cef_browser_t*,CefGlue.Interop.cef_frame_t*,CefGlue.Interop.cef_string_t*,System.Int32*)">
            <summary>
            Called to run a JavaScript confirm request. Return false to display
            the default alert or true if you displayed a custom alert. If you
            handled the alert set |retval| to true if the user accepted the
            confirmation.
            </summary>
        </member>
        <member name="M:CefGlue.CefJSDialogHandler.OnJSConfirm(CefGlue.CefBrowser,CefGlue.CefFrame,System.String,System.Boolean@)">
            <summary>
            Called to run a JavaScript confirm request.
            Return false to display the default alert or true if you displayed a custom alert.
            If you handled the alert set |retval| to true if the user accepted the confirmation.
            </summary>
        </member>
        <member name="M:CefGlue.CefJSDialogHandler.on_jsprompt(CefGlue.Interop.cef_jsdialog_handler_t*,CefGlue.Interop.cef_browser_t*,CefGlue.Interop.cef_frame_t*,CefGlue.Interop.cef_string_t*,CefGlue.Interop.cef_string_t*,System.Int32*,CefGlue.Interop.cef_string_t*)">
            <summary>
            Called to run a JavaScript prompt request. Return false to display
            the default prompt or true if you displayed a custom prompt. If you
            handled the prompt set |retval| to true if the user accepted the
            prompt and request and |result| to the resulting value.
            </summary>
        </member>
        <member name="M:CefGlue.CefJSDialogHandler.OnJSPrompt(CefGlue.CefBrowser,CefGlue.CefFrame,System.String,System.String,System.Boolean@,System.String@)">
            <summary>
            Called to run a JavaScript prompt request.
            Return false to display the default prompt or true if you displayed a custom prompt.
            If you handled the prompt set |retval| to true if the user accepted the prompt and request and |result| to the resulting value.
            </summary>
        </member>
        <member name="M:CefGlue.CefJSDialogHandler.AddRef">
            <summary>
            The AddRef method increments the reference count for the object.
            It should be called for every new copy of a pointer to a given object.
            The resulting reference count value is returned and should be used for diagnostic/testing purposes only.
            </summary>
        </member>
        <member name="M:CefGlue.CefJSDialogHandler.ReleaseRef(System.Boolean)">
            <summary>
            The Release method decrements the reference count for the object.
            If the reference count on the object falls to 0, then the object should free itself from memory.
            The resulting reference count value is returned and should be used for diagnostic/testing purposes only.
            </summary>
        </member>
        <member name="P:CefGlue.CefJSDialogHandler.RefCount">
            <summary>
            Return the current number of references.
            </summary>
        </member>
        <member name="M:CefGlue.CefKeyboardHandler.on_key_event(CefGlue.Interop.cef_keyboard_handler_t*,CefGlue.Interop.cef_browser_t*,CefGlue.Interop.cef_handler_keyevent_type_t,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Called when the browser component receives a keyboard event. This method
            is called both before the event is passed to the renderer and after
            JavaScript in the page has had a chance to handle the event. |type| is the
            type of keyboard event, |code| is the windows scan-code for the event,
            |modifiers| is a set of bit- flags describing any pressed modifier keys and
            |isSystemKey| is true if Windows considers this a 'system key' message (see
            http://msdn.microsoft.com/en-us/library/ms646286(VS.85).aspx). If
            |isAfterJavaScript| is true then JavaScript in the page has had a chance
            to handle the event and has chosen not to. Only RAWKEYDOWN, KEYDOWN and
            CHAR events will be sent with |isAfterJavaScript| set to true. Return
            true if the keyboard event was handled or false to allow continued handling
            of the event by the renderer.
            </summary>
        </member>
        <member name="M:CefGlue.CefKeyboardHandler.OnKeyEvent(CefGlue.CefBrowser,CefGlue.CefHandlerKeyEventType,System.Int32,CefGlue.CefHandlerKeyEventModifiers,System.Boolean,System.Boolean)">
            <summary>
            Called when the browser component receives a keyboard event.
            This method is called both before the event is passed to the renderer and after JavaScript in the page has had a chance to handle the event.
            |type| is the type of keyboard event,
            |code| is the windows scan-code for the event,
            |modifiers| is a set of bit- flags describing any pressed modifier keys and
            |isSystemKey| is true if Windows considers this a 'system key' message (see http://msdn.microsoft.com/en-us/library/ms646286(VS.85).aspx).
            If |isAfterJavaScript| is true then JavaScript in the page has had a chance to handle the event and has chosen not to.
            Only RAWKEYDOWN, KEYDOWN and CHAR events will be sent with |isAfterJavaScript| set to true.
            Return true if the keyboard event was handled or false to allow continued handling of the event by the renderer.
            </summary>
        </member>
        <member name="M:CefGlue.CefKeyboardHandler.AddRef">
            <summary>
            The AddRef method increments the reference count for the object.
            It should be called for every new copy of a pointer to a given object.
            The resulting reference count value is returned and should be used for diagnostic/testing purposes only.
            </summary>
        </member>
        <member name="M:CefGlue.CefKeyboardHandler.ReleaseRef(System.Boolean)">
            <summary>
            The Release method decrements the reference count for the object.
            If the reference count on the object falls to 0, then the object should free itself from memory.
            The resulting reference count value is returned and should be used for diagnostic/testing purposes only.
            </summary>
        </member>
        <member name="P:CefGlue.CefKeyboardHandler.RefCount">
            <summary>
            Return the current number of references.
            </summary>
        </member>
        <member name="M:CefGlue.CefLifeSpanHandler.on_before_popup(CefGlue.Interop.cef_life_span_handler_t*,CefGlue.Interop.cef_browser_t*,CefGlue.Interop.cef_popup_features_t*,CefGlue.Interop.cef_window_info_t*,CefGlue.Interop.cef_string_t*,CefGlue.Interop.cef_client_t**,CefGlue.Interop.cef_browser_settings_t*)">
            <summary>
            Called before a new popup window is created.
            The |parentBrowser| parameter will point to the parent browser window.
            The |popupFeatures| parameter will contain information about the style of popup window requested.
            Return false to have the framework create the new popup window based on the parameters in |windowInfo|.
            Return true to cancel creation of the popup window.
            By default, a newly created popup window will have the same client and settings as the parent window.
            To change the client for the new window modify the object that |client| points to.
            To change the settings for the new window modify the |settings| structure.
            </summary>
        </member>
        <member name="M:CefGlue.CefLifeSpanHandler.OnBeforePopup(CefGlue.CefBrowser,CefGlue.CefPopupFeatures,CefGlue.CefWindowInfo,System.String,CefGlue.CefClient@,CefGlue.CefBrowserSettings)">
            <summary>
            Called before a new popup window is created.
            The |parentBrowser| parameter will point to the parent browser window.
            The |popupFeatures| parameter will contain information about the style of popup window requested.
            Return false to have the framework create the new popup window based on the parameters in |windowInfo|.
            Return true to cancel creation of the popup window.
            By default, a newly created popup window will have the same client and settings as the parent window.
            To change the client for the new window modify the object that |client| points to.
            To change the settings for the new window modify the |settings| structure.
            </summary>
        </member>
        <member name="M:CefGlue.CefLifeSpanHandler.on_after_created(CefGlue.Interop.cef_life_span_handler_t*,CefGlue.Interop.cef_browser_t*)">
            <summary>
            Called after a new window is created.
            </summary>
        </member>
        <member name="M:CefGlue.CefLifeSpanHandler.OnAfterCreated(CefGlue.CefBrowser)">
            <summary>
            Called after a new window is created.
            </summary>
        </member>
        <member name="M:CefGlue.CefLifeSpanHandler.run_modal(CefGlue.Interop.cef_life_span_handler_t*,CefGlue.Interop.cef_browser_t*)">
            <summary>
            Called when a modal window is about to display and the modal loop
            should begin running. Return false to use the default modal loop
            implementation or true to use a custom implementation.
            </summary>
        </member>
        <member name="M:CefGlue.CefLifeSpanHandler.RunModal(CefGlue.CefBrowser)">
            <summary>
            Called to enter the modal loop. Provide your own modal loop here.
            Return true if you ran your own modal loop and false to use the default.
            You can also use this event to know when a modal window is about to start.
            </summary>
        </member>
        <member name="M:CefGlue.CefLifeSpanHandler.do_close(CefGlue.Interop.cef_life_span_handler_t*,CefGlue.Interop.cef_browser_t*)">
            <summary>
            Called when a window has recieved a request to close. Return false to
            proceed with the window close or true to cancel the window close. If
            this is a modal window and a custom modal loop implementation was
            provided in RunModal() this callback should be used to restore the
            opener window to a usable state.
            </summary>
        </member>
        <member name="M:CefGlue.CefLifeSpanHandler.DoClose(CefGlue.CefBrowser)">
            <summary>
            Called when a window has recieved a request to close.
            Return false to proceed with the window close or true to cancel the window close.
            If this is a modal window and a custom modal loop implementation was
            provided in RunModal() this callback should be used to restore the
            opener window to a usable state.
            </summary>
        </member>
        <member name="M:CefGlue.CefLifeSpanHandler.on_before_close(CefGlue.Interop.cef_life_span_handler_t*,CefGlue.Interop.cef_browser_t*)">
            <summary>
            Called just before a window is closed.
            If this is a modal window and you handled the RunModal() event you can use this callback to restore the opener window to a usable state.
            </summary>
        </member>
        <member name="M:CefGlue.CefLifeSpanHandler.OnBeforeClose(CefGlue.CefBrowser)">
            <summary>
            Called just before a window is closed.
            If this is a modal window and you handled the RunModal() event you can use this callback to restore the opener window to a usable state.
            </summary>
        </member>
        <member name="M:CefGlue.CefLifeSpanHandler.AddRef">
            <summary>
            The AddRef method increments the reference count for the object.
            It should be called for every new copy of a pointer to a given object.
            The resulting reference count value is returned and should be used for diagnostic/testing purposes only.
            </summary>
        </member>
        <member name="M:CefGlue.CefLifeSpanHandler.ReleaseRef(System.Boolean)">
            <summary>
            The Release method decrements the reference count for the object.
            If the reference count on the object falls to 0, then the object should free itself from memory.
            The resulting reference count value is returned and should be used for diagnostic/testing purposes only.
            </summary>
        </member>
        <member name="P:CefGlue.CefLifeSpanHandler.RefCount">
            <summary>
            Return the current number of references.
            </summary>
        </member>
        <member name="M:CefGlue.CefLoadHandler.on_load_start(CefGlue.Interop.cef_load_handler_t*,CefGlue.Interop.cef_browser_t*,CefGlue.Interop.cef_frame_t*)">
            <summary>
            Called when the browser begins loading a frame. The |frame| value
            will never be empty -- call the IsMain() method to check if this
            frame is the main frame. Multiple frames may be loading at the same
            time. Sub-frames may start or continue loading after the main frame
            load has ended. This method may not be called for a particular frame
            if the load request for that frame fails.
            </summary>
        </member>
        <member name="M:CefGlue.CefLoadHandler.OnLoadStart(CefGlue.CefBrowser,CefGlue.CefFrame)">
            <summary>
            Called when the browser begins loading a frame.
            The |frame| value will never be empty -- call the IsMain() method to check if this frame is the main frame.
            Multiple frames may be loading at the same time.
            Sub-frames may start or continue loading after the main frame load has ended.
            This method may not be called for a particular frame if the load request for that frame fails.
            </summary>
        </member>
        <member name="M:CefGlue.CefLoadHandler.on_load_end(CefGlue.Interop.cef_load_handler_t*,CefGlue.Interop.cef_browser_t*,CefGlue.Interop.cef_frame_t*,System.Int32)">
            <summary>
            Called when the browser is done loading a frame. The |frame| value
            will never be empty -- call the IsMain() method to check if this
            frame is the main frame. Multiple frames may be loading at the same
            time. Sub-frames may start or continue loading after the main frame
            load has ended. This method will always be called for all frames
            irrespective of whether the request completes successfully.
            </summary>
        </member>
        <member name="M:CefGlue.CefLoadHandler.OnLoadEnd(CefGlue.CefBrowser,CefGlue.CefFrame,System.Int32)">
            <summary>
            Called when the browser is done loading a frame.
            The |frame| value will never be empty -- call the IsMain() method to check if this frame is the main frame.
            Multiple frames may be loading at the same time.
            Sub-frames may start or continue loading after the main frame load has ended.
            This method will always be called for all frames irrespective of whether the request completes successfully.
            </summary>
        </member>
        <member name="M:CefGlue.CefLoadHandler.on_load_error(CefGlue.Interop.cef_load_handler_t*,CefGlue.Interop.cef_browser_t*,CefGlue.Interop.cef_frame_t*,CefGlue.Interop.cef_handler_errorcode_t,CefGlue.Interop.cef_string_t*,CefGlue.Interop.cef_string_t*)">
            <summary>
            Called when the browser fails to load a resource. |errorCode| is the
            error code number and |failedUrl| is the URL that failed to load. To
            provide custom error text assign the text to |errorText| and return
            true. Otherwise, return false for the default error text. See
            net\base\net_error_list.h for complete descriptions of the error
            codes.
            </summary>
        </member>
        <member name="M:CefGlue.CefLoadHandler.OnLoadError(CefGlue.CefBrowser,CefGlue.CefFrame,CefGlue.CefHandlerErrorCode,System.String,System.String@)">
            <summary>
            Called when the browser fails to load a resource.
            |errorCode| is the error code number and |failedUrl| is the URL that failed to load.
            To provide custom error text assign the text to |errorText| and return true.
            Otherwise, return false for the default error text.
            See net\base\net_error_list.h for complete descriptions of the error codes.
            </summary>
        </member>
        <member name="M:CefGlue.CefLoadHandler.AddRef">
            <summary>
            The AddRef method increments the reference count for the object.
            It should be called for every new copy of a pointer to a given object.
            The resulting reference count value is returned and should be used for diagnostic/testing purposes only.
            </summary>
        </member>
        <member name="M:CefGlue.CefLoadHandler.ReleaseRef(System.Boolean)">
            <summary>
            The Release method decrements the reference count for the object.
            If the reference count on the object falls to 0, then the object should free itself from memory.
            The resulting reference count value is returned and should be used for diagnostic/testing purposes only.
            </summary>
        </member>
        <member name="P:CefGlue.CefLoadHandler.RefCount">
            <summary>
            Return the current number of references.
            </summary>
        </member>
        <member name="M:CefGlue.CefContentFilter.process_data(CefGlue.Interop.cef_content_filter_t*,System.Void*,System.Int32,CefGlue.Interop.cef_stream_reader_t**)">
            <summary>
            Set |substitute_data| to the replacement for the data in |data| if
            data should be modified.
            </summary>
        </member>
        <member name="M:CefGlue.CefContentFilter.ProcessData(System.IO.Stream,CefGlue.CefStreamReader@)">
            <summary>
            Set |substitute_data| to the replacement for the data in |data| if data should be modified.
            </summary>
        </member>
        <member name="M:CefGlue.CefContentFilter.drain(CefGlue.Interop.cef_content_filter_t*,CefGlue.Interop.cef_stream_reader_t**)">
            <summary>
            Called when there is no more data to be processed. It is expected
            that whatever data was retained in the last ProcessData() call, it
            should be returned now by setting |remainder| if appropriate.
            </summary>
        </member>
        <member name="M:CefGlue.CefContentFilter.Drain(CefGlue.CefStreamReader@)">
            <summary>
            Called when there is no more data to be processed.
            It is expected that whatever data was retained in the last ProcessData() call,
            it should be returned now by setting |remainder| if appropriate.
            </summary>
        </member>
        <member name="M:CefGlue.CefContentFilter.AddRef">
            <summary>
            The AddRef method increments the reference count for the object.
            It should be called for every new copy of a pointer to a given object.
            The resulting reference count value is returned and should be used for diagnostic/testing purposes only.
            </summary>
        </member>
        <member name="M:CefGlue.CefContentFilter.ReleaseRef(System.Boolean)">
            <summary>
            The Release method decrements the reference count for the object.
            If the reference count on the object falls to 0, then the object should free itself from memory.
            The resulting reference count value is returned and should be used for diagnostic/testing purposes only.
            </summary>
        </member>
        <member name="P:CefGlue.CefContentFilter.RefCount">
            <summary>
            Return the current number of references.
            </summary>
        </member>
        <member name="M:CefGlue.CefRequestHandler.on_before_browse(CefGlue.Interop.cef_request_handler_t*,CefGlue.Interop.cef_browser_t*,CefGlue.Interop.cef_frame_t*,CefGlue.Interop.cef_request_t*,CefGlue.Interop.cef_handler_navtype_t,System.Int32)">
            <summary>
            Called on the UI thread before browser navigation. Return true to
            cancel the navigation or false to allow the navigation to proceed.
            </summary>
        </member>
        <member name="M:CefGlue.CefRequestHandler.OnBeforeBrowse(CefGlue.CefBrowser,CefGlue.CefFrame,CefGlue.CefRequest,CefGlue.CefHandlerNavType,System.Boolean)">
            <summary>
            Called on the UI thread before browser navigation.
            Return true to cancel the navigation 
            or false to allow the navigation to proceed.
            </summary>
        </member>
        <member name="M:CefGlue.CefRequestHandler.on_before_resource_load(CefGlue.Interop.cef_request_handler_t*,CefGlue.Interop.cef_browser_t*,CefGlue.Interop.cef_request_t*,CefGlue.Interop.cef_string_t*,CefGlue.Interop.cef_stream_reader_t**,CefGlue.Interop.cef_response_t*,System.Int32)">
            <summary>
            Called on the IO thread before a resource is loaded.  To allow the
            resource to load normally return false. To redirect the resource to a
            new url populate the |redirectUrl| value and return false.  To
            specify data for the resource return a CefStream object in
            |resourceStream|, use the |response| object to set mime type, HTTP
            status code and optional header values, and return false. To cancel
            loading of the resource return true. Any modifications to |request|
            will be observed.  If the URL in |request| is changed and
            |redirectUrl| is also set, the URL in |request| will be used.
            </summary>
        </member>
        <member name="M:CefGlue.CefRequestHandler.on_resource_redirect(CefGlue.Interop.cef_request_handler_t*,CefGlue.Interop.cef_browser_t*,CefGlue.Interop.cef_string_t*,CefGlue.Interop.cef_string_t*)">
            <summary>
            Called on the IO thread when a resource load is redirected. The
            |old_url| parameter will contain the old URL. The |new_url| parameter
            will contain the new URL and can be changed if desired.
            </summary>
        </member>
        <member name="M:CefGlue.CefRequestHandler.OnResourceRedirect(CefGlue.CefBrowser,System.String,System.String)">
            <summary>
            Called on the IO thread when a resource load is redirected. The
            |old_url| parameter will contain the old URL. The |new_url| parameter
            will contain the new URL and can be changed if desired.
            </summary>
        </member>
        <member name="M:CefGlue.CefRequestHandler.OnBeforeResourceLoad(CefGlue.CefBrowser,CefGlue.CefRequest,System.String@,CefGlue.CefStreamReader@,CefGlue.CefResponse,System.Int32)">
            <summary>
            Called on the IO thread before a resource is loaded.
            To allow the resource to load normally return false.
            To redirect the resource to a new url populate the |redirectUrl| value and return false.
            To specify data for the resource return a CefStream object in |resourceStream|,
            use the |response| object to set mime type, HTTP status code and optional header values, and return false.
            To cancel loading of the resource return true.
            Any modifications to |request| will be observed.
            If the URL in |request| is changed and |redirectUrl| is also set, the URL in |request| will be used.
            </summary>
        </member>
        <member name="M:CefGlue.CefRequestHandler.on_resource_response(CefGlue.Interop.cef_request_handler_t*,CefGlue.Interop.cef_browser_t*,CefGlue.Interop.cef_string_t*,CefGlue.Interop.cef_response_t*,CefGlue.Interop.cef_content_filter_t**)">
            <summary>
            Called on the UI thread after a response to the resource request is
            received. Set |filter| if response content needs to be monitored
            and/or modified as it arrives.
            </summary>
        </member>
        <member name="M:CefGlue.CefRequestHandler.OnResourceResponse(CefGlue.CefBrowser,System.String,CefGlue.CefResponse,CefGlue.CefContentFilter@)">
            <summary>
            Called on the UI thread after a response to the resource request is received.
            Set |filter| if response content needs to be monitored and/or modified as it arrives.
            </summary>
        </member>
        <member name="M:CefGlue.CefRequestHandler.on_protocol_execution(CefGlue.Interop.cef_request_handler_t*,CefGlue.Interop.cef_browser_t*,CefGlue.Interop.cef_string_t*,System.Int32*)">
            <summary>
            Called on the IO thread to handle requests for URLs with an unknown
            protocol component. Return true to indicate that the request should
            succeed because it was handled externally. Set |allowOSExecution| to
            true and return false to attempt execution via the registered OS
            protocol handler, if any. If false is returned and either
            |allow_os_execution| is false or OS protocol handler execution fails
            then the request will fail with an error condition. SECURITY WARNING:
            YOU SHOULD USE THIS METHOD TO ENFORCE RESTRICTIONS BASED ON SCHEME,
            HOST OR OTHER URL ANALYSIS BEFORE ALLOWING OS EXECUTION.
            </summary>
        </member>
        <member name="M:CefGlue.CefRequestHandler.OnProtocolExecution(CefGlue.CefBrowser,System.String,System.Boolean@)">
            <summary>
            Called on the IO thread to handle requests for URLs with an unknown protocol component.
            Return true to indicate that the request should succeed because it was handled externally.
            Set |allowOSExecution| to true and return false to attempt execution via the registered OS protocol handler, if any.
            If false is returned and either |allow_os_execution| is false or OS protocol handler execution fails then the request will fail with an error condition.
            SECURITY WARNING: YOU SHOULD USE THIS METHOD TO ENFORCE RESTRICTIONS BASED ON SCHEME, HOST OR OTHER URL ANALYSIS BEFORE ALLOWING OS EXECUTION.
            </summary>
        </member>
        <member name="M:CefGlue.CefRequestHandler.get_download_handler(CefGlue.Interop.cef_request_handler_t*,CefGlue.Interop.cef_browser_t*,CefGlue.Interop.cef_string_t*,CefGlue.Interop.cef_string_t*,System.Int64,CefGlue.Interop.cef_download_handler_t**)">
            <summary>
            Called on the UI thread when a server indicates via the 'Content-
            Disposition' header that a response represents a file to download.
            |mimeType| is the mime type for the download, |fileName| is the
            suggested target file name and |contentLength| is either the value of
            the 'Content-Size' header or -1 if no size was provided. Set
            |handler| to the CefDownloadHandler instance that will recieve the
            file contents. Return true to download the file or false to cancel
            the file download.
            </summary>
        </member>
        <member name="M:CefGlue.CefRequestHandler.GetDownloadHandler(CefGlue.CefBrowser,System.String,System.String,System.Int64,CefGlue.CefDownloadHandler@)">
            <summary>
            Called on the UI thread when a server indicates via the 'Content-Disposition' header that a response represents a file to download.
            |mimeType| is the mime type for the download,
            |fileName| is the suggested target file name 
            and |contentLength| is either the value of the 'Content-Size' header or -1 if no size was provided.
            Set |handler| to the CefDownloadHandler instance that will recieve the file contents.
            Return true to download the file or false to cancel the file download.
            </summary>
        </member>
        <member name="M:CefGlue.CefRequestHandler.get_auth_credentials(CefGlue.Interop.cef_request_handler_t*,CefGlue.Interop.cef_browser_t*,System.Int32,CefGlue.Interop.cef_string_t*,System.Int32,CefGlue.Interop.cef_string_t*,CefGlue.Interop.cef_string_t*,CefGlue.Interop.cef_string_t*,CefGlue.Interop.cef_string_t*)">
            <summary>
            Called on the IO thread when the browser needs credentials from the
            user. |isProxy| indicates whether the host is a proxy server. |host|
            contains the hostname and port number. Set |username| and |password|
            and return true to handle the request. Return false to cancel the
            request.
            </summary>
        </member>
        <member name="M:CefGlue.CefRequestHandler.GetAuthCredentials(CefGlue.CefBrowser,System.Boolean,System.String,System.Int32,System.String,System.String,System.String@,System.String@)">
            <summary>
            Called on the IO thread when the browser needs credentials from the user. 
            |isProxy| indicates whether the host is a proxy server.
            |host| contains the hostname and port number.
            Set |username| and |password| and return true to handle the request.
            Return false to cancel the request.
            </summary>
        </member>
        <member name="M:CefGlue.CefRequestHandler.get_cookie_manager(CefGlue.Interop.cef_request_handler_t*,CefGlue.Interop.cef_browser_t*,CefGlue.Interop.cef_string_t*)">
            <summary>
            Called on the IO thread to retrieve the cookie manager. |main_url| is the
            URL of the top-level frame. Cookies managers can be unique per browser or
            shared across multiple browsers. The global cookie manager will be used if
            this method returns NULL.
            </summary>
        </member>
        <member name="M:CefGlue.CefRequestHandler.GetCookieManager(CefGlue.CefBrowser,System.String)">
            <summary>
            Called on the IO thread to retrieve the cookie manager. |main_url| is the
            URL of the top-level frame. Cookies managers can be unique per browser or
            shared across multiple browsers. The global cookie manager will be used if
            this method returns NULL.
            </summary>
        </member>
        <member name="M:CefGlue.CefRequestHandler.AddRef">
            <summary>
            The AddRef method increments the reference count for the object.
            It should be called for every new copy of a pointer to a given object.
            The resulting reference count value is returned and should be used for diagnostic/testing purposes only.
            </summary>
        </member>
        <member name="M:CefGlue.CefRequestHandler.ReleaseRef(System.Boolean)">
            <summary>
            The Release method decrements the reference count for the object.
            If the reference count on the object falls to 0, then the object should free itself from memory.
            The resulting reference count value is returned and should be used for diagnostic/testing purposes only.
            </summary>
        </member>
        <member name="P:CefGlue.CefRequestHandler.RefCount">
            <summary>
            Return the current number of references.
            </summary>
        </member>
        <member name="T:CefGlue.CefDragOperations">
            <summary>
            "Verb" of a drag-and-drop operation as negotiated between the source and destination.
            These constants match their equivalents in WebCore's DragActions.h and should not be renumbered.
            </summary>
        </member>
        <member name="M:CefGlue.CefDragData.GetLinkURL">
            <summary>
            Return the link URL that is being dragged.
            </summary>
        </member>
        <member name="M:CefGlue.CefDragData.GetLinkTitle">
            <summary>
            Return the title associated with the link being dragged.
            </summary>
        </member>
        <member name="M:CefGlue.CefDragData.GetLinkMetadata">
            <summary>
            Return the metadata, if any, associated with the link being dragged.
            </summary>
        </member>
        <member name="M:CefGlue.CefDragData.GetFragmentText">
            <summary>
            Return the plain text fragment that is being dragged.
            </summary>
        </member>
        <member name="M:CefGlue.CefDragData.GetFragmentHtml">
            <summary>
            Return the text/html fragment that is being dragged.
            </summary>
        </member>
        <member name="M:CefGlue.CefDragData.GetFragmentBaseURL">
            <summary>
            Return the base URL that the fragment came from. This value is used
            for resolving relative URLs and may be empty.
            </summary>
        </member>
        <member name="M:CefGlue.CefDragData.GetFileName">
            <summary>
            Return the name of the file being dragged out of the browser window.
            </summary>
        </member>
        <member name="M:CefGlue.CefDragData.GetFileNames">
            <summary>
            Retrieve the list of file names that are being dragged into the
            browser window.
            </summary>
        </member>
        <member name="M:CefGlue.CefDragData.From(CefGlue.Interop.cef_drag_data_t*)">
            <summary>
            Create CefDragData proxy from pointer.
            </summary>
        </member>
        <member name="M:CefGlue.CefDragData.AddRef">
            <summary>
            The AddRef method increments the reference count for the object. It should
            be called for every new copy of a pointer to a given object. The resulting
            reference count value is returned and should be used for diagnostic/testing
            purposes only.
            </summary>
        </member>
        <member name="M:CefGlue.CefDragData.ReleaseRef">
            <summary>
            The Release method decrements the reference count for the object. If the
            reference count on the object falls to 0, then the object should free
            itself from memory.  The resulting reference count value is returned and
            should be used for diagnostic/testing purposes only.
            </summary>
        </member>
        <member name="P:CefGlue.CefDragData.IsLink">
            <summary>
            Returns true if the drag data is a link.
            </summary>
        </member>
        <member name="P:CefGlue.CefDragData.IsFragment">
            <summary>
            Returns true if the drag data is a text or html fragment.
            </summary>
        </member>
        <member name="P:CefGlue.CefDragData.IsFile">
            <summary>
            Returns true if the drag data is a file.
            </summary>
        </member>
        <member name="P:CefGlue.CefDragData.RefCount">
            <summary>
            Return the current number of references.
            </summary>
        </member>
        <member name="M:CefGlue.CefSchemeHandlerCallback.HeadersAvailable">
            <summary>
            Notify that header information is now available for retrieval.
            </summary>
        </member>
        <member name="M:CefGlue.CefSchemeHandlerCallback.BytesAvailable">
            <summary>
            Notify that response data is now available for reading.
            </summary>
        </member>
        <member name="M:CefGlue.CefSchemeHandlerCallback.Cancel">
            <summary>
            Cancel processing of the request.
            </summary>
        </member>
        <member name="M:CefGlue.CefSchemeHandlerCallback.From(CefGlue.Interop.cef_scheme_handler_callback_t*)">
            <summary>
            Create CefSchemeHandlerCallback proxy from pointer.
            </summary>
        </member>
        <member name="M:CefGlue.CefSchemeHandlerCallback.AddRef">
            <summary>
            The AddRef method increments the reference count for the object. It should
            be called for every new copy of a pointer to a given object. The resulting
            reference count value is returned and should be used for diagnostic/testing
            purposes only.
            </summary>
        </member>
        <member name="M:CefGlue.CefSchemeHandlerCallback.ReleaseRef">
            <summary>
            The Release method decrements the reference count for the object. If the
            reference count on the object falls to 0, then the object should free
            itself from memory.  The resulting reference count value is returned and
            should be used for diagnostic/testing purposes only.
            </summary>
        </member>
        <member name="P:CefGlue.CefSchemeHandlerCallback.RefCount">
            <summary>
            Return the current number of references.
            </summary>
        </member>
        <member name="F:CefGlue.JSBinding.NamingConvention.CamelCase">
            <summary>
            camelCase
            </summary>
        </member>
        <member name="F:CefGlue.JSBinding.NamingConvention.PascalCase">
            <summary>
            PascalCase
            </summary>
        </member>
        <member name="F:CefGlue.JSBinding.MethodInvokerBuilder.ForceVoidToUndefined">
            <summary>
            Forces a return V8.Undefined for void return type.
            If CEF issue #329 (http://code.google.com/p/chromiumembedded/issues/detail?id=329) 
            will be fixed then this value must be false.
            </summary>
        </member>
        <member name="F:CefGlue.JSBinding.JSBindingOptions.Extension">
            <summary>
            Register object using v8 extension.
            </summary>
            <remarks>
            Objects registered as extension will be bound to any browser or frame, and not depended from <c>Popups</c> or <c>Frames</c> flag.
            </remarks>
        </member>
        <member name="F:CefGlue.JSBinding.JSBindingOptions.LazyCompile">
            <summary>
            Lazy compilation of method marshallers.
            </summary>
            <remarks>
            Use this with caution:
            
            By default, all method marshallers will be compiled when you get object binder (register object).
            In this case if compilation fails - you got exception and binder will not be created (object will not be registered).
            
            If you set LazyCompile options - method marshallers will be compiled, when actuall call performed.
            In this case if compilation fails - you got exception of method invokation (i.e. called method throw exception).
            </remarks>
        </member>
        <member name="F:CefGlue.JSBinding.JSBindingOptions.Popups">
            <summary>
            If this flag is set, then object will be bound to popup windows.
            </summary>
        </member>
        <member name="F:CefGlue.JSBinding.JSBindingOptions.Frames">
            <summary>
            If this flag is set, then object will be bound to all frames in browser.
            </summary>
        </member>
        <member name="F:CefGlue.JSBinding.JSBindingOptions.Public">
            <summary>
            Bind public methods.
            </summary>
        </member>
        <member name="M:CefGlue.CefV8Accessor.get(CefGlue.Interop.cef_v8accessor_t*,CefGlue.Interop.cef_string_t*,CefGlue.Interop.cef_v8value_t*,CefGlue.Interop.cef_v8value_t**,CefGlue.Interop.cef_string_t*)">
            <summary>
            Called to get an accessor value. |name| is the name of the property
            being accessed. |object| is the This() object from V8's AccessorInfo
            structure. |retval| is the value to return for this property. Return
            true if handled.
            </summary>
        </member>
        <member name="M:CefGlue.CefV8Accessor.Get(System.String,CefGlue.CefV8Value,CefGlue.CefV8Value@,System.String@)">
            <summary>
            Called to get an accessor value.
            |name| is the name of the property being accessed.
            |object| is the This() object from V8's AccessorInfo structure.
            |retval| is the value to return for this property.
            Return true if handled.
            </summary>
        </member>
        <member name="M:CefGlue.CefV8Accessor.set(CefGlue.Interop.cef_v8accessor_t*,CefGlue.Interop.cef_string_t*,CefGlue.Interop.cef_v8value_t*,CefGlue.Interop.cef_v8value_t*,CefGlue.Interop.cef_string_t*)">
            <summary>
            Called to set an accessor value. |name| is the name of the property
            being accessed. |value| is the new value being assigned to this
            property. |object| is the This() object from V8's AccessorInfo
            structure. Return true if handled.
            </summary>
        </member>
        <member name="M:CefGlue.CefV8Accessor.Set(System.String,CefGlue.CefV8Value,CefGlue.CefV8Value,System.String@)">
            <summary>
            Called to set an accessor value.
            |name| is the name of the property being accessed.
            |value| is the new value being assigned to this property.
            |object| is the This() object from V8's AccessorInfo structure.
            Return true if handled.
            </summary>
        </member>
        <member name="M:CefGlue.CefV8Accessor.AddRef">
            <summary>
            The AddRef method increments the reference count for the object.
            It should be called for every new copy of a pointer to a given object.
            The resulting reference count value is returned and should be used for diagnostic/testing purposes only.
            </summary>
        </member>
        <member name="M:CefGlue.CefV8Accessor.ReleaseRef(System.Boolean)">
            <summary>
            The Release method decrements the reference count for the object.
            If the reference count on the object falls to 0, then the object should free itself from memory.
            The resulting reference count value is returned and should be used for diagnostic/testing purposes only.
            </summary>
        </member>
        <member name="P:CefGlue.CefV8Accessor.RefCount">
            <summary>
            Return the current number of references.
            </summary>
        </member>
        <member name="M:CefGlue.JSBinding.ScriptableObjectV8Accessor.#ctor(CefGlue.JSBinding.ScriptableObjectBinder,System.Object)">
            <summary>
            If instance == null -> then object reference will be got from object's userdata.
            Otherwise userdata ignored.
            </summary>
        </member>
        <member name="F:CefGlue.JSBinding.MethodDefAttributes.Hidden">
            <summary>
            Hidden method.
            Hidden methods can't be invoked from script directly.
            </summary>
            <remarks>
            Property accessors (Getter, Setter) must have this flag set.
            Note, that V8 extensions ignore this flag if Getter or Setter flag is set.
            </remarks>
        </member>
        <member name="F:CefGlue.JSBinding.MethodDefAttributes.Getter">
            <summary>
            Property getter method.
            </summary>
        </member>
        <member name="F:CefGlue.JSBinding.MethodDefAttributes.Setter">
            <summary>
            Property setter method.
            </summary>
        </member>
        <member name="F:CefGlue.JSBinding.MethodDefAttributes.Static">
            <summary>
            Static method.
            </summary>
        </member>
        <member name="F:CefGlue.JSBinding.MethodDefAttributes.HasOverloads">
            <summary>
            Method has overloads.
            </summary>
        </member>
        <member name="F:CefGlue.JSBinding.MethodDefAttributes.Compiled">
            <summary>
            Method compiled.
            </summary>
        </member>
        <member name="M:CefGlue.CefV8Handler.execute(CefGlue.Interop.cef_v8handler_t*,CefGlue.Interop.cef_string_t*,CefGlue.Interop.cef_v8value_t*,System.Int32,CefGlue.Interop.cef_v8value_t**,CefGlue.Interop.cef_v8value_t**,CefGlue.Interop.cef_string_t*)">
            <summary>
            Execute with the specified argument list and return value. Return
            true if the method was handled. To invoke V8 callback functions
            outside the scope of this method you need to keep references to the
            current V8 context (CefV8Context) along with any necessary callback
            objects.
            </summary>
        </member>
        <member name="M:CefGlue.CefV8Handler.Execute(System.String,CefGlue.CefV8Value,CefGlue.CefV8Value[],CefGlue.CefV8Value@,System.String@)">
            <summary>
            Execute with the specified argument list and return value.
            Return true if the method was handled.
            To invoke V8 callback functions outside the scope of this method you need to keep references to the current V8 context (CefV8Context) along with any necessary callback objects.
            </summary>
        </member>
        <member name="M:CefGlue.CefV8Handler.From(CefGlue.Interop.cef_v8handler_t*)">
            <summary>
            This is get object from pointer table, but note that this is works only when object passed to native side (i.e. RefCount > 0).
            </summary>
        </member>
        <member name="M:CefGlue.CefV8Handler.AddRef">
            <summary>
            The AddRef method increments the reference count for the object.
            It should be called for every new copy of a pointer to a given object.
            The resulting reference count value is returned and should be used for diagnostic/testing purposes only.
            </summary>
        </member>
        <member name="M:CefGlue.CefV8Handler.ReleaseRef(System.Boolean)">
            <summary>
            The Release method decrements the reference count for the object.
            If the reference count on the object falls to 0, then the object should free itself from memory.
            The resulting reference count value is returned and should be used for diagnostic/testing purposes only.
            </summary>
        </member>
        <member name="P:CefGlue.CefV8Handler.RefCount">
            <summary>
            Return the current number of references.
            </summary>
        </member>
        <member name="M:CefGlue.JSBinding.ScriptableObjectV8Handler.#ctor(CefGlue.JSBinding.ScriptableObjectBinder,System.Object,System.Boolean)">
            <summary>
            If instance == null -> then object reference will be got from object's userdata.
            Otherwise userdata ignored.
            </summary>
        </member>
        <member name="M:CefGlue.JSBinding.DispatchTable`1.Clear">
            <summary>
            Clears table content.
            </summary>
        </member>
        <member name="M:CefGlue.JSBinding.DispatchTable`1.Optimize">
            <summary>
            Optimizes internal structures.
            </summary>
        </member>
        <member name="T:CefGlue.CefDomDocumentType">
            <summary>
            DOM document types.
            </summary>
        </member>
        <member name="T:CefGlue.CefDomEventCategory">
            <summary>
            DOM event category flags.
            </summary>
        </member>
        <member name="T:CefGlue.CefDomEventPhase">
            <summary>
            DOM event processing phases.
            </summary>
        </member>
        <member name="T:CefGlue.CefDomNodeType">
            <summary>
            DOM node types.
            </summary>
        </member>
        <member name="T:CefGlue.CefHandlerKeyEventModifiers">
            <summary>
            Key event modifiers.
            </summary>
        </member>
        <member name="T:CefGlue.CefHandlerKeyEventType">
            <summary>
            Key event types.
            </summary>
        </member>
        <member name="T:CefGlue.CefHandlerMenuCapabilityBits">
            <summary>
            The cef_handler_menuinfo_t editFlags value will be a combination of the following values.
            </summary>
        </member>
        <member name="T:CefGlue.CefHandlerMenuId">
            <summary>
            Supported menu ID values.
            </summary>
        </member>
        <member name="T:CefGlue.CefHandlerMenuTypeBits">
            <summary>
            The cef_menu_info_t typeFlags value will be a combination of the following values.
            </summary>
        </member>
        <member name="F:CefGlue.CefHandlerMenuTypeBits.None">
            <summary>
            No node is selected
            </summary>
        </member>
        <member name="F:CefGlue.CefHandlerMenuTypeBits.Page">
            <summary>
            The top page is selected
            </summary>
        </member>
        <member name="F:CefGlue.CefHandlerMenuTypeBits.Frame">
            <summary>
            A subframe page is selected
            </summary>
        </member>
        <member name="F:CefGlue.CefHandlerMenuTypeBits.Link">
            <summary>
            A link is selected
            </summary>
        </member>
        <member name="F:CefGlue.CefHandlerMenuTypeBits.Image">
            <summary>
            An image is selected
            </summary>
        </member>
        <member name="F:CefGlue.CefHandlerMenuTypeBits.Selection">
            <summary>
            There is a textual or mixed selection that is selected
            </summary>
        </member>
        <member name="F:CefGlue.CefHandlerMenuTypeBits.Editable">
            <summary>
            An editable element is selected
            </summary>
        </member>
        <member name="F:CefGlue.CefHandlerMenuTypeBits.MisspelledWord">
            <summary>
            A misspelled word is selected
            </summary>
        </member>
        <member name="F:CefGlue.CefHandlerMenuTypeBits.Video">
            <summary>
            A video node is selected
            </summary>
        </member>
        <member name="F:CefGlue.CefHandlerMenuTypeBits.Audio">
            <summary>
            A video node is selected
            </summary>
        </member>
        <member name="T:CefGlue.CefHandlerNavType">
            <summary>
            Various browser navigation types supported by chrome.
            </summary>
        </member>
        <member name="T:CefGlue.CefKeyType">
            <summary>
            Key types.
            </summary>
        </member>
        <member name="T:CefGlue.CefMouseButtonType">
            <summary>
            Mouse button types.
            </summary>
        </member>
        <member name="T:CefGlue.CefPageOrientation">
            <summary>
            Page orientation for printing.
            </summary>
        </member>
        <member name="T:CefGlue.CefPaperType">
            <summary>
            Paper type for printing.
            </summary>
        </member>
        <member name="T:CefGlue.CefPostDataElementType">
            <summary>
            Post data elements may represent either bytes or files.
            </summary>
        </member>
        <member name="T:CefGlue.CefThreadId">
            <summary>
            Existing thread IDs.
            </summary>
        </member>
        <member name="T:CefGlue.CefV8AccessControl">
            <summary>
            V8 access control values.
            </summary>
        </member>
        <member name="T:CefGlue.CefV8PropertyAttribute">
            <summary>
            V8 property attribute values.
            </summary>
        </member>
        <member name="F:CefGlue.CefV8PropertyAttribute.None">
            <summary>
            Writeable and enumerable.
            </summary>
        </member>
        <member name="F:CefGlue.CefV8PropertyAttribute.ReadOnly">
            <summary>
            Configurable, not writeable.
            </summary>
        </member>
        <member name="F:CefGlue.CefV8PropertyAttribute.DontEnum">
            <summary>
            Configurable, not enumerable.
            </summary>
        </member>
        <member name="F:CefGlue.CefV8PropertyAttribute.DontDelete">
            <summary>
            Not configurable.
            </summary>
        </member>
        <member name="T:CefGlue.CefXmlEncodingType">
            <summary>
            Supported XML encoding types. The parser supports ASCII, ISO-8859-1, and
            UTF16 (LE and BE) by default. All other types must be translated to UTF8
            before being passed to the parser. If a BOM is detected and the correct
            decoder is available then that decoder will be used automatically.
            </summary>
        </member>
        <member name="T:CefGlue.CefXmlNodeType">
            <summary>
            XML node types.
            </summary>
        </member>
        <member name="M:CefGlue.CefCookieVisitor.visit(CefGlue.Interop.cef_cookie_visitor_t*,CefGlue.Interop.cef_cookie_t*,System.Int32,System.Int32,System.Int32*)">
            <summary>
            Method that will be called once for each cookie. |count| is the
            0-based index for the current cookie. |total| is the total number of
            cookies. Set |deleteCookie| to true to delete the cookie currently
            being visited. Return false to stop visiting cookies. This method may
            never be called if no cookies are found.
            </summary>
        </member>
        <member name="M:CefGlue.CefCookieVisitor.Visit(CefGlue.CefCookie,System.Int32,System.Int32,System.Boolean@)">
            <summary>
            Method that will be called once for each cookie.
            |count| is the 0-based index for the current cookie.
            |total| is the total number of cookies.
            Set |deleteCookie| to true to delete the cookie currently being visited.
            Return false to stop visiting cookies.
            This method may never be called if no cookies are found.
            </summary>
        </member>
        <member name="M:CefGlue.CefCookieVisitor.AddRef">
            <summary>
            The AddRef method increments the reference count for the object.
            It should be called for every new copy of a pointer to a given object.
            The resulting reference count value is returned and should be used for diagnostic/testing purposes only.
            </summary>
        </member>
        <member name="M:CefGlue.CefCookieVisitor.ReleaseRef(System.Boolean)">
            <summary>
            The Release method decrements the reference count for the object.
            If the reference count on the object falls to 0, then the object should free itself from memory.
            The resulting reference count value is returned and should be used for diagnostic/testing purposes only.
            </summary>
        </member>
        <member name="P:CefGlue.CefCookieVisitor.RefCount">
            <summary>
            Return the current number of references.
            </summary>
        </member>
        <member name="M:CefGlue.CefDomEventListener.handle_event(CefGlue.Interop.cef_domevent_listener_t*,CefGlue.Interop.cef_domevent_t*)">
            <summary>
            Called when an event is received. The event object passed to this
            method contains a snapshot of the DOM at the time this method is
            executed. DOM objects are only valid for the scope of this method. Do
            not keep references to or attempt to access any DOM objects outside
            the scope of this method.
            </summary>
        </member>
        <member name="M:CefGlue.CefDomEventListener.HandleEvent(CefGlue.CefDomEvent)">
            <summary>
            Called when an event is received.
            The event object passed to this method contains a snapshot of the DOM at the time this method is executed.
            DOM objects are only valid for the scope of this method.
            Do not keep references to or attempt to access any DOM objects outside the scope of this method.
            </summary>
        </member>
        <member name="M:CefGlue.CefDomEventListener.AddRef">
            <summary>
            The AddRef method increments the reference count for the object.
            It should be called for every new copy of a pointer to a given object.
            The resulting reference count value is returned and should be used for diagnostic/testing purposes only.
            </summary>
        </member>
        <member name="M:CefGlue.CefDomEventListener.ReleaseRef(System.Boolean)">
            <summary>
            The Release method decrements the reference count for the object.
            If the reference count on the object falls to 0, then the object should free itself from memory.
            The resulting reference count value is returned and should be used for diagnostic/testing purposes only.
            </summary>
        </member>
        <member name="P:CefGlue.CefDomEventListener.RefCount">
            <summary>
            Return the current number of references.
            </summary>
        </member>
        <member name="M:CefGlue.CefDomVisitor.visit(CefGlue.Interop.cef_domvisitor_t*,CefGlue.Interop.cef_domdocument_t*)">
            <summary>
            Method executed for visiting the DOM. The document object passed to
            this method represents a snapshot of the DOM at the time this method
            is executed. DOM objects are only valid for the scope of this method.
            Do not keep references to or attempt to access any DOM objects
            outside the scope of this method.
            </summary>
        </member>
        <member name="M:CefGlue.CefDomVisitor.Visit(CefGlue.CefDomDocument)">
            <summary>
            Method executed for visiting the DOM.
            The document object passed to this method represents a snapshot of the DOM at the time this method is executed.
            DOM objects are only valid for the scope of this method.
            Do not keep references to or attempt to access any DOM objects outside the scope of this method.
            </summary>
        </member>
        <member name="M:CefGlue.CefDomVisitor.AddRef">
            <summary>
            The AddRef method increments the reference count for the object.
            It should be called for every new copy of a pointer to a given object.
            The resulting reference count value is returned and should be used for diagnostic/testing purposes only.
            </summary>
        </member>
        <member name="M:CefGlue.CefDomVisitor.ReleaseRef(System.Boolean)">
            <summary>
            The Release method decrements the reference count for the object.
            If the reference count on the object falls to 0, then the object should free itself from memory.
            The resulting reference count value is returned and should be used for diagnostic/testing purposes only.
            </summary>
        </member>
        <member name="P:CefGlue.CefDomVisitor.RefCount">
            <summary>
            Return the current number of references.
            </summary>
        </member>
        <member name="M:CefGlue.CefDownloadHandler.received_data(CefGlue.Interop.cef_download_handler_t*,System.Void*,System.Int32)">
            <summary>
            A portion of the file contents have been received. This method will
            be called multiple times until the download is complete. Return
            |true| to continue receiving data and |false| to cancel.
            </summary>
        </member>
        <member name="M:CefGlue.CefDownloadHandler.ReceivedData(System.IO.Stream)">
            <summary>
            A portion of the file contents have been received.
            This method will be called multiple times until the download is complete.
            Return |true| to continue receiving data and |false| to cancel.
            </summary>
        </member>
        <member name="M:CefGlue.CefDownloadHandler.complete(CefGlue.Interop.cef_download_handler_t*)">
            <summary>
            The download is complete.
            </summary>
        </member>
        <member name="M:CefGlue.CefDownloadHandler.Complete">
            <summary>
            The download is complete.
            </summary>
        </member>
        <member name="M:CefGlue.CefDownloadHandler.AddRef">
            <summary>
            The AddRef method increments the reference count for the object.
            It should be called for every new copy of a pointer to a given object.
            The resulting reference count value is returned and should be used for diagnostic/testing purposes only.
            </summary>
        </member>
        <member name="M:CefGlue.CefDownloadHandler.ReleaseRef(System.Boolean)">
            <summary>
            The Release method decrements the reference count for the object.
            If the reference count on the object falls to 0, then the object should free itself from memory.
            The resulting reference count value is returned and should be used for diagnostic/testing purposes only.
            </summary>
        </member>
        <member name="P:CefGlue.CefDownloadHandler.RefCount">
            <summary>
            Return the current number of references.
            </summary>
        </member>
        <member name="M:CefGlue.CefFindHandler.on_find_result(CefGlue.Interop.cef_find_handler_t*,CefGlue.Interop.cef_browser_t*,System.Int32,System.Int32,CefGlue.Interop.cef_rect_t*,System.Int32,System.Int32)">
            <summary>
            Called to report find results returned by CefBrowser::Find().
            |identifer| is the identifier passed to CefBrowser::Find(), |count|
            is the number of matches currently identified, |selectionRect| is the
            location of where the match was found (in window coordinates),
            |activeMatchOrdinal| is the current position in the search results,
            and |finalUpdate| is true if this is the last find notification.
            </summary>
        </member>
        <member name="M:CefGlue.CefFindHandler.OnFindResult(CefGlue.CefBrowser,System.Int32,System.Int32,CefGlue.CefRect,System.Int32,System.Boolean)">
            <summary>
            Called to report find results returned by CefBrowser::Find().
            |identifer| is the identifier passed to CefBrowser::Find(),
            |count| is the number of matches currently identified,
            |selectionRect| is the location of where the match was found (in window coordinates),
            |activeMatchOrdinal| is the current position in the search results,
            and |finalUpdate| is true if this is the last find notification.
            </summary>
        </member>
        <member name="M:CefGlue.CefFindHandler.AddRef">
            <summary>
            The AddRef method increments the reference count for the object.
            It should be called for every new copy of a pointer to a given object.
            The resulting reference count value is returned and should be used for diagnostic/testing purposes only.
            </summary>
        </member>
        <member name="M:CefGlue.CefFindHandler.ReleaseRef(System.Boolean)">
            <summary>
            The Release method decrements the reference count for the object.
            If the reference count on the object falls to 0, then the object should free itself from memory.
            The resulting reference count value is returned and should be used for diagnostic/testing purposes only.
            </summary>
        </member>
        <member name="P:CefGlue.CefFindHandler.RefCount">
            <summary>
            Return the current number of references.
            </summary>
        </member>
        <member name="M:CefGlue.CefFocusHandler.on_take_focus(CefGlue.Interop.cef_focus_handler_t*,CefGlue.Interop.cef_browser_t*,System.Int32)">
            <summary>
            Called when the browser component is about to loose focus. For
            instance, if focus was on the last HTML element and the user pressed
            the TAB key. |next| will be true if the browser is giving focus to
            the next component and false if the browser is giving focus to the
            previous component.
            </summary>
        </member>
        <member name="M:CefGlue.CefFocusHandler.OnTakeFocus(CefGlue.CefBrowser,System.Boolean)">
            <summary>
            Called when the browser component is about to loose focus.
            For instance, if focus was on the last HTML element and the user pressed the TAB key.
            |next| will be true if the browser is giving focus to the next component and false if the browser is giving focus to the previous component.
            </summary>
        </member>
        <member name="M:CefGlue.CefFocusHandler.on_set_focus(CefGlue.Interop.cef_focus_handler_t*,CefGlue.Interop.cef_browser_t*,CefGlue.Interop.cef_handler_focus_source_t)">
            <summary>
            Called when the browser component is requesting focus. |source| indicates
            where the focus request is originating from. Return false to allow the
            focus to be set or true to cancel setting the focus.
            </summary>
        </member>
        <member name="M:CefGlue.CefFocusHandler.OnSetFocus(CefGlue.CefBrowser,CefGlue.CefHandlerFocusSource)">
            <summary>
            Called when the browser component is requesting focus.
            |source| indicates where the focus request is originating from.
            Return false to allow the focus to be set or true to cancel setting the focus.
            </summary>
        </member>
        <member name="M:CefGlue.CefFocusHandler.on_focused_node_changed(CefGlue.Interop.cef_focus_handler_t*,CefGlue.Interop.cef_browser_t*,CefGlue.Interop.cef_frame_t*,CefGlue.Interop.cef_domnode_t*)">
            <summary>
            Called when a new node in the the browser gets focus. The |node|
            value may be empty if no specific node has gained focus. The node
            object passed to this method represents a snapshot of the DOM at the
            time this method is executed. DOM objects are only valid for the
            scope of this method. Do not keep references to or attempt to access
            any DOM objects outside the scope of this method.
            </summary>
        </member>
        <member name="M:CefGlue.CefFocusHandler.OnFocusedNodeChanged(CefGlue.CefBrowser,CefGlue.CefFrame,CefGlue.CefDomNode)">
            <summary>
            Called when a new node in the the browser gets focus.
            The |node| value may be empty if no specific node has gained focus.
            The node object passed to this method represents a snapshot of the DOM at the time this method is executed.
            DOM objects are only valid for the scope of this method.
            Do not keep references to or attempt to access any DOM objects outside the scope of this method.
            </summary>
        </member>
        <member name="M:CefGlue.CefFocusHandler.AddRef">
            <summary>
            The AddRef method increments the reference count for the object.
            It should be called for every new copy of a pointer to a given object.
            The resulting reference count value is returned and should be used for diagnostic/testing purposes only.
            </summary>
        </member>
        <member name="M:CefGlue.CefFocusHandler.ReleaseRef(System.Boolean)">
            <summary>
            The Release method decrements the reference count for the object.
            If the reference count on the object falls to 0, then the object should free itself from memory.
            The resulting reference count value is returned and should be used for diagnostic/testing purposes only.
            </summary>
        </member>
        <member name="P:CefGlue.CefFocusHandler.RefCount">
            <summary>
            Return the current number of references.
            </summary>
        </member>
        <member name="M:CefGlue.CefMenuHandler.on_before_menu(CefGlue.Interop.cef_menu_handler_t*,CefGlue.Interop.cef_browser_t*,CefGlue.Interop.cef_menu_info_t*)">
            <summary>
            Called before a context menu is displayed. Return false to display
            the default context menu or true to cancel the display.
            </summary>
        </member>
        <member name="M:CefGlue.CefMenuHandler.OnBeforeMenu(CefGlue.CefBrowser,CefGlue.CefMenuInfo)">
            <summary>
            Called before a context menu is displayed.
            Return false to display the default context menu
            or true to cancel the display.
            </summary>
        </member>
        <member name="M:CefGlue.CefMenuHandler.get_menu_label(CefGlue.Interop.cef_menu_handler_t*,CefGlue.Interop.cef_browser_t*,CefGlue.Interop.cef_menu_id_t,CefGlue.Interop.cef_string_t*)">
            <summary>
            Called to optionally override the default text for a context menu
            item. |label| contains the default text and may be modified to
            substitute alternate text.
            </summary>
        </member>
        <member name="M:CefGlue.CefMenuHandler.GetMenuLabel(CefGlue.CefBrowser,CefGlue.CefHandlerMenuId,System.String@)">
            <summary>
            Called to optionally override the default text for a context menu item.
            |label| contains the default text and may be modified to substitute alternate text.
            </summary>
        </member>
        <member name="M:CefGlue.CefMenuHandler.on_menu_action(CefGlue.Interop.cef_menu_handler_t*,CefGlue.Interop.cef_browser_t*,CefGlue.Interop.cef_menu_id_t)">
            <summary>
            Called when an option is selected from the default context menu.
            Return false to execute the default action or true to cancel the
            action.
            </summary>
        </member>
        <member name="M:CefGlue.CefMenuHandler.OnMenuAction(CefGlue.CefBrowser,CefGlue.CefHandlerMenuId)">
            <summary>
            Called when an option is selected from the default context menu.
            Return false to execute the default action or true to cancel the action.
            </summary>
        </member>
        <member name="M:CefGlue.CefMenuHandler.AddRef">
            <summary>
            The AddRef method increments the reference count for the object.
            It should be called for every new copy of a pointer to a given object.
            The resulting reference count value is returned and should be used for diagnostic/testing purposes only.
            </summary>
        </member>
        <member name="M:CefGlue.CefMenuHandler.ReleaseRef(System.Boolean)">
            <summary>
            The Release method decrements the reference count for the object.
            If the reference count on the object falls to 0, then the object should free itself from memory.
            The resulting reference count value is returned and should be used for diagnostic/testing purposes only.
            </summary>
        </member>
        <member name="P:CefGlue.CefMenuHandler.RefCount">
            <summary>
            Return the current number of references.
            </summary>
        </member>
        <member name="M:CefGlue.CefPrintHandler.get_print_options(CefGlue.Interop.cef_print_handler_t*,CefGlue.Interop.cef_browser_t*,CefGlue.Interop.cef_print_options_t*)">
            <summary>
            Called to allow customization of standard print options before the
            print dialog is displayed. |printOptions| allows specification of
            paper size, orientation and margins. Note that the specified margins
            may be adjusted if they are outside the range supported by the
            printer. All units are in inches. Return false to display the default
            print options or true to display the modified |printOptions|.
            </summary>
        </member>
        <member name="M:CefGlue.CefPrintHandler.GetPrintOptions(CefGlue.CefBrowser,CefGlue.CefPrintOptions)">
            <summary>
            Called to allow customization of standard print options before the print dialog is displayed.
            |printOptions| allows specification of paper size, orientation and margins.
            Note that the specified margins may be adjusted if they are outside the range supported by the printer.
            All units are in inches.
            Return false to display the default print options 
            or true to display the modified |printOptions|.
            </summary>
        </member>
        <member name="M:CefGlue.CefPrintHandler.get_print_header_footer(CefGlue.Interop.cef_print_handler_t*,CefGlue.Interop.cef_browser_t*,CefGlue.Interop.cef_frame_t*,CefGlue.Interop.cef_print_info_t*,CefGlue.Interop.cef_string_t*,CefGlue.Interop.cef_string_t*,System.Int32,System.Int32,CefGlue.Interop.cef_string_t*,CefGlue.Interop.cef_string_t*,CefGlue.Interop.cef_string_t*,CefGlue.Interop.cef_string_t*,CefGlue.Interop.cef_string_t*,CefGlue.Interop.cef_string_t*)">
            <summary>
            Called to format print headers and footers. |printInfo| contains
            platform- specific information about the printer context. |url| is
            the URL if the currently printing page, |title| is the title of the
            currently printing page, |currentPage| is the current page number and
            |maxPages| is the total number of pages. Six default header locations
            are provided by the implementation: top left, top center, top right,
            bottom left, bottom center and bottom right. To use one of these
            default locations just assign a string to the appropriate variable.
            To draw the header and footer yourself return true. Otherwise,
            populate the approprate variables and return false.
            </summary>
        </member>
        <member name="M:CefGlue.CefPrintHandler.GetPrintHeaderFooter(CefGlue.CefBrowser,CefGlue.CefFrame,CefGlue.CefPrintInfo,System.String,System.String,System.Int32,System.Int32,System.String@,System.String@,System.String@,System.String@,System.String@,System.String@)">
            <summary>
            Called to format print headers and footers.
            |printInfo| contains platform- specific information about the printer context.
            |url| is the URL if the currently printing page,
            |title| is the title of the currently printing page,
            |currentPage| is the current page number
            and |maxPages| is the total number of pages.
            Six default header locations are provided by the implementation: top left, top center, top right, bottom left, bottom center and bottom right.
            To use one of these default locations just assign a string to the appropriate variable.
            To draw the header and footer yourself return true.
            Otherwise, populate the approprate variables and return false.
            </summary>
        </member>
        <member name="M:CefGlue.CefPrintHandler.AddRef">
            <summary>
            The AddRef method increments the reference count for the object.
            It should be called for every new copy of a pointer to a given object.
            The resulting reference count value is returned and should be used for diagnostic/testing purposes only.
            </summary>
        </member>
        <member name="M:CefGlue.CefPrintHandler.ReleaseRef(System.Boolean)">
            <summary>
            The Release method decrements the reference count for the object.
            If the reference count on the object falls to 0, then the object should free itself from memory.
            The resulting reference count value is returned and should be used for diagnostic/testing purposes only.
            </summary>
        </member>
        <member name="P:CefGlue.CefPrintHandler.RefCount">
            <summary>
            Return the current number of references.
            </summary>
        </member>
        <member name="M:CefGlue.CefReadHandler.read(CefGlue.Interop.cef_read_handler_t*,System.Void*,System.Int32,System.Int32)">
            <summary>
            Read raw binary data.
            </summary>
        </member>
        <member name="M:CefGlue.CefReadHandler.Read(System.IO.Stream,System.Int32,System.Int32)">
            <summary>
            Read raw binary data.
            </summary>
        </member>
        <member name="M:CefGlue.CefReadHandler.seek(CefGlue.Interop.cef_read_handler_t*,System.Int64,System.Int32)">
            <summary>
            Seek to the specified offset position. |whence| may be any one of
            SEEK_CUR, SEEK_END or SEEK_SET.
            </summary>
        </member>
        <member name="M:CefGlue.CefReadHandler.Seek(System.Int64,System.IO.SeekOrigin)">
            <summary>
            Seek to the specified offset position.
            |whence| may be any one of SEEK_CUR, SEEK_END or SEEK_SET.
            </summary>
            <returns>If successfull - returns true. If fails - returns false.</returns>
        </member>
        <member name="M:CefGlue.CefReadHandler.tell(CefGlue.Interop.cef_read_handler_t*)">
            <summary>
            Return the current offset position.
            </summary>
        </member>
        <member name="M:CefGlue.CefReadHandler.Tell">
            <summary>
            Return the current offset position.
            </summary>
        </member>
        <member name="M:CefGlue.CefReadHandler.eof(CefGlue.Interop.cef_read_handler_t*)">
            <summary>
            Return non-zero if at end of file.
            </summary>
        </member>
        <member name="M:CefGlue.CefReadHandler.Eof">
            <summary>
            Return non-zero if at end of file.
            </summary>
        </member>
        <member name="M:CefGlue.CefReadHandler.AddRef">
            <summary>
            The AddRef method increments the reference count for the object.
            It should be called for every new copy of a pointer to a given object.
            The resulting reference count value is returned and should be used for diagnostic/testing purposes only.
            </summary>
        </member>
        <member name="M:CefGlue.CefReadHandler.ReleaseRef(System.Boolean)">
            <summary>
            The Release method decrements the reference count for the object.
            If the reference count on the object falls to 0, then the object should free itself from memory.
            The resulting reference count value is returned and should be used for diagnostic/testing purposes only.
            </summary>
        </member>
        <member name="P:CefGlue.CefReadHandler.RefCount">
            <summary>
            Return the current number of references.
            </summary>
        </member>
        <member name="M:CefGlue.CefRenderHandler.get_view_rect(CefGlue.Interop.cef_render_handler_t*,CefGlue.Interop.cef_browser_t*,CefGlue.Interop.cef_rect_t*)">
            <summary>
            Called to retrieve the view rectangle which is relative to screen
            coordinates. Return true if the rectangle was provided.
            </summary>
        </member>
        <member name="M:CefGlue.CefRenderHandler.GetViewRect(CefGlue.CefBrowser,CefGlue.CefRect@)">
            <summary>
            Called to retrieve the view rectangle which is relative to screen coordinates.
            Return true if the rectangle was provided.
            </summary>
        </member>
        <member name="M:CefGlue.CefRenderHandler.get_screen_rect(CefGlue.Interop.cef_render_handler_t*,CefGlue.Interop.cef_browser_t*,CefGlue.Interop.cef_rect_t*)">
            <summary>
            Called to retrieve the simulated screen rectangle. Return true if the
            rectangle was provided.
            </summary>
        </member>
        <member name="M:CefGlue.CefRenderHandler.GetScreenRect(CefGlue.CefBrowser,CefGlue.CefRect@)">
            <summary>
            Called to retrieve the simulated screen rectangle.
            Return true if the rectangle was provided.
            </summary>
        </member>
        <member name="M:CefGlue.CefRenderHandler.get_screen_point(CefGlue.Interop.cef_render_handler_t*,CefGlue.Interop.cef_browser_t*,System.Int32,System.Int32,System.Int32*,System.Int32*)">
            <summary>
            Called to retrieve the translation from view coordinates to actual
            screen coordinates. Return true if the screen coordinates were
            provided.
            </summary>
        </member>
        <member name="M:CefGlue.CefRenderHandler.GetScreenPoint(CefGlue.CefBrowser,System.Int32,System.Int32,System.Int32@,System.Int32@)">
            <summary>
            Called to retrieve the translation from view coordinates to actual screen coordinates.
            Return true if the screen coordinates were provided.
            </summary>
        </member>
        <member name="M:CefGlue.CefRenderHandler.on_popup_show(CefGlue.Interop.cef_render_handler_t*,CefGlue.Interop.cef_browser_t*,System.Int32)">
            <summary>
            Called when the browser wants to show or hide the popup widget. The
            popup should be shown if |show| is true and hidden if |show| is
            false.
            </summary>
        </member>
        <member name="M:CefGlue.CefRenderHandler.OnPopupShow(CefGlue.CefBrowser,System.Boolean)">
            <summary>
            Called when the browser wants to show or hide the popup widget.
            The popup should be shown if |show| is true and hidden if |show| is false.
            </summary>
        </member>
        <member name="M:CefGlue.CefRenderHandler.on_popup_size(CefGlue.Interop.cef_render_handler_t*,CefGlue.Interop.cef_browser_t*,CefGlue.Interop.cef_rect_t*)">
            <summary>
            Called when the browser wants to move or resize the popup widget.
            |rect| contains the new location and size.
            </summary>
        </member>
        <member name="M:CefGlue.CefRenderHandler.OnPopupSize(CefGlue.CefBrowser,CefGlue.CefRect)">
            <summary>
            Called when the browser wants to move or resize the popup widget.
            |rect| contains the new location and size.
            </summary>
        </member>
        <member name="M:CefGlue.CefRenderHandler.on_paint(CefGlue.Interop.cef_render_handler_t*,CefGlue.Interop.cef_browser_t*,CefGlue.Interop.cef_paint_element_type_t,System.Int32,CefGlue.Interop.cef_rect_t*,System.Void*)">
            <summary>
            Called when an element should be painted. |type| indicates whether
            the element is the view or the popup widget. |buffer| contains the
            pixel data for the whole image. |dirtyRects| contains the set of
            rectangles that need to be repainted. On Windows |buffer| will be
            width*height*4 bytes in size and represents a BGRA image with an
            upper-left origin.
            </summary>
        </member>
        <member name="M:CefGlue.CefRenderHandler.OnPaint(CefGlue.CefBrowser,CefGlue.CefPaintElementType,CefGlue.CefRect[],System.IntPtr)">
            <summary>
            Called when an element should be painted.
            |type| indicates whether the element is the view or the popup widget.
            |buffer| contains the pixel data for the whole image.
            |dirtyRects| indicates the portions of the image that have been repainted.
            On Windows |buffer| will be width*height*4 bytes in size and represents a BGRA image with an upper-left origin.
            </summary>
        </member>
        <member name="M:CefGlue.CefRenderHandler.on_cursor_change(CefGlue.Interop.cef_render_handler_t*,CefGlue.Interop.cef_browser_t*,CefGlue.Interop.cef_cursor_handle*)">
            <summary>
            Called when the browser window's cursor has changed.
            </summary>
        </member>
        <member name="M:CefGlue.CefRenderHandler.OnCursorChange(CefGlue.CefBrowser,System.IntPtr)">
            <summary>
            Called when the browser window's cursor has changed.
            </summary>
        </member>
        <member name="M:CefGlue.CefRenderHandler.AddRef">
            <summary>
            The AddRef method increments the reference count for the object.
            It should be called for every new copy of a pointer to a given object.
            The resulting reference count value is returned and should be used for diagnostic/testing purposes only.
            </summary>
        </member>
        <member name="M:CefGlue.CefRenderHandler.ReleaseRef(System.Boolean)">
            <summary>
            The Release method decrements the reference count for the object.
            If the reference count on the object falls to 0, then the object should free itself from memory.
            The resulting reference count value is returned and should be used for diagnostic/testing purposes only.
            </summary>
        </member>
        <member name="P:CefGlue.CefRenderHandler.RefCount">
            <summary>
            Return the current number of references.
            </summary>
        </member>
        <member name="M:CefGlue.CefSchemeHandler.process_request(CefGlue.Interop.cef_scheme_handler_t*,CefGlue.Interop.cef_request_t*,CefGlue.Interop.cef_scheme_handler_callback_t*)">
            <summary>
            Begin processing the request. To handle the request return true and
            call HeadersAvailable() once the response header information is
            available (HeadersAvailable() can also be called from inside this
            method if header information is available immediately). To cancel the request return false.
            </summary>
        </member>
        <member name="M:CefGlue.CefSchemeHandler.ProcessRequest(CefGlue.CefRequest,CefGlue.CefSchemeHandlerCallback)">
            <summary>
            Begin processing the request.
            
            To handle the request return true and call HeadersAvailable() once the response header information is
            available (HeadersAvailable() can also be called from inside this
            method if header information is available immediately).
            
            To cancel the request return false.
            </summary>
        </member>
        <member name="M:CefGlue.CefSchemeHandler.get_response_headers(CefGlue.Interop.cef_scheme_handler_t*,CefGlue.Interop.cef_response_t*,System.Int64*,CefGlue.Interop.cef_string_t*)">
            <summary>
            Retrieve response header information. If the response length is not
            known set |response_length| to -1 and ReadResponse() will be called
            until it returns false. If the response length is known set
            |response_length| to a positive value and ReadResponse() will be
            called until it returns false or the specified number of bytes have
            been read. Use the |response| object to set the mime type, http
            status code and other optional header values.
            To redirect the request to a new URL set |redirectUrl| to the new URL.
            </summary>
        </member>
        <member name="M:CefGlue.CefSchemeHandler.GetResponseHeaders(CefGlue.CefResponse,System.Int64@,System.String@)">
             <summary>
             Retrieve response header information.
             If the response length is not known set |response_length| to -1 and ReadResponse() will be called
             until it returns false.
             
             If the response length is known set |response_length| to a positive value and ReadResponse() will be
             called until it returns false or the specified number of bytes have
             been read.
             
             Use the |response| object to set the mime type, http status code and other optional header values.
            
             To redirect the request to a new URL set |redirectUrl| to the new URL.
             </summary>
        </member>
        <member name="M:CefGlue.CefSchemeHandler.read_response(CefGlue.Interop.cef_scheme_handler_t*,System.Void*,System.Int32,System.Int32*,CefGlue.Interop.cef_scheme_handler_callback_t*)">
            <summary>
            Read response data. If data is available immediately copy up to
            |bytes_to_read| bytes into |data_out|, set |bytes_read| to the number
            of bytes copied, and return true. To read the data at a later time
            set |bytes_read| to 0, return true and call BytesAvailable() when the
            data is available. To indicate response completion return false.
            </summary>
        </member>
        <member name="M:CefGlue.CefSchemeHandler.ReadResponse(System.IO.Stream,System.Int32,System.Int32@,CefGlue.CefSchemeHandlerCallback)">
            <summary>
            Read response data.
            If data is available immediately copy up to |bytes_to_read| bytes into |data_out|, set |bytes_read| to the number
            of bytes copied, and return true.
            
            To read the data at a later time set |bytes_read| to 0, return true and call BytesAvailable() when the
            data is available.
            
            To indicate response completion return false.
            </summary>
        </member>
        <member name="M:CefGlue.CefSchemeHandler.cancel(CefGlue.Interop.cef_scheme_handler_t*)">
            <summary>
            Cancel processing of the request.
            </summary>
        </member>
        <member name="M:CefGlue.CefSchemeHandler.Cancel">
            <summary>
            Cancel processing of the request.
            </summary>
        </member>
        <member name="M:CefGlue.CefSchemeHandler.AddRef">
            <summary>
            The AddRef method increments the reference count for the object.
            It should be called for every new copy of a pointer to a given object.
            The resulting reference count value is returned and should be used for diagnostic/testing purposes only.
            </summary>
        </member>
        <member name="M:CefGlue.CefSchemeHandler.ReleaseRef(System.Boolean)">
            <summary>
            The Release method decrements the reference count for the object.
            If the reference count on the object falls to 0, then the object should free itself from memory.
            The resulting reference count value is returned and should be used for diagnostic/testing purposes only.
            </summary>
        </member>
        <member name="P:CefGlue.CefSchemeHandler.RefCount">
            <summary>
            Return the current number of references.
            </summary>
        </member>
        <member name="M:CefGlue.CefSchemeHandlerFactory.create(CefGlue.Interop.cef_scheme_handler_factory_t*,CefGlue.Interop.cef_browser_t*,CefGlue.Interop.cef_string_t*,CefGlue.Interop.cef_request_t*)">
            <summary>
            Return a new scheme handler instance to handle the request. |browser| will
            be the browser window that initiated the request. If the request was
            initiated using the CefWebURLRequest API |browser| will be NULL.
            </summary>
        </member>
        <member name="M:CefGlue.CefSchemeHandlerFactory.Create(CefGlue.CefBrowser,System.String,CefGlue.CefRequest)">
            <summary>
            Return a new scheme handler instance to handle the request.
            |browser| will be the browser window that initiated the request.
            If the request was initiated using the CefWebURLRequest API |browser| will be NULL.
            </summary>
        </member>
        <member name="M:CefGlue.CefSchemeHandlerFactory.AddRef">
            <summary>
            The AddRef method increments the reference count for the object.
            It should be called for every new copy of a pointer to a given object.
            The resulting reference count value is returned and should be used for diagnostic/testing purposes only.
            </summary>
        </member>
        <member name="M:CefGlue.CefSchemeHandlerFactory.ReleaseRef(System.Boolean)">
            <summary>
            The Release method decrements the reference count for the object.
            If the reference count on the object falls to 0, then the object should free itself from memory.
            The resulting reference count value is returned and should be used for diagnostic/testing purposes only.
            </summary>
        </member>
        <member name="P:CefGlue.CefSchemeHandlerFactory.RefCount">
            <summary>
            Return the current number of references.
            </summary>
        </member>
        <member name="M:CefGlue.CefWebUrlRequestClient.on_state_change(CefGlue.Interop.cef_web_urlrequest_client_t*,CefGlue.Interop.cef_web_urlrequest_t*,CefGlue.Interop.cef_weburlrequest_state_t)">
            <summary>
            Notifies the client that the request state has changed. State change
            notifications will always be sent before the below notification
            methods are called.
            </summary>
        </member>
        <member name="M:CefGlue.CefWebUrlRequestClient.OnStateChange(CefGlue.CefWebUrlRequest,CefGlue.CefWebUrlRequestState)">
            <summary>
            Notifies the client that the request state has changed.
            State change notifications will always be sent before the below notification methods are called.
            </summary>
        </member>
        <member name="M:CefGlue.CefWebUrlRequestClient.on_redirect(CefGlue.Interop.cef_web_urlrequest_client_t*,CefGlue.Interop.cef_web_urlrequest_t*,CefGlue.Interop.cef_request_t*,CefGlue.Interop.cef_response_t*)">
            <summary>
            Notifies the client that the request has been redirected and
            provides a chance to change the request parameters.
            </summary>
        </member>
        <member name="M:CefGlue.CefWebUrlRequestClient.OnRedirect(CefGlue.CefWebUrlRequest,CefGlue.CefRequest,CefGlue.CefResponse)">
            <summary>
            Notifies the client that the request has been redirected and provides a chance to change the request parameters.
            </summary>
        </member>
        <member name="M:CefGlue.CefWebUrlRequestClient.on_headers_received(CefGlue.Interop.cef_web_urlrequest_client_t*,CefGlue.Interop.cef_web_urlrequest_t*,CefGlue.Interop.cef_response_t*)">
            <summary>
            Notifies the client of the response data.
            </summary>
        </member>
        <member name="M:CefGlue.CefWebUrlRequestClient.OnHeadersReceived(CefGlue.CefWebUrlRequest,CefGlue.CefResponse)">
            <summary>
            Notifies the client of the response data.
            </summary>
        </member>
        <member name="M:CefGlue.CefWebUrlRequestClient.on_progress(CefGlue.Interop.cef_web_urlrequest_client_t*,CefGlue.Interop.cef_web_urlrequest_t*,System.UInt64,System.UInt64)">
            <summary>
            Notifies the client of the upload progress.
            </summary>
        </member>
        <member name="M:CefGlue.CefWebUrlRequestClient.OnProgress(CefGlue.CefWebUrlRequest,System.UInt64,System.UInt64)">
            <summary>
            Notifies the client of the upload progress.
            </summary>
        </member>
        <member name="M:CefGlue.CefWebUrlRequestClient.on_data(CefGlue.Interop.cef_web_urlrequest_client_t*,CefGlue.Interop.cef_web_urlrequest_t*,System.Void*,System.Int32)">
            <summary>
            Notifies the client that content has been received.
            </summary>
        </member>
        <member name="M:CefGlue.CefWebUrlRequestClient.OnData(CefGlue.CefWebUrlRequest,System.IO.Stream,System.Int32)">
            <summary>
            Notifies the client that content has been received.
            </summary>
        </member>
        <member name="M:CefGlue.CefWebUrlRequestClient.on_error(CefGlue.Interop.cef_web_urlrequest_client_t*,CefGlue.Interop.cef_web_urlrequest_t*,CefGlue.Interop.cef_handler_errorcode_t)">
            <summary>
            Notifies the client that the request ended with an error.
            </summary>
        </member>
        <member name="M:CefGlue.CefWebUrlRequestClient.OnError(CefGlue.CefWebUrlRequest,CefGlue.CefHandlerErrorCode)">
            <summary>
            Notifies the client that the request ended with an error.
            </summary>
        </member>
        <member name="M:CefGlue.CefWebUrlRequestClient.AddRef">
            <summary>
            The AddRef method increments the reference count for the object.
            It should be called for every new copy of a pointer to a given object.
            The resulting reference count value is returned and should be used for diagnostic/testing purposes only.
            </summary>
        </member>
        <member name="M:CefGlue.CefWebUrlRequestClient.ReleaseRef(System.Boolean)">
            <summary>
            The Release method decrements the reference count for the object.
            If the reference count on the object falls to 0, then the object should free itself from memory.
            The resulting reference count value is returned and should be used for diagnostic/testing purposes only.
            </summary>
        </member>
        <member name="P:CefGlue.CefWebUrlRequestClient.RefCount">
            <summary>
            Return the current number of references.
            </summary>
        </member>
        <member name="M:CefGlue.CefWriteHandler.write(CefGlue.Interop.cef_write_handler_t*,System.Void*,System.Int32,System.Int32)">
            <summary>
            Write raw binary data.
            </summary>
        </member>
        <member name="M:CefGlue.CefWriteHandler.seek(CefGlue.Interop.cef_write_handler_t*,System.Int64,System.Int32)">
            <summary>
            Seek to the specified offset position. |whence| may be any one of
            SEEK_CUR, SEEK_END or SEEK_SET.
            </summary>
        </member>
        <member name="M:CefGlue.CefWriteHandler.Seek(System.Int64,System.IO.SeekOrigin)">
            <summary>
            Seek to the specified offset position.
            |whence| may be any one of SEEK_CUR, SEEK_END or SEEK_SET.
            </summary>
            <returns>If successfull - returns true. If fails - returns false.</returns>
        </member>
        <member name="M:CefGlue.CefWriteHandler.tell(CefGlue.Interop.cef_write_handler_t*)">
            <summary>
            Return the current offset position.
            </summary>
        </member>
        <member name="M:CefGlue.CefWriteHandler.Tell">
            <summary>
            Return the current offset position.
            </summary>
        </member>
        <member name="M:CefGlue.CefWriteHandler.flush(CefGlue.Interop.cef_write_handler_t*)">
            <summary>
            Flush the stream.
            </summary>
        </member>
        <member name="M:CefGlue.CefWriteHandler.Flush">
            <summary>
            Flush the stream.
            </summary>
            <returns>If successfull - returns true. If fails - returns false.</returns>
        </member>
        <member name="M:CefGlue.CefWriteHandler.AddRef">
            <summary>
            The AddRef method increments the reference count for the object.
            It should be called for every new copy of a pointer to a given object.
            The resulting reference count value is returned and should be used for diagnostic/testing purposes only.
            </summary>
        </member>
        <member name="M:CefGlue.CefWriteHandler.ReleaseRef(System.Boolean)">
            <summary>
            The Release method decrements the reference count for the object.
            If the reference count on the object falls to 0, then the object should free itself from memory.
            The resulting reference count value is returned and should be used for diagnostic/testing purposes only.
            </summary>
        </member>
        <member name="P:CefGlue.CefWriteHandler.RefCount">
            <summary>
            Return the current number of references.
            </summary>
        </member>
        <member name="M:CefGlue.CefUserData.From(CefGlue.Interop.cefglue_userdata_t*)">
            <summary>
            This is get object from pointer table, but note that this is works only when object passed to native side (i.e. RefCount > 0).
            </summary>
        </member>
        <member name="M:CefGlue.CefUserData.AddRef">
            <summary>
            The AddRef method increments the reference count for the object.
            It should be called for every new copy of a pointer to a given object.
            The resulting reference count value is returned and should be used for diagnostic/testing purposes only.
            </summary>
        </member>
        <member name="M:CefGlue.CefUserData.ReleaseRef(System.Boolean)">
            <summary>
            The Release method decrements the reference count for the object.
            If the reference count on the object falls to 0, then the object should free itself from memory.
            The resulting reference count value is returned and should be used for diagnostic/testing purposes only.
            </summary>
        </member>
        <member name="P:CefGlue.CefUserData.RefCount">
            <summary>
            Return the current number of references.
            </summary>
        </member>
        <member name="M:CefGlue.CefBrowser.Create(CefGlue.CefWindowInfo,CefGlue.CefClient,System.String,CefGlue.CefBrowserSettings)">
            <summary>
            Create a new browser window using the window parameters specified by |windowInfo|.
            All values will be copied internally and the actual window will be created on the UI thread.
            This method call will not block.
            </summary>
        </member>
        <member name="M:CefGlue.CefBrowser.CreateSync(CefGlue.CefWindowInfo,CefGlue.CefClient,System.String,CefGlue.CefBrowserSettings)">
            <summary>
            Create a new browser window using the window parameters specified by |windowInfo|.
            This method should only be called on the UI thread.
            </summary>
        </member>
        <member name="M:CefGlue.CefBrowser.Close">
            <summary>
            Closes this browser window.
            </summary>
        </member>
        <member name="M:CefGlue.CefBrowser.GoBack">
            <summary>
            Navigate backwards.
            </summary>
        </member>
        <member name="M:CefGlue.CefBrowser.GoForward">
            <summary>
            Navigate forwards.
            </summary>
        </member>
        <member name="M:CefGlue.CefBrowser.Reload">
            <summary>
            Reload the current page.
            </summary>
        </member>
        <member name="M:CefGlue.CefBrowser.ReloadIgnoreCache">
            <summary>
            Reload the current page ignoring any cached data.
            </summary>
        </member>
        <member name="M:CefGlue.CefBrowser.StopLoad">
            <summary>
            Stop loading the page.
            </summary>
        </member>
        <member name="M:CefGlue.CefBrowser.SetFocus(System.Boolean)">
            <summary>
            Set focus for the browser window.
            If |enable| is true focus will be set to the window.
            Otherwise, focus will be removed.
            </summary>
        </member>
        <member name="M:CefGlue.CefBrowser.GetClient">
            <summary>
            Returns the client for this browser.
            </summary>
        </member>
        <member name="M:CefGlue.CefBrowser.GetMainFrame">
            <summary>
            Returns the main (top-level) frame for the browser window.
            </summary>
        </member>
        <member name="M:CefGlue.CefBrowser.GetFocusedFrame">
            <summary>
            Returns the focused frame for the browser window.
            This method should only be called on the UI thread.
            </summary>
        </member>
        <member name="M:CefGlue.CefBrowser.GetFrame(System.String)">
            <summary>
            Returns the frame with the specified name, or NULL if not found.
            This method should only be called on the UI thread.
            </summary>
        </member>
        <member name="M:CefGlue.CefBrowser.GetFrameNames">
            <summary>
            Returns the names of all existing frames.
            This method should only be called on the UI thread.
            </summary>
        </member>
        <member name="M:CefGlue.CefBrowser.Find(System.Int32,System.String,System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            Search for |searchText|.
            |identifier| can be used to have multiple searches running simultaniously.
            |forward| indicates whether to search forward or backward within the page.
            |matchCase| indicates whether the search should be case-sensitive.
            |findNext| indicates whether this is the first request or a follow-up.
            </summary>
        </member>
        <member name="M:CefGlue.CefBrowser.StopFinding(System.Boolean)">
            <summary>
            Cancel all searches that are currently going on.
            </summary>
        </member>
        <member name="M:CefGlue.CefBrowser.ClearHistory">
            <summary>
            Clear the back/forward browsing history.
            </summary>
        </member>
        <member name="M:CefGlue.CefBrowser.ShowDevTools">
            <summary>
            Open developer tools in its own window.
            </summary>
        </member>
        <member name="M:CefGlue.CefBrowser.CloseDevTools">
            <summary>
            Explicitly close the developer tools window if one exists for this
            browser instance.
            </summary>
        </member>
        <member name="M:CefGlue.CefBrowser.GetSize(CefGlue.CefPaintElementType,System.Int32@,System.Int32@)">
            <summary>
            Get the size of the specified element.
            This method should only be called on the UI thread.
            </summary>
        </member>
        <member name="M:CefGlue.CefBrowser.SetSize(CefGlue.CefPaintElementType,System.Int32,System.Int32)">
            <summary>
            Set the size of the specified element.
            This method is only used when window rendering is disabled.
            </summary>
        </member>
        <member name="M:CefGlue.CefBrowser.HidePopup">
            <summary>
            Hide the currently visible popup, if any.
            </summary>
        </member>
        <member name="M:CefGlue.CefBrowser.Invalidate(CefGlue.CefRect)">
            <summary>
            Invalidate the |dirtyRect| region of the view.
            This method is only used when window rendering is disabled and will result in a call to HandlePaint().
            </summary>
        </member>
        <member name="M:CefGlue.CefBrowser.GetImage(CefGlue.CefPaintElementType,System.Int32,System.Int32,System.IntPtr)">
            <summary>
            Get the raw image data contained in the specified element without performing validation.
            The specified |width| and |height| dimensions must match the current element size.
            On Windows |buffer| must be width*height*4 bytes in size and represents a BGRA image with an upper-left origin.
            This method should only be called on the UI thread.
            </summary>
        </member>
        <member name="M:CefGlue.CefBrowser.SendKeyEvent(CefGlue.CefKeyType,CefGlue.CefKeyInfo,CefGlue.CefHandlerKeyEventModifiers)">
            <summary>
            Send a key event to the browser.
            </summary>
        </member>
        <member name="M:CefGlue.CefBrowser.SendMouseClickEvent(System.Int32,System.Int32,CefGlue.CefMouseButtonType,System.Boolean,System.Int32)">
            <summary>
            Send a mouse click event to the browser.
            The |x| and |y| coordinates are relative to the upper-left corner of the view.
            </summary>
        </member>
        <member name="M:CefGlue.CefBrowser.SendMouseMoveEvent(System.Int32,System.Int32,System.Boolean)">
            <summary>
            Send a mouse move event to the browser.
            The |x| and |y| coordinates are relative to the upper-left corner of the view.
            </summary>
        </member>
        <member name="M:CefGlue.CefBrowser.SendMouseWheelEvent(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Send a mouse wheel event to the browser.
            The |x| and |y| coordinates are relative to the upper-left corner of the view.
            </summary>
        </member>
        <member name="M:CefGlue.CefBrowser.SendFocusEvent(System.Boolean)">
            <summary>
            Send a focus event to the browser.
            </summary>
        </member>
        <member name="M:CefGlue.CefBrowser.SendCaptureLostEvent">
            <summary>
            Send a capture lost event to the browser.
            </summary>
        </member>
        <member name="M:CefGlue.CefBrowser.From(CefGlue.Interop.cef_browser_t*)">
            <summary>
            Create CefBrowser proxy from pointer.
            </summary>
        </member>
        <member name="M:CefGlue.CefBrowser.AddRef">
            <summary>
            The AddRef method increments the reference count for the object. It should
            be called for every new copy of a pointer to a given object. The resulting
            reference count value is returned and should be used for diagnostic/testing
            purposes only.
            </summary>
        </member>
        <member name="M:CefGlue.CefBrowser.ReleaseRef">
            <summary>
            The Release method decrements the reference count for the object. If the
            reference count on the object falls to 0, then the object should free
            itself from memory.  The resulting reference count value is returned and
            should be used for diagnostic/testing purposes only.
            </summary>
        </member>
        <member name="P:CefGlue.CefBrowser.CanGoBack">
            <summary>
            Returns true if the browser can navigate backwards.
            </summary>
        </member>
        <member name="P:CefGlue.CefBrowser.CanGoForward">
            <summary>
            Returns true if the browser can navigate forwards.
            </summary>
        </member>
        <member name="P:CefGlue.CefBrowser.WindowHandle">
            <summary>
            Retrieve the window handle for this browser.
            </summary>
        </member>
        <member name="P:CefGlue.CefBrowser.OpenerWindowHandle">
            <summary>
            Retrieve the window handle of the browser that opened this browser.
            Will return NULL for non-popup windows.
            This method can be used in combination with custom handling of modal windows.
            </summary>
        </member>
        <member name="P:CefGlue.CefBrowser.IsPopup">
            <summary>
            Returns true if the window is a popup window.
            </summary>
        </member>
        <member name="P:CefGlue.CefBrowser.HasDocument">
            <summary>
            Returns true if a document has been loaded in the browser.
            </summary>
        </member>
        <member name="P:CefGlue.CefBrowser.ZoomLevel">
            <summary>
            Get or sets the zoom level.
            </summary>
        </member>
        <member name="P:CefGlue.CefBrowser.IsWindowRenderingDisabled">
            <summary>
            Returns true if window rendering is disabled.
            </summary>
        </member>
        <member name="P:CefGlue.CefBrowser.IsPopupVisible">
            <summary>
            Returns true if a popup is currently visible.
            This method should only be called on the UI thread.
            </summary>
        </member>
        <member name="P:CefGlue.CefBrowser.RefCount">
            <summary>
            Return the current number of references.
            </summary>
        </member>
        <member name="M:CefGlue.CefDomDocument.GetDocument">
            <summary>
            Returns the root document node.
            </summary>
        </member>
        <member name="M:CefGlue.CefDomDocument.GetBody">
            <summary>
            Returns the BODY node of an HTML document.
            </summary>
        </member>
        <member name="M:CefGlue.CefDomDocument.GetHead">
            <summary>
            Returns the HEAD node of an HTML document.
            </summary>
        </member>
        <member name="M:CefGlue.CefDomDocument.GetTitle">
            <summary>
            Returns the title of an HTML document.
            </summary>
        </member>
        <member name="M:CefGlue.CefDomDocument.GetElementById(System.String)">
            <summary>
            Returns the document element with the specified ID value.
            </summary>
        </member>
        <member name="M:CefGlue.CefDomDocument.GetFocusedNode">
            <summary>
            Returns the node that currently has keyboard focus.
            </summary>
        </member>
        <member name="M:CefGlue.CefDomDocument.GetSelectionStartNode">
            <summary>
            Returns the selection start node.
            </summary>
        </member>
        <member name="M:CefGlue.CefDomDocument.GetSelectionStartOffset">
            <summary>
            Returns the selection offset within the start node.
            </summary>
        </member>
        <member name="M:CefGlue.CefDomDocument.GetSelectionEndNode">
            <summary>
            Returns the selection end node.
            </summary>
        </member>
        <member name="M:CefGlue.CefDomDocument.GetSelectionEndOffset">
            <summary>
            Returns the selection offset within the end node.
            </summary>
        </member>
        <member name="M:CefGlue.CefDomDocument.GetSelectionAsMarkup">
            <summary>
            Returns the contents of this selection as markup.
            </summary>
        </member>
        <member name="M:CefGlue.CefDomDocument.GetSelectionAsText">
            <summary>
            Returns the contents of this selection as text.
            </summary>
        </member>
        <member name="M:CefGlue.CefDomDocument.GetBaseURL">
            <summary>
            Returns the base URL for the document.
            </summary>
        </member>
        <member name="M:CefGlue.CefDomDocument.GetCompleteURL(System.String)">
            <summary>
            Returns a complete URL based on the document base URL and the specified partial URL.
            </summary>
        </member>
        <member name="M:CefGlue.CefDomDocument.From(CefGlue.Interop.cef_domdocument_t*)">
            <summary>
            Create CefDomDocument proxy from pointer.
            </summary>
        </member>
        <member name="M:CefGlue.CefDomDocument.AddRef">
            <summary>
            The AddRef method increments the reference count for the object. It should
            be called for every new copy of a pointer to a given object. The resulting
            reference count value is returned and should be used for diagnostic/testing
            purposes only.
            </summary>
        </member>
        <member name="M:CefGlue.CefDomDocument.ReleaseRef">
            <summary>
            The Release method decrements the reference count for the object. If the
            reference count on the object falls to 0, then the object should free
            itself from memory.  The resulting reference count value is returned and
            should be used for diagnostic/testing purposes only.
            </summary>
        </member>
        <member name="P:CefGlue.CefDomDocument.Type">
            <summary>
            Returns the document type.
            </summary>
        </member>
        <member name="P:CefGlue.CefDomDocument.HasSelection">
            <summary>
            Returns true if a portion of the document is selected.
            </summary>
        </member>
        <member name="P:CefGlue.CefDomDocument.RefCount">
            <summary>
            Return the current number of references.
            </summary>
        </member>
        <member name="M:CefGlue.CefDomEvent.GetDocument">
            <summary>
            Returns the document associated with this event.
            </summary>
        </member>
        <member name="M:CefGlue.CefDomEvent.GetTarget">
            <summary>
            Returns the target of the event.
            </summary>
        </member>
        <member name="M:CefGlue.CefDomEvent.GetCurrentTarget">
            <summary>
            Returns the current target of the event.
            </summary>
        </member>
        <member name="M:CefGlue.CefDomEvent.From(CefGlue.Interop.cef_domevent_t*)">
            <summary>
            Create CefDomEvent proxy from pointer.
            </summary>
        </member>
        <member name="M:CefGlue.CefDomEvent.AddRef">
            <summary>
            The AddRef method increments the reference count for the object. It should
            be called for every new copy of a pointer to a given object. The resulting
            reference count value is returned and should be used for diagnostic/testing
            purposes only.
            </summary>
        </member>
        <member name="M:CefGlue.CefDomEvent.ReleaseRef">
            <summary>
            The Release method decrements the reference count for the object. If the
            reference count on the object falls to 0, then the object should free
            itself from memory.  The resulting reference count value is returned and
            should be used for diagnostic/testing purposes only.
            </summary>
        </member>
        <member name="P:CefGlue.CefDomEvent.Type">
            <summary>
            Returns the event type.
            </summary>
        </member>
        <member name="P:CefGlue.CefDomEvent.Category">
            <summary>
            Returns the event category.
            </summary>
        </member>
        <member name="P:CefGlue.CefDomEvent.Phase">
            <summary>
            Returns the event processing phase.
            </summary>
        </member>
        <member name="P:CefGlue.CefDomEvent.CanBubble">
            <summary>
            Returns true if the event can bubble up the tree.
            </summary>
        </member>
        <member name="P:CefGlue.CefDomEvent.CanCancel">
            <summary>
            Returns true if the event can be canceled.
            </summary>
        </member>
        <member name="P:CefGlue.CefDomEvent.RefCount">
            <summary>
            Return the current number of references.
            </summary>
        </member>
        <member name="M:CefGlue.CefDomNode.IsSame(CefGlue.CefDomNode)">
            <summary>
            Returns true if this object is pointing to the same handle as |that| object.
            </summary>
        </member>
        <member name="M:CefGlue.CefDomNode.GetName">
            <summary>
            Returns the name of this node.
            </summary>
        </member>
        <member name="M:CefGlue.CefDomNode.GetValue">
            <summary>
            Returns the value of this node.
            </summary>
        </member>
        <member name="M:CefGlue.CefDomNode.SetValue(System.String)">
            <summary>
            Set the value of this node.
            Returns true on success.
            </summary>
        </member>
        <member name="M:CefGlue.CefDomNode.GetAsMarkup">
            <summary>
            Returns the contents of this node as markup.
            </summary>
        </member>
        <member name="M:CefGlue.CefDomNode.GetDocument">
            <summary>
            Returns the document associated with this node.
            </summary>
        </member>
        <member name="M:CefGlue.CefDomNode.GetParent">
            <summary>
            Returns the parent node.
            </summary>
        </member>
        <member name="M:CefGlue.CefDomNode.GetPreviousSibling">
            <summary>
            Returns the previous sibling node.
            </summary>
        </member>
        <member name="M:CefGlue.CefDomNode.GetNextSibling">
            <summary>
            Returns the next sibling node.
            </summary>
        </member>
        <member name="M:CefGlue.CefDomNode.GetFirstChild">
            <summary>
            Return the first child node.
            </summary>
        </member>
        <member name="M:CefGlue.CefDomNode.GetLastChild">
            <summary>
            Returns the last child node.
            </summary>
        </member>
        <member name="M:CefGlue.CefDomNode.AddEventListener(System.String,CefGlue.CefDomEventListener,System.Boolean)">
            <summary>
            Add an event listener to this node for the specified event type.
            If |useCapture| is true then this listener will be considered a capturing listener.
            Capturing listeners will recieve all events of the specified type before the events are dispatched to any other event targets beneath the current node in the tree.
            Events which are bubbling upwards through the tree will not trigger a capturing listener.
            Separate calls to this method can be used to register the same listener with and without capture.
            See WebCore/dom/EventNames.h for the list of supported event types.
            </summary>
        </member>
        <member name="M:CefGlue.CefDomNode.GetElementTagName">
            <summary>
            Returns the tag name of this element.
            </summary>
            <remarks>
            This method are valid only for element node.
            </remarks>
        </member>
        <member name="M:CefGlue.CefDomNode.HasElementAttributes">
            <summary>
            Returns true if this element has attributes.
            </summary>
            <remarks>
            This method are valid only for element node.
            </remarks>
        </member>
        <member name="M:CefGlue.CefDomNode.HasElementAttribute(System.String)">
            <summary>
            Returns true if this element has an attribute named |attrName|.
            </summary>
            <remarks>
            This method are valid only for element node.
            </remarks>
        </member>
        <member name="M:CefGlue.CefDomNode.GetElementAttribute(System.String)">
            <summary>
            Returns the element attribute named |attrName|.
            </summary>
            <remarks>
            This method are valid only for element node.
            </remarks>
        </member>
        <member name="M:CefGlue.CefDomNode.GetElementAttributes">
            <summary>
            Returns a map of all element attributes.
            </summary>
            <remarks>
            This method are valid only for element node.
            </remarks>
        </member>
        <member name="M:CefGlue.CefDomNode.SetElementAttribute(System.String,System.String)">
            <summary>
            Set the value for the element attribute named |attrName|.
            Returns true on success.
            </summary>
            <remarks>
            This method are valid only for element node.
            </remarks>
        </member>
        <member name="M:CefGlue.CefDomNode.GetElementInnerText">
            <summary>
            Returns the inner text of the element.
            </summary>
            <remarks>
            This method are valid only for element node.
            </remarks>
        </member>
        <member name="M:CefGlue.CefDomNode.From(CefGlue.Interop.cef_domnode_t*)">
            <summary>
            Create CefDomNode proxy from pointer.
            </summary>
        </member>
        <member name="M:CefGlue.CefDomNode.AddRef">
            <summary>
            The AddRef method increments the reference count for the object. It should
            be called for every new copy of a pointer to a given object. The resulting
            reference count value is returned and should be used for diagnostic/testing
            purposes only.
            </summary>
        </member>
        <member name="M:CefGlue.CefDomNode.ReleaseRef">
            <summary>
            The Release method decrements the reference count for the object. If the
            reference count on the object falls to 0, then the object should free
            itself from memory.  The resulting reference count value is returned and
            should be used for diagnostic/testing purposes only.
            </summary>
        </member>
        <member name="P:CefGlue.CefDomNode.Type">
            <summary>
            Returns the type for this node.
            </summary>
        </member>
        <member name="P:CefGlue.CefDomNode.IsText">
            <summary>
            Returns true if this is a text node.
            </summary>
        </member>
        <member name="P:CefGlue.CefDomNode.IsElement">
            <summary>
            Returns true if this is an element node.
            </summary>
        </member>
        <member name="P:CefGlue.CefDomNode.IsFormControlElement">
            <summary>
            Returns true if this is a form control element node.
            </summary>
        </member>
        <member name="P:CefGlue.CefDomNode.FormControlElementType">
            <summary>
            Returns the type of this form control element node.
            </summary>
        </member>
        <member name="P:CefGlue.CefDomNode.HasChildren">
            <summary>
            Returns true if this node has child nodes.
            </summary>
        </member>
        <member name="P:CefGlue.CefDomNode.RefCount">
            <summary>
            Return the current number of references.
            </summary>
        </member>
        <member name="M:CefGlue.CefFrame.Undo">
            <summary>
            Execute undo in this frame.
            </summary>
        </member>
        <member name="M:CefGlue.CefFrame.Redo">
            <summary>
            Execute redo in this frame.
            </summary>
        </member>
        <member name="M:CefGlue.CefFrame.Cut">
            <summary>
            Execute cut in this frame.
            </summary>
        </member>
        <member name="M:CefGlue.CefFrame.Copy">
            <summary>
            Execute copy in this frame.
            </summary>
        </member>
        <member name="M:CefGlue.CefFrame.Paste">
            <summary>
            Execute paste in this frame.
            </summary>
        </member>
        <member name="M:CefGlue.CefFrame.Delete">
            <summary>
            Execute delete in this frame.
            </summary>
        </member>
        <member name="M:CefGlue.CefFrame.SelectAll">
            <summary>
            Execute select all in this frame.
            </summary>
        </member>
        <member name="M:CefGlue.CefFrame.Print">
            <summary>
            Execute printing in the this frame.
            The user will be prompted with the print dialog appropriate to the operating system.
            </summary>
        </member>
        <member name="M:CefGlue.CefFrame.ViewSource">
            <summary>
            Save this frame's HTML source to a temporary file and open it in the default text viewing application.
            </summary>
        </member>
        <member name="M:CefGlue.CefFrame.GetSource">
            <summary>
            Returns this frame's HTML source as a string.
            This method should only be called on the UI thread.
            </summary>
        </member>
        <member name="M:CefGlue.CefFrame.GetText">
            <summary>
            Returns this frame's display text as a string.
            This method should only be called on the UI thread.
            </summary>
        </member>
        <member name="M:CefGlue.CefFrame.LoadRequest(CefGlue.CefRequest)">
            <summary>
            Load the request represented by the |request| object.
            </summary>
        </member>
        <member name="M:CefGlue.CefFrame.LoadURL(System.String)">
            <summary>
            Load the specified |url|.
            </summary>
        </member>
        <member name="M:CefGlue.CefFrame.LoadString(System.String,System.String)">
            <summary>
            Load the contents of |string| with the optional dummy target |url|.
            </summary>
        </member>
        <member name="M:CefGlue.CefFrame.LoadStream(CefGlue.CefStreamReader,System.String)">
            <summary>
            Load the contents of |stream| with the optional dummy target |url|.
            </summary>
        </member>
        <member name="M:CefGlue.CefFrame.ExecuteJavaScript(System.String,System.String,System.Int32)">
            <summary>
            Execute a string of JavaScript code in this frame.
            The |script_url| parameter is the URL where the script in question can be found, if any.
            The renderer may request this URL to show the developer the source of the error.
            The |start_line| parameter is the base line number to use for error reporting.
            </summary>
        </member>
        <member name="M:CefGlue.CefFrame.GetName">
            <summary>
            Returns this frame's name.
            </summary>
        </member>
        <member name="M:CefGlue.CefFrame.GetURL">
            <summary>
            Returns the URL currently loaded in this frame.
            This method should only be called on the UI thread.
            </summary>
        </member>
        <member name="M:CefGlue.CefFrame.GetBrowser">
            <summary>
            Returns the browser that this frame belongs to.
            </summary>
        </member>
        <member name="M:CefGlue.CefFrame.VisitDom(CefGlue.CefDomVisitor)">
            <summary>
            Visit the DOM document.
            </summary>
        </member>
        <member name="M:CefGlue.CefFrame.GetV8Context">
            <summary>
            Get the V8 context associated with the frame.
            This method should only be called on the UI thread.
            </summary>
        </member>
        <member name="M:CefGlue.CefFrame.From(CefGlue.Interop.cef_frame_t*)">
            <summary>
            Create CefFrame proxy from pointer.
            </summary>
        </member>
        <member name="M:CefGlue.CefFrame.AddRef">
            <summary>
            The AddRef method increments the reference count for the object. It should
            be called for every new copy of a pointer to a given object. The resulting
            reference count value is returned and should be used for diagnostic/testing
            purposes only.
            </summary>
        </member>
        <member name="M:CefGlue.CefFrame.ReleaseRef">
            <summary>
            The Release method decrements the reference count for the object. If the
            reference count on the object falls to 0, then the object should free
            itself from memory.  The resulting reference count value is returned and
            should be used for diagnostic/testing purposes only.
            </summary>
        </member>
        <member name="P:CefGlue.CefFrame.IsMain">
            <summary>
            Returns true if this is the main frame.
            </summary>
        </member>
        <member name="P:CefGlue.CefFrame.IsFocused">
            <summary>
            Returns true if this is the focused frame. This method should only be
            called on the UI thread.
            </summary>
        </member>
        <member name="P:CefGlue.CefFrame.RefCount">
            <summary>
            Return the current number of references.
            </summary>
        </member>
        <member name="M:CefGlue.CefPostData.Create">
            <summary>
            Create a new CefPostData object.
            </summary>
        </member>
        <member name="M:CefGlue.CefPostData.GetElementCount">
            <summary>
            Returns the number of existing post data elements.
            </summary>
        </member>
        <member name="M:CefGlue.CefPostData.GetElements(System.Int32)">
            <summary>
            Retrieve the post data elements.
            </summary>
        </member>
        <member name="M:CefGlue.CefPostData.RemoveElement(CefGlue.CefPostDataElement)">
            <summary>
            Remove the specified post data element.
            Returns true if the removal succeeds.
            </summary>
        </member>
        <member name="M:CefGlue.CefPostData.AddElement(CefGlue.CefPostDataElement)">
            <summary>
            Add the specified post data element.
            Returns true if the add succeeds.
            </summary>
        </member>
        <member name="M:CefGlue.CefPostData.RemoveElements">
            <summary>
            Remove all existing post data elements.
            </summary>
        </member>
        <member name="M:CefGlue.CefPostData.From(CefGlue.Interop.cef_post_data_t*)">
            <summary>
            Create CefPostData proxy from pointer.
            </summary>
        </member>
        <member name="M:CefGlue.CefPostData.AddRef">
            <summary>
            The AddRef method increments the reference count for the object. It should
            be called for every new copy of a pointer to a given object. The resulting
            reference count value is returned and should be used for diagnostic/testing
            purposes only.
            </summary>
        </member>
        <member name="M:CefGlue.CefPostData.ReleaseRef">
            <summary>
            The Release method decrements the reference count for the object. If the
            reference count on the object falls to 0, then the object should free
            itself from memory.  The resulting reference count value is returned and
            should be used for diagnostic/testing purposes only.
            </summary>
        </member>
        <member name="P:CefGlue.CefPostData.RefCount">
            <summary>
            Return the current number of references.
            </summary>
        </member>
        <member name="M:CefGlue.CefPostDataElement.Create">
            <summary>
            Create a new CefPostDataElement object.
            </summary>
        </member>
        <member name="M:CefGlue.CefPostDataElement.SetToEmpty">
            <summary>
            Remove all contents from the post data element.
            </summary>
        </member>
        <member name="M:CefGlue.CefPostDataElement.SetToFile(System.String)">
            <summary>
            The post data element will represent a file.
            </summary>
        </member>
        <member name="M:CefGlue.CefPostDataElement.SetToBytes(System.Int32,System.IntPtr)">
            <summary>
            The post data element will represent bytes.
            The bytes passed in will be copied.
            </summary>
        </member>
        <member name="M:CefGlue.CefPostDataElement.GetFile">
            <summary>
            Return the file name.
            </summary>
        </member>
        <member name="M:CefGlue.CefPostDataElement.GetBytesCount">
            <summary>
            Return the number of bytes.
            </summary>
        </member>
        <member name="M:CefGlue.CefPostDataElement.GetBytes(System.Int32,System.IntPtr)">
            <summary>
            Read up to |size| bytes into |bytes| and return the number of bytes actually read.
            </summary>
        </member>
        <member name="M:CefGlue.CefPostDataElement.From(CefGlue.Interop.cef_post_data_element_t*)">
            <summary>
            Create CefPostDataElement proxy from pointer.
            </summary>
        </member>
        <member name="M:CefGlue.CefPostDataElement.AddRef">
            <summary>
            The AddRef method increments the reference count for the object. It should
            be called for every new copy of a pointer to a given object. The resulting
            reference count value is returned and should be used for diagnostic/testing
            purposes only.
            </summary>
        </member>
        <member name="M:CefGlue.CefPostDataElement.ReleaseRef">
            <summary>
            The Release method decrements the reference count for the object. If the
            reference count on the object falls to 0, then the object should free
            itself from memory.  The resulting reference count value is returned and
            should be used for diagnostic/testing purposes only.
            </summary>
        </member>
        <member name="P:CefGlue.CefPostDataElement.Type">
            <summary>
            Return the type of this post data element.
            </summary>
        </member>
        <member name="P:CefGlue.CefPostDataElement.RefCount">
            <summary>
            Return the current number of references.
            </summary>
        </member>
        <member name="M:CefGlue.CefRequest.Create">
            <summary>
            Create a new CefRequest object.
            </summary>
        </member>
        <member name="M:CefGlue.CefRequest.GetURL">
            <summary>
            Get the fully qualified URL.
            </summary>
        </member>
        <member name="M:CefGlue.CefRequest.SetURL(System.String)">
            <summary>
            Set the fully qualified URL.
            </summary>
        </member>
        <member name="M:CefGlue.CefRequest.GetMethod">
            <summary>
            Get the request method type.
            The value will default to POST if post data is provided and GET otherwise.
            </summary>
        </member>
        <member name="M:CefGlue.CefRequest.SetMethod(System.String)">
            <summary>
            Set the request method type.
            </summary>
        </member>
        <member name="M:CefGlue.CefRequest.GetPostData">
            <summary>
            Get the post data.
            </summary>
        </member>
        <member name="M:CefGlue.CefRequest.SetPostData(CefGlue.CefPostData)">
            <summary>
            Set the post data.
            </summary>
        </member>
        <member name="M:CefGlue.CefRequest.GetHeaderMap">
            <summary>
            Get the header values.
            </summary>
        </member>
        <member name="M:CefGlue.CefRequest.SetHeaderMap(CefGlue.CefStringMultiMap)">
            <summary>
            Set the header values.
            </summary>
        </member>
        <member name="M:CefGlue.CefRequest.Set(System.String,System.String,CefGlue.CefPostData,CefGlue.CefStringMultiMap)">
            <summary>
            Set all values at one time.
            </summary>
        </member>
        <member name="M:CefGlue.CefRequest.GetFlags">
            <summary>
            Get the flags used in combination with CefWebURLRequest.
            </summary>
        </member>
        <member name="M:CefGlue.CefRequest.SetFlags(CefGlue.CefWebUrlRequestFlags)">
            <summary>
            Set the flags used in combination with CefWebURLRequest.
            </summary>
        </member>
        <member name="M:CefGlue.CefRequest.GetFirstPartyForCookies">
            <summary>
            Set the URL to the first party for cookies used in combination with CefWebUrlRequest.
            </summary>
        </member>
        <member name="M:CefGlue.CefRequest.SetFirstPartyForCookies(System.String)">
            <summary>
            Get the URL to the first party for cookies used in combination with CefWebUrlRequest.
            </summary>
        </member>
        <member name="M:CefGlue.CefRequest.From(CefGlue.Interop.cef_request_t*)">
            <summary>
            Create CefRequest proxy from pointer.
            </summary>
        </member>
        <member name="M:CefGlue.CefRequest.AddRef">
            <summary>
            The AddRef method increments the reference count for the object. It should
            be called for every new copy of a pointer to a given object. The resulting
            reference count value is returned and should be used for diagnostic/testing
            purposes only.
            </summary>
        </member>
        <member name="M:CefGlue.CefRequest.ReleaseRef">
            <summary>
            The Release method decrements the reference count for the object. If the
            reference count on the object falls to 0, then the object should free
            itself from memory.  The resulting reference count value is returned and
            should be used for diagnostic/testing purposes only.
            </summary>
        </member>
        <member name="P:CefGlue.CefRequest.RefCount">
            <summary>
            Return the current number of references.
            </summary>
        </member>
        <member name="M:CefGlue.CefResponse.GetStatus">
            <summary>
            Get the response status code.
            </summary>
        </member>
        <member name="M:CefGlue.CefResponse.SetStatus(System.Int32)">
            <summary>
            Set the response status code.
            </summary>
        </member>
        <member name="M:CefGlue.CefResponse.GetStatusText">
            <summary>
            Get the response status text.
            </summary>
        </member>
        <member name="M:CefGlue.CefResponse.SetStatusText(System.String)">
            <summary>
            Set the response status text.
            </summary>
        </member>
        <member name="M:CefGlue.CefResponse.GetMimeType">
            <summary>
            Get the response mime type.
            </summary>
        </member>
        <member name="M:CefGlue.CefResponse.SetMimeType(System.String)">
            <summary>
            Set the response mime type.
            </summary>
        </member>
        <member name="M:CefGlue.CefResponse.GetHeader(System.String)">
            <summary>
            Get the value for the specified response header field.
            </summary>
        </member>
        <member name="M:CefGlue.CefResponse.GetHeaderMap">
            <summary>
            Get all response header fields.
            </summary>
        </member>
        <member name="M:CefGlue.CefResponse.SetHeaderMap(CefGlue.CefStringMultiMap)">
            <summary>
            Set all response header fields.
            </summary>
        </member>
        <member name="M:CefGlue.CefResponse.From(CefGlue.Interop.cef_response_t*)">
            <summary>
            Create CefResponse proxy from pointer.
            </summary>
        </member>
        <member name="M:CefGlue.CefResponse.AddRef">
            <summary>
            The AddRef method increments the reference count for the object. It should
            be called for every new copy of a pointer to a given object. The resulting
            reference count value is returned and should be used for diagnostic/testing
            purposes only.
            </summary>
        </member>
        <member name="M:CefGlue.CefResponse.ReleaseRef">
            <summary>
            The Release method decrements the reference count for the object. If the
            reference count on the object falls to 0, then the object should free
            itself from memory.  The resulting reference count value is returned and
            should be used for diagnostic/testing purposes only.
            </summary>
        </member>
        <member name="P:CefGlue.CefResponse.RefCount">
            <summary>
            Return the current number of references.
            </summary>
        </member>
        <member name="M:CefGlue.CefStreamReader.Create(System.String)">
            <summary>
            Create a new CefStreamReader object from a file.
            </summary>
        </member>
        <member name="M:CefGlue.CefStreamReader.Create(System.Void*,System.Int32)">
            <summary>
            Create a new CefStreamReader object from data.
            </summary>
            <remarks>It will copy data.</remarks>
        </member>
        <member name="M:CefGlue.CefStreamReader.Create(CefGlue.CefReadHandler)">
            <summary>
            Create a new CefStreamReader object from a custom handler.
            </summary>
        </member>
        <member name="M:CefGlue.CefStreamReader.Read(System.Void*,System.Int32,System.Int32)">
            <summary>
            Read raw binary data.
            </summary>
        </member>
        <member name="M:CefGlue.CefStreamReader.Read(System.Byte[],System.Int32,System.Int32)">
            <summary>
            Read raw binary data.
            </summary>
        </member>
        <member name="M:CefGlue.CefStreamReader.Seek(System.Int64,System.IO.SeekOrigin)">
            <summary>
            Seek to the specified offset position.
            |whence| may be any one of SEEK_CUR, SEEK_END or SEEK_SET.
            Returns zero on success and non-zero on failure.
            </summary>
        </member>
        <member name="M:CefGlue.CefStreamReader.Tell">
            <summary>
            Return the current offset position.
            </summary>
        </member>
        <member name="M:CefGlue.CefStreamReader.Eof">
            <summary>
            Return non-zero if at end of file.
            </summary>
        </member>
        <member name="M:CefGlue.CefStreamReader.From(CefGlue.Interop.cef_stream_reader_t*)">
            <summary>
            Create CefStreamReader proxy from pointer.
            </summary>
        </member>
        <member name="M:CefGlue.CefStreamReader.AddRef">
            <summary>
            The AddRef method increments the reference count for the object. It should
            be called for every new copy of a pointer to a given object. The resulting
            reference count value is returned and should be used for diagnostic/testing
            purposes only.
            </summary>
        </member>
        <member name="M:CefGlue.CefStreamReader.ReleaseRef">
            <summary>
            The Release method decrements the reference count for the object. If the
            reference count on the object falls to 0, then the object should free
            itself from memory.  The resulting reference count value is returned and
            should be used for diagnostic/testing purposes only.
            </summary>
        </member>
        <member name="P:CefGlue.CefStreamReader.RefCount">
            <summary>
            Return the current number of references.
            </summary>
        </member>
        <member name="M:CefGlue.CefStreamWriter.Create(System.String)">
            <summary>
            Create a new CefStreamWriter object for a file.
            </summary>
        </member>
        <member name="M:CefGlue.CefStreamWriter.Create(CefGlue.CefWriteHandler)">
            <summary>
            Create a new CefStreamWriter object for a custom handler.
            </summary>
        </member>
        <member name="M:CefGlue.CefStreamWriter.Write(System.Void*,System.Int32,System.Int32)">
            <summary>
            Write raw binary data.
            </summary>
        </member>
        <member name="M:CefGlue.CefStreamWriter.Write(System.Byte[],System.Int32,System.Int32)">
            <summary>
            Write raw binary data.
            </summary>
        </member>
        <member name="M:CefGlue.CefStreamWriter.Seek(System.Int64,System.IO.SeekOrigin)">
            <summary>
            Seek to the specified offset position.
            |whence| may be any one of SEEK_CUR, SEEK_END or SEEK_SET.
            </summary>
        </member>
        <member name="M:CefGlue.CefStreamWriter.Tell">
            <summary>
            Return the current offset position.
            </summary>
        </member>
        <member name="M:CefGlue.CefStreamWriter.Flush">
            <summary>
            Flush the stream.
            </summary>
        </member>
        <member name="M:CefGlue.CefStreamWriter.From(CefGlue.Interop.cef_stream_writer_t*)">
            <summary>
            Create CefStreamWriter proxy from pointer.
            </summary>
        </member>
        <member name="M:CefGlue.CefStreamWriter.AddRef">
            <summary>
            The AddRef method increments the reference count for the object. It should
            be called for every new copy of a pointer to a given object. The resulting
            reference count value is returned and should be used for diagnostic/testing
            purposes only.
            </summary>
        </member>
        <member name="M:CefGlue.CefStreamWriter.ReleaseRef">
            <summary>
            The Release method decrements the reference count for the object. If the
            reference count on the object falls to 0, then the object should free
            itself from memory.  The resulting reference count value is returned and
            should be used for diagnostic/testing purposes only.
            </summary>
        </member>
        <member name="P:CefGlue.CefStreamWriter.RefCount">
            <summary>
            Return the current number of references.
            </summary>
        </member>
        <member name="M:CefGlue.CefV8Context.GetCurrentContext">
            <summary>
            Returns the current (top) context object in the V8 context stack.
            </summary>
        </member>
        <member name="M:CefGlue.CefV8Context.GetEnteredContext">
            <summary>
            Returns the entered (bottom) context object in the V8 context stack.
            </summary>
        </member>
        <member name="M:CefGlue.CefV8Context.InContext">
            <summary>
            Returns true if V8 is currently inside a context.
            </summary>
        </member>
        <member name="M:CefGlue.CefV8Context.GetBrowser">
            <summary>
            Returns the browser for this context.
            </summary>
        </member>
        <member name="M:CefGlue.CefV8Context.GetFrame">
            <summary>
            Returns the frame for this context.
            </summary>
        </member>
        <member name="M:CefGlue.CefV8Context.GetGlobal">
            <summary>
            Returns the global object for this context. The context must be entered
            before calling this method.
            </summary>
        </member>
        <member name="M:CefGlue.CefV8Context.Enter">
            <summary>
            Enter this context. A context must be explicitly entered before creating a
            V8 Object, Array, Function or Date asynchronously. Exit() must be called
            the same number of times as Enter() before releasing this context. V8
            objects belong to the context in which they are created. Returns true if
            the scope was entered successfully.
            </summary>
        </member>
        <member name="M:CefGlue.CefV8Context.Exit">
            <summary>
            Exit this context.
            Call this method only after calling Enter().
            Returns true if the scope was exited successfully.
            </summary>
        </member>
        <member name="M:CefGlue.CefV8Context.IsSame(CefGlue.CefV8Context)">
            <summary>
            Returns true if this object is pointing to the same handle as |that|
            object.
            </summary>
        </member>
        <member name="M:CefGlue.CefV8Context.Eval(System.String,CefGlue.CefV8Value@,CefGlue.CefV8Exception@)">
            <summary>
            Evaluates the specified JavaScript code using this context's global object.
            On success |retval| will be set to the return value, if any, and the
            function will return true. On failure |exception| will be set to the
            exception, if any, and the function will return false.
            </summary>
        </member>
        <member name="M:CefGlue.CefV8Context.From(CefGlue.Interop.cef_v8context_t*)">
            <summary>
            Create CefV8Context proxy from pointer.
            </summary>
        </member>
        <member name="M:CefGlue.CefV8Context.AddRef">
            <summary>
            The AddRef method increments the reference count for the object. It should
            be called for every new copy of a pointer to a given object. The resulting
            reference count value is returned and should be used for diagnostic/testing
            purposes only.
            </summary>
        </member>
        <member name="M:CefGlue.CefV8Context.ReleaseRef">
            <summary>
            The Release method decrements the reference count for the object. If the
            reference count on the object falls to 0, then the object should free
            itself from memory.  The resulting reference count value is returned and
            should be used for diagnostic/testing purposes only.
            </summary>
        </member>
        <member name="P:CefGlue.CefV8Context.RefCount">
            <summary>
            Return the current number of references.
            </summary>
        </member>
        <member name="M:CefGlue.CefV8Value.CreateUndefined">
            <summary>
            Create a new CefV8Value object of type undefined.
            </summary>
        </member>
        <member name="M:CefGlue.CefV8Value.CreateNull">
            <summary>
            Create a new CefV8Value object of type null.
            </summary>
        </member>
        <member name="M:CefGlue.CefV8Value.CreateBool(System.Boolean)">
            <summary>
            Create a new CefV8Value object of type bool.
            </summary>
        </member>
        <member name="M:CefGlue.CefV8Value.CreateInt(System.Int32)">
            <summary>
            Create a new CefV8Value object of type int.
            </summary>
        </member>
        <member name="M:CefGlue.CefV8Value.CreateUInt(System.UInt32)">
            <summary>
            Create a new CefV8Value object of type unsigned int.
            </summary>
        </member>
        <member name="M:CefGlue.CefV8Value.CreateDouble(System.Double)">
            <summary>
            Create a new CefV8Value object of type double.
            </summary>
        </member>
        <member name="M:CefGlue.CefV8Value.CreateDate(System.DateTime)">
            <summary>
            Create a new CefV8Value object of type Date.
            </summary>
        </member>
        <member name="M:CefGlue.CefV8Value.CreateString(System.String)">
            <summary>
            Create a new CefV8Value object of type string.
            </summary>
        </member>
        <member name="M:CefGlue.CefV8Value.CreateObject">
            <summary>
            Create a new CefV8Value object of type object.
            </summary>
        </member>
        <member name="M:CefGlue.CefV8Value.CreateObject(CefGlue.CefV8Accessor)">
            <summary>
            Create a new CefV8Value object of type object with accessors.
            </summary>
        </member>
        <member name="M:CefGlue.CefV8Value.CreateArray(System.Int32)">
            <summary>
            Create a new CefV8Value object of type array.
            </summary>
        </member>
        <member name="M:CefGlue.CefV8Value.CreateFunction(System.String,CefGlue.CefV8Handler)">
            <summary>
            Create a new CefV8Value object of type function.
            </summary>
        </member>
        <member name="M:CefGlue.CefV8Value.IsSame(CefGlue.CefV8Value)">
            <summary>
            Returns true if this object is pointing to the same handle as |that| object.
            </summary>
        </member>
        <member name="M:CefGlue.CefV8Value.GetBoolValue">
            <summary>
            Return a bool value.
            The underlying data will be converted to if necessary.
            </summary>
        </member>
        <member name="M:CefGlue.CefV8Value.GetIntValue">
            <summary>
            Return an int value.
            The underlying data will be converted to if necessary.
            </summary>
        </member>
        <member name="M:CefGlue.CefV8Value.GetUIntValue">
            <summary>
            Return an unsigned int value.
            The underlying data will be converted to if necessary.
            </summary>
        </member>
        <member name="M:CefGlue.CefV8Value.GetDoubleValue">
            <summary>
            Return a double value.
            The underlying data will be converted to if necessary.
            </summary>
        </member>
        <member name="M:CefGlue.CefV8Value.GetDateValue">
            <summary>
            Return a Date value.
            The underlying data will be converted to if necessary.
            </summary>
        </member>
        <member name="M:CefGlue.CefV8Value.GetStringValue">
            <summary>
            Return a string value.
            The underlying data will be converted to if necessary.
            </summary>
        </member>
        <member name="M:CefGlue.CefV8Value.HasValue(System.String)">
            <summary>
            Returns true if the object has a value with the specified identifier.
            </summary>
        </member>
        <member name="M:CefGlue.CefV8Value.HasValue(System.Int32)">
            <summary>
            Returns true if the object has a value with the specified identifier.
            </summary>
        </member>
        <member name="M:CefGlue.CefV8Value.DeleteValue(System.String)">
            <summary>
            Delete the value with the specified identifier and returns true on
            success. Returns false if this method is called incorrectly or an exception
            is thrown. For read-only and don't-delete values this method will return
            true even though deletion failed.
            </summary>
        </member>
        <member name="M:CefGlue.CefV8Value.DeleteValue(System.Int32)">
            <summary>
            Delete the value with the specified identifier and returns true on
            success. Returns false if this method is called incorrectly, deletion fails
            or an exception is thrown. For read-only and don't-delete values this
            method will return true even though deletion failed.
            </summary>
        </member>
        <member name="M:CefGlue.CefV8Value.GetValue(System.String)">
            <summary>
            Returns the value with the specified identifier on success. Returns null
            if this method is called incorrectly or an exception is thrown.
            </summary>
        </member>
        <member name="M:CefGlue.CefV8Value.GetValue(System.Int32)">
            <summary>
            Returns the value with the specified identifier on success. Returns null
            if this method is called incorrectly or an exception is thrown.
            </summary>
        </member>
        <member name="M:CefGlue.CefV8Value.SetValue(System.String,CefGlue.CefV8Value,CefGlue.CefV8PropertyAttribute)">
            <summary>
            Associates a value with the specified identifier and returns true on
            success. Returns false if this method is called incorrectly or an exception
            is thrown. For read-only values this method will return true even though
            assignment failed.
            </summary>
        </member>
        <member name="M:CefGlue.CefV8Value.SetValue(System.Int32,CefGlue.CefV8Value)">
            <summary>
            Associates a value with the specified identifier and returns true on
            success. Returns false if this method is called incorrectly or an exception
            is thrown. For read-only values this method will return true even though
            assignment failed.
            </summary>
        </member>
        <member name="M:CefGlue.CefV8Value.SetValue(System.String,CefGlue.CefV8AccessControl,CefGlue.CefV8PropertyAttribute)">
            <summary>
            Registers an identifier and returns true on success. Access to the
            identifier will be forwarded to the CefV8Accessor instance passed to
            CefV8Value::CreateObject(). Returns false if this method is called
            incorrectly or an exception is thrown. For read-only values this method
            will return true even though assignment failed.
            </summary>
        </member>
        <member name="M:CefGlue.CefV8Value.TryGetKeys(CefGlue.CefStringList@)">
            <summary>
            Read the keys for the object's values into the specified vector.
            Integer- based keys will also be returned as strings.
            </summary>
        </member>
        <member name="M:CefGlue.CefV8Value.GetKeys">
            <summary>
            Read the keys for the object's values into the specified vector.
            Integer- based keys will also be returned as strings.
            </summary>
        </member>
        <member name="M:CefGlue.CefV8Value.SetUserData(CefGlue.CefUserData)">
            <summary>
            Sets the user data for this object and returns true on success. Returns
            false if this method is called incorrectly. This method can only be called
            on user created objects.
            </summary>
        </member>
        <member name="M:CefGlue.CefV8Value.GetUserData">
            <summary>
            Returns the user data, if any, specified when the object was created.
            </summary>
        </member>
        <member name="M:CefGlue.CefV8Value.GetExternallyAllocatedMemory">
            <summary>
            Returns the amount of externally allocated memory registered for the
            object.
            </summary>
        </member>
        <member name="M:CefGlue.CefV8Value.AdjustExternallyAllocatedMemory(System.Int32)">
            <summary>
            Adjusts the amount of registered external memory for the object. Used to
            give V8 an indication of the amount of externally allocated memory that is
            kept alive by JavaScript objects. V8 uses this information to decide when
            to perform global garbage collection. Each CefV8Value tracks the amount of
            external memory associated with it and automatically decreases the global
            total by the appropriate amount on its destruction. |change_in_bytes|
            specifies the number of bytes to adjust by. This method returns the number
            of bytes associated with the object after the adjustment. This method can
            only be called on user created objects.
            </summary>
        </member>
        <member name="M:CefGlue.CefV8Value.GetArrayLength">
            <summary>
            Returns the number of elements in the array.
            </summary>
        </member>
        <member name="M:CefGlue.CefV8Value.GetFunctionName">
            <summary>
            Returns the function name.
            </summary>
        </member>
        <member name="M:CefGlue.CefV8Value.GetFunctionHandler">
            <summary>
            Returns the function handler or NULL if not a CEF-created function.
            </summary>
        </member>
        <member name="M:CefGlue.CefV8Value.GetException">
            <summary>
            Returns the exception resulting from the last method call. This attribute
            exists only in the scope of the current CEF value object.
            </summary>
        </member>
        <member name="M:CefGlue.CefV8Value.ClearException">
            <summary>
            Clears the last exception and returns true on success.
            </summary>
        </member>
        <member name="M:CefGlue.CefV8Value.SetRethrowExceptions(System.Boolean)">
            <summary>
            Set whether this object will re-throw future exceptions. By default
            exceptions are not re-thrown. If a exception is re-thrown the current
            context should not be accessed again until after the exception has been
            caught and not re-thrown. Returns true on success. This attribute exists
            only in the scope of the current CEF value object.
            </summary>
        </member>
        <member name="M:CefGlue.CefV8Value.ExecuteFunction(CefGlue.CefV8Value,CefGlue.CefV8Value[])">
            <summary>
            Execute the function using the current V8 context. This method should only
            be called from within the scope of a CefV8Handler or CefV8Accessor
            callback, or in combination with calling Enter() and Exit() on a stored
            CefV8Context reference. |object| is the receiver ('this' object) of the
            function. If |object| is empty the current context's global object will be
            used. |arguments| is the list of arguments that will be passed to the
            function. Returns the function return value on success. Returns NULL if
            this method is called incorrectly or an exception is thrown.
            </summary>
        </member>
        <member name="M:CefGlue.CefV8Value.ExecuteFunctionWithContext(CefGlue.CefV8Context,CefGlue.CefV8Value,CefGlue.CefV8Value[])">
            <summary>
            Execute the function using the specified V8 context. |object| is the
            receiver ('this' object) of the function. If |object| is empty the
            specified context's global object will be used. |arguments| is the list of
            arguments that will be passed to the function. Returns the function return
            value on success. Returns NULL if this method is called incorrectly or an
            exception is thrown.
            </summary>
        </member>
        <member name="M:CefGlue.CefV8Value.From(CefGlue.Interop.cef_v8value_t*)">
            <summary>
            Create CefV8Value proxy from pointer.
            </summary>
        </member>
        <member name="M:CefGlue.CefV8Value.AddRef">
            <summary>
            The AddRef method increments the reference count for the object. It should
            be called for every new copy of a pointer to a given object. The resulting
            reference count value is returned and should be used for diagnostic/testing
            purposes only.
            </summary>
        </member>
        <member name="M:CefGlue.CefV8Value.ReleaseRef">
            <summary>
            The Release method decrements the reference count for the object. If the
            reference count on the object falls to 0, then the object should free
            itself from memory.  The resulting reference count value is returned and
            should be used for diagnostic/testing purposes only.
            </summary>
        </member>
        <member name="P:CefGlue.CefV8Value.IsUndefined">
            <summary>
            True if the value type is undefined.
            </summary>
        </member>
        <member name="P:CefGlue.CefV8Value.IsNull">
            <summary>
            True if the value type is null.
            </summary>
        </member>
        <member name="P:CefGlue.CefV8Value.IsBool">
            <summary>
            True if the value type is bool.
            </summary>
        </member>
        <member name="P:CefGlue.CefV8Value.IsInt">
            <summary>
            True if the value type is int.
            </summary>
        </member>
        <member name="P:CefGlue.CefV8Value.IsUInt">
            <summary>
            True if the value type is unsigned int.
            </summary>
        </member>
        <member name="P:CefGlue.CefV8Value.IsDouble">
            <summary>
            True if the value type is double.
            </summary>
        </member>
        <member name="P:CefGlue.CefV8Value.IsDate">
            <summary>
            True if the value type is Date.
            </summary>
        </member>
        <member name="P:CefGlue.CefV8Value.IsString">
            <summary>
            True if the value type is string.
            </summary>
        </member>
        <member name="P:CefGlue.CefV8Value.IsObject">
            <summary>
            True if the value type is object.
            </summary>
        </member>
        <member name="P:CefGlue.CefV8Value.IsArray">
            <summary>
            True if the value type is array.
            </summary>
        </member>
        <member name="P:CefGlue.CefV8Value.IsFunction">
            <summary>
            True if the value type is function.
            </summary>
        </member>
        <member name="P:CefGlue.CefV8Value.IsUserCreated">
            <summary>
            Returns true if this is a user created object.
            </summary>
        </member>
        <member name="P:CefGlue.CefV8Value.HasException">
            <summary>
            Returns true if the last method call resulted in an exception. This
            attribute exists only in the scope of the current CEF value object.
            </summary>
        </member>
        <member name="P:CefGlue.CefV8Value.WillRethrowExceptions">
            <summary>
            Returns true if this object will re-throw future exceptions. This attribute
            exists only in the scope of the current CEF value object.
            </summary>
        </member>
        <member name="P:CefGlue.CefV8Value.RefCount">
            <summary>
            Return the current number of references.
            </summary>
        </member>
        <member name="M:CefGlue.CefWebUrlRequest.Create(CefGlue.CefRequest,CefGlue.CefWebUrlRequestClient)">
            <summary>
            Create a new CefWebUrlRequest object.
            </summary>
        </member>
        <member name="M:CefGlue.CefWebUrlRequest.Cancel">
            <summary>
            Cancels the request.
            </summary>
        </member>
        <member name="M:CefGlue.CefWebUrlRequest.GetState">
            <summary>
            Returns the current ready state of the request.
            </summary>
        </member>
        <member name="M:CefGlue.CefWebUrlRequest.From(CefGlue.Interop.cef_web_urlrequest_t*)">
            <summary>
            Create CefWebUrlRequest proxy from pointer.
            </summary>
        </member>
        <member name="M:CefGlue.CefWebUrlRequest.AddRef">
            <summary>
            The AddRef method increments the reference count for the object. It should
            be called for every new copy of a pointer to a given object. The resulting
            reference count value is returned and should be used for diagnostic/testing
            purposes only.
            </summary>
        </member>
        <member name="M:CefGlue.CefWebUrlRequest.ReleaseRef">
            <summary>
            The Release method decrements the reference count for the object. If the
            reference count on the object falls to 0, then the object should free
            itself from memory.  The resulting reference count value is returned and
            should be used for diagnostic/testing purposes only.
            </summary>
        </member>
        <member name="P:CefGlue.CefWebUrlRequest.RefCount">
            <summary>
            Return the current number of references.
            </summary>
        </member>
        <member name="M:CefGlue.CefXmlReader.Create(CefGlue.CefStreamReader,CefGlue.CefXmlEncodingType,System.String)">
            <summary>
            Create a new CefXmlReader object.
            The returned object's methods can only be called from the thread that created the object.
            </summary>
        </member>
        <member name="M:CefGlue.CefXmlReader.Create(CefGlue.CefStreamReader,CefGlue.CefXmlEncodingType,System.Uri)">
            <summary>
            Create a new CefXmlReader object.
            The returned object's methods can only be called from the thread that created the object.
            </summary>
        </member>
        <member name="M:CefGlue.CefXmlReader.MoveToNextNode">
            <summary>
            Moves the cursor to the next node in the document.
            This method must be called at least once to set the current cursor position.
            Returns true if the cursor position was set successfully.
            </summary>
        </member>
        <member name="M:CefGlue.CefXmlReader.Close">
            <summary>
            Close the document.
            This should be called directly to ensure that cleanup occurs on the correct thread.
            </summary>
        </member>
        <member name="M:CefGlue.CefXmlReader.HasError">
            <summary>
            Returns true if an error has been reported by the XML parser.
            </summary>
        </member>
        <member name="M:CefGlue.CefXmlReader.GetError">
            <summary>
            Returns the error string.
            </summary>
        </member>
        <member name="M:CefGlue.CefXmlReader.GetDepth">
            <summary>
            Returns the node depth. Depth starts at 0 for the root node.
            </summary>
        </member>
        <member name="M:CefGlue.CefXmlReader.GetLocalName">
            <summary>
            Returns the local name.
            See http://www.w3.org/TR/REC-xml-names/#NT-LocalPart for additional details.
            </summary>
        </member>
        <member name="M:CefGlue.CefXmlReader.GetPrefix">
            <summary>
            Returns the namespace prefix.
            See http://www.w3.org/TR/REC-xml-names/ for additional details.
            </summary>
        </member>
        <member name="M:CefGlue.CefXmlReader.GetQualifiedName">
            <summary>
            Returns the qualified name, equal to (Prefix:)LocalName.
            See http://www.w3.org/TR/REC-xml-names/#ns-qualnames for additional details.
            </summary>
        </member>
        <member name="M:CefGlue.CefXmlReader.GetNamespaceURI">
            <summary>
            Returns the URI defining the namespace associated with the node.
            See http://www.w3.org/TR/REC-xml-names/ for additional details.
            </summary>
        </member>
        <member name="M:CefGlue.CefXmlReader.GetBaseURI">
            <summary>
            Returns the base URI of the node.
            See http://www.w3.org/TR/xmlbase/ for additional details.
            </summary>
        </member>
        <member name="M:CefGlue.CefXmlReader.GetXmlLang">
            <summary>
            Returns the xml:lang scope within which the node resides.
            See http://www.w3.org/TR/REC-xml/#sec-lang-tag for additional details.
            </summary>
        </member>
        <member name="M:CefGlue.CefXmlReader.IsEmptyElement">
            <summary>
            Returns true if the node represents an empty element.
            &lt;a/&gt; is considered empty but &lt;a&gt;&lt;/a&gt; is not.
            </summary>
        </member>
        <member name="M:CefGlue.CefXmlReader.HasValue">
            <summary>
            Returns true if the node has a text value.
            </summary>
        </member>
        <member name="M:CefGlue.CefXmlReader.GetValue">
            <summary>
            Returns the text value.
            </summary>
        </member>
        <member name="M:CefGlue.CefXmlReader.HasAttributes">
            <summary>
            Returns true if the node has attributes.
            </summary>
        </member>
        <member name="M:CefGlue.CefXmlReader.GetAttributeCount">
            <summary>
            Returns the number of attributes.
            </summary>
        </member>
        <member name="M:CefGlue.CefXmlReader.GetAttribute(System.Int32)">
            <summary>
            Returns the value of the attribute at the specified 0-based index.
            </summary>
        </member>
        <member name="M:CefGlue.CefXmlReader.GetAttribute(System.String)">
            <summary>
            Returns the value of the attribute with the specified qualified name.
            </summary>
        </member>
        <member name="M:CefGlue.CefXmlReader.GetAttribute(System.String,System.String)">
            <summary>
            Returns the value of the attribute with the specified local name and namespace URI.
            </summary>
        </member>
        <member name="M:CefGlue.CefXmlReader.GetInnerXml">
            <summary>
            Returns an XML representation of the current node's children.
            </summary>
        </member>
        <member name="M:CefGlue.CefXmlReader.GetOuterXml">
            <summary>
            Returns an XML representation of the current node including its children.
            </summary>
        </member>
        <member name="M:CefGlue.CefXmlReader.GetLineNumber">
            <summary>
            Returns the line number for the current node.
            </summary>
        </member>
        <member name="M:CefGlue.CefXmlReader.MoveToAttribute(System.Int32)">
            <summary>
            Moves the cursor to the attribute at the specified 0-based index.
            Returns true if the cursor position was set successfully.
            </summary>
        </member>
        <member name="M:CefGlue.CefXmlReader.MoveToAttribute(System.String)">
            <summary>
            Moves the cursor to the attribute with the specified qualified name.
            Returns true if the cursor position was set successfully.
            </summary>
        </member>
        <member name="M:CefGlue.CefXmlReader.MoveToAttribute(System.String,System.String)">
            <summary>
            Moves the cursor to the attribute with the specified local name and namespace URI.
            Returns true if the cursor position was set successfully.
            </summary>
        </member>
        <member name="M:CefGlue.CefXmlReader.MoveToFirstAttribute">
            <summary>
            Moves the cursor to the first attribute in the current element.
            Returns true if the cursor position was set successfully.
            </summary>
        </member>
        <member name="M:CefGlue.CefXmlReader.MoveToNextAttribute">
            <summary>
            Moves the cursor to the next attribute in the current element.
            Returns true if the cursor position was set successfully.
            </summary>
        </member>
        <member name="M:CefGlue.CefXmlReader.MoveToCarryingElement">
            <summary>
            Moves the cursor back to the carrying element.
            Returns true if the cursor position was set successfully.
            </summary>
        </member>
        <member name="M:CefGlue.CefXmlReader.From(CefGlue.Interop.cef_xml_reader_t*)">
            <summary>
            Create CefXmlReader proxy from pointer.
            </summary>
        </member>
        <member name="M:CefGlue.CefXmlReader.AddRef">
            <summary>
            The AddRef method increments the reference count for the object. It should
            be called for every new copy of a pointer to a given object. The resulting
            reference count value is returned and should be used for diagnostic/testing
            purposes only.
            </summary>
        </member>
        <member name="M:CefGlue.CefXmlReader.ReleaseRef">
            <summary>
            The Release method decrements the reference count for the object. If the
            reference count on the object falls to 0, then the object should free
            itself from memory.  The resulting reference count value is returned and
            should be used for diagnostic/testing purposes only.
            </summary>
        </member>
        <member name="P:CefGlue.CefXmlReader.Type">
            <summary>
            Returns the node type.
            </summary>
        </member>
        <member name="P:CefGlue.CefXmlReader.RefCount">
            <summary>
            Return the current number of references.
            </summary>
        </member>
        <member name="M:CefGlue.CefZipReader.Create(CefGlue.CefStreamReader)">
            <summary>
            Create a new CefZipReader object.
            The returned object's methods can only be called from the thread that created the object.
            </summary>
        </member>
        <member name="M:CefGlue.CefZipReader.MoveToFirstFile">
            <summary>
            Moves the cursor to the first file in the archive.
            Returns true if the cursor position was set successfully.
            </summary>
        </member>
        <member name="M:CefGlue.CefZipReader.MoveToNextFile">
            <summary>
            Moves the cursor to the next file in the archive.
            Returns true if the cursor position was set successfully.
            </summary>
        </member>
        <member name="M:CefGlue.CefZipReader.MoveToFile(System.String,System.Boolean)">
            <summary>
            Moves the cursor to the specified file in the archive.
            If |caseSensitive| is true then the search will be case sensitive.
            Returns true if the cursor position was set successfully.
            </summary>
        </member>
        <member name="M:CefGlue.CefZipReader.Close">
            <summary>
            Closes the archive.
            This should be called directly to ensure that cleanup occurs on the correct thread.
            </summary>
        </member>
        <member name="M:CefGlue.CefZipReader.GetFileName">
            <summary>
            Returns the name of the file.
            </summary>
        </member>
        <member name="M:CefGlue.CefZipReader.GetFileSize">
            <summary>
            Returns the uncompressed size of the file.
            </summary>
        </member>
        <member name="M:CefGlue.CefZipReader.GetFileLastModified">
            <summary>
            Returns the last modified timestamp for the file.
            </summary>
        </member>
        <member name="M:CefGlue.CefZipReader.OpenFile(System.String)">
            <summary>
            Opens the file for reading of uncompressed data.
            A read password may optionally be specified.
            </summary>
        </member>
        <member name="M:CefGlue.CefZipReader.CloseFile">
            <summary>
            Closes the file.
            </summary>
        </member>
        <member name="M:CefGlue.CefZipReader.ReadFile(System.Void*,System.Int32)">
            <summary>
            Read uncompressed file contents into the specified buffer.
            Returns &amp; 0 if an error occurred, 0 if at the end of file, or the number of bytes read.
            </summary>
        </member>
        <member name="M:CefGlue.CefZipReader.Tell">
            <summary>
            Returns the current offset in the uncompressed file contents.
            </summary>
        </member>
        <member name="M:CefGlue.CefZipReader.Eof">
            <summary>
            Returns true if at end of the file contents.
            </summary>
        </member>
        <member name="M:CefGlue.CefZipReader.From(CefGlue.Interop.cef_zip_reader_t*)">
            <summary>
            Create CefZipReader proxy from pointer.
            </summary>
        </member>
        <member name="M:CefGlue.CefZipReader.AddRef">
            <summary>
            The AddRef method increments the reference count for the object. It should
            be called for every new copy of a pointer to a given object. The resulting
            reference count value is returned and should be used for diagnostic/testing
            purposes only.
            </summary>
        </member>
        <member name="M:CefGlue.CefZipReader.ReleaseRef">
            <summary>
            The Release method decrements the reference count for the object. If the
            reference count on the object falls to 0, then the object should free
            itself from memory.  The resulting reference count value is returned and
            should be used for diagnostic/testing purposes only.
            </summary>
        </member>
        <member name="P:CefGlue.CefZipReader.RefCount">
            <summary>
            Return the current number of references.
            </summary>
        </member>
        <member name="M:CefGlue.CefApp.From(CefGlue.Interop.cef_app_t*)">
            <summary>
            Create CefApp proxy from pointer.
            </summary>
        </member>
        <member name="M:CefGlue.CefApp.AddRef">
            <summary>
            The AddRef method increments the reference count for the object. It should
            be called for every new copy of a pointer to a given object. The resulting
            reference count value is returned and should be used for diagnostic/testing
            purposes only.
            </summary>
        </member>
        <member name="M:CefGlue.CefApp.ReleaseRef">
            <summary>
            The Release method decrements the reference count for the object. If the
            reference count on the object falls to 0, then the object should free
            itself from memory.  The resulting reference count value is returned and
            should be used for diagnostic/testing purposes only.
            </summary>
        </member>
        <member name="P:CefGlue.CefApp.RefCount">
            <summary>
            Return the current number of references.
            </summary>
        </member>
        <member name="M:CefGlue.CefCommandLine.From(CefGlue.Interop.cef_command_line_t*)">
            <summary>
            Create CefCommandLine proxy from pointer.
            </summary>
        </member>
        <member name="M:CefGlue.CefCommandLine.AddRef">
            <summary>
            The AddRef method increments the reference count for the object. It should
            be called for every new copy of a pointer to a given object. The resulting
            reference count value is returned and should be used for diagnostic/testing
            purposes only.
            </summary>
        </member>
        <member name="M:CefGlue.CefCommandLine.ReleaseRef">
            <summary>
            The Release method decrements the reference count for the object. If the
            reference count on the object falls to 0, then the object should free
            itself from memory.  The resulting reference count value is returned and
            should be used for diagnostic/testing purposes only.
            </summary>
        </member>
        <member name="P:CefGlue.CefCommandLine.RefCount">
            <summary>
            Return the current number of references.
            </summary>
        </member>
        <member name="M:CefGlue.CefV8StackTrace.From(CefGlue.Interop.cef_v8stack_trace_t*)">
            <summary>
            Create CefV8StackTrace proxy from pointer.
            </summary>
        </member>
        <member name="M:CefGlue.CefV8StackTrace.AddRef">
            <summary>
            The AddRef method increments the reference count for the object. It should
            be called for every new copy of a pointer to a given object. The resulting
            reference count value is returned and should be used for diagnostic/testing
            purposes only.
            </summary>
        </member>
        <member name="M:CefGlue.CefV8StackTrace.ReleaseRef">
            <summary>
            The Release method decrements the reference count for the object. If the
            reference count on the object falls to 0, then the object should free
            itself from memory.  The resulting reference count value is returned and
            should be used for diagnostic/testing purposes only.
            </summary>
        </member>
        <member name="P:CefGlue.CefV8StackTrace.RefCount">
            <summary>
            Return the current number of references.
            </summary>
        </member>
        <member name="M:CefGlue.CefV8StackFrame.From(CefGlue.Interop.cef_v8stack_frame_t*)">
            <summary>
            Create CefV8StackFrame proxy from pointer.
            </summary>
        </member>
        <member name="M:CefGlue.CefV8StackFrame.AddRef">
            <summary>
            The AddRef method increments the reference count for the object. It should
            be called for every new copy of a pointer to a given object. The resulting
            reference count value is returned and should be used for diagnostic/testing
            purposes only.
            </summary>
        </member>
        <member name="M:CefGlue.CefV8StackFrame.ReleaseRef">
            <summary>
            The Release method decrements the reference count for the object. If the
            reference count on the object falls to 0, then the object should free
            itself from memory.  The resulting reference count value is returned and
            should be used for diagnostic/testing purposes only.
            </summary>
        </member>
        <member name="P:CefGlue.CefV8StackFrame.RefCount">
            <summary>
            Return the current number of references.
            </summary>
        </member>
        <member name="P:CefGlue.CefBrowserSettings.DragDropDisabled">
            <summary>
            Disable drag &amp; drop of URLs from other windows.
            </summary>
        </member>
        <member name="P:CefGlue.CefBrowserSettings.LoadDropsDisabled">
            <summary>
            Disable default navigation resulting from drag &amp; drop of URLs.
            </summary>
        </member>
        <member name="P:CefGlue.CefBrowserSettings.RemoteFontsDisabled">
            <summary>
            Set to true to disable loading of fonts from remote sources.
            </summary>
        </member>
        <member name="P:CefGlue.CefBrowserSettings.DefaultEncoding">
            <summary>
            Default encoding for Web content. If empty "ISO-8859-1" will be used.
            </summary>
        </member>
        <member name="P:CefGlue.CefBrowserSettings.EncodingDetectorEnabled">
            <summary>
            Set to true to attempt automatic detection of content encoding.
            </summary>
        </member>
        <member name="P:CefGlue.CefBrowserSettings.JavaScriptDisabled">
            <summary>
            Set to true to disable JavaScript.
            </summary>
        </member>
        <member name="P:CefGlue.CefBrowserSettings.JavaScriptOpenWindowsDisallowed">
            <summary>
            Set to true to disallow JavaScript from opening windows.
            </summary>
        </member>
        <member name="P:CefGlue.CefBrowserSettings.JavaScriptCloseWindowsDisallowed">
            <summary>
            Set to true to disallow JavaScript from closing windows.
            </summary>
        </member>
        <member name="P:CefGlue.CefBrowserSettings.JavaScriptAccessClipboardDisallowed">
            <summary>
            Set to true to disallow JavaScript from accessing the clipboard.
            </summary>
        </member>
        <member name="P:CefGlue.CefBrowserSettings.DomPasteDisabled">
            <summary>
            Set to true to disable DOM pasting in the editor. DOM pasting also
            depends on |javascript_cannot_access_clipboard| being false (0).
            </summary>
        </member>
        <member name="P:CefGlue.CefBrowserSettings.CaretBrowsingEnabled">
            <summary>
            Set to true to enable drawing of the caret position.
            </summary>
        </member>
        <member name="P:CefGlue.CefBrowserSettings.JavaDisabled">
            <summary>
            Set to true to disable Java.
            </summary>
        </member>
        <member name="P:CefGlue.CefBrowserSettings.PluginsDisabled">
            <summary>
            Set to true to disable plugins.
            </summary>
        </member>
        <member name="P:CefGlue.CefBrowserSettings.UniversalAccessFromFileUrlsAllowed">
            <summary>
            Set to true to allow access to all URLs from file URLs.
            </summary>
        </member>
        <member name="P:CefGlue.CefBrowserSettings.FileAccessFromFileUrlsAllowed">
            <summary>
            Set to true to allow access to file URLs from other file URLs.
            </summary>
        </member>
        <member name="P:CefGlue.CefBrowserSettings.WebSecurityDisabled">
            <summary>
            Set to true to allow risky security behavior such as cross-site scripting (XSS).
            Use with extreme care.
            </summary>
        </member>
        <member name="P:CefGlue.CefBrowserSettings.XssAuditorEnabled">
            <summary>
            Set to true to enable console warnings about XSS attempts.
            </summary>
        </member>
        <member name="P:CefGlue.CefBrowserSettings.ImageLoadDisabled">
            <summary>
            Set to true to suppress the network load of image URLs.
            A cached image will still be rendered if requested.
            </summary>
        </member>
        <member name="P:CefGlue.CefBrowserSettings.ShrinkStandaloneImagesToFit">
            <summary>
            Set to true to shrink standalone images to fit the page.
            </summary>
        </member>
        <member name="P:CefGlue.CefBrowserSettings.SiteSpecificQuirksDisabled">
            <summary>
            Set to true to disable browser backwards compatibility features.
            </summary>
        </member>
        <member name="P:CefGlue.CefBrowserSettings.TextAreaResizeDisabled">
            <summary>
            Set to true to disable resize of text areas.
            </summary>
        </member>
        <member name="P:CefGlue.CefBrowserSettings.PageCacheDisabled">
            <summary>
            Set to true to disable use of the page cache.
            </summary>
        </member>
        <member name="P:CefGlue.CefBrowserSettings.TabToLinksDisabled">
            <summary>
            Set to true to not have the tab key advance focus to links.
            </summary>
        </member>
        <member name="P:CefGlue.CefBrowserSettings.HyperlinkAuditingDisabled">
            <summary>
            Set to true to disable hyperlink pings (&lt;a ping&gt; and window.sendPing).
            </summary>
        </member>
        <member name="P:CefGlue.CefBrowserSettings.UserStyleSheetEnabled">
            <summary>
            Location of the user style sheet. This must be a data URL of the form
            "data:text/css;charset=utf-8;base64,csscontent" where "csscontent" is the
            base64 encoded contents of the CSS file.
            </summary>
        </member>
        <member name="P:CefGlue.CefBrowserSettings.AuthorAndUserStylesDisabled">
            <summary>
            Set to true to disable style sheets.
            </summary>
        </member>
        <member name="P:CefGlue.CefBrowserSettings.LocalStorageDisabled">
            <summary>
            Set to true to disable local storage.
            </summary>
        </member>
        <member name="P:CefGlue.CefBrowserSettings.DatabasesDisabled">
            <summary>
            Set to true to disable databases.
            </summary>
        </member>
        <member name="P:CefGlue.CefBrowserSettings.ApplicationCacheDisabled">
            <summary>
            Set to true to disable application cache.
            </summary>
        </member>
        <member name="P:CefGlue.CefBrowserSettings.WebGLDisabled">
            <summary>
            Set to true to disable WebGL.
            </summary>
        </member>
        <member name="P:CefGlue.CefBrowserSettings.AcceleratedCompositingEnabled">
            <summary>
            Set to true to enable accelerated compositing.
            </summary>
        </member>
        <member name="P:CefGlue.CefBrowserSettings.AcceleratedLayersDisabled">
            <summary>
            Set to true to disable accelerated layers.
            This affects features like 3D CSS transforms.
            </summary>
        </member>
        <member name="P:CefGlue.CefBrowserSettings.AcceleratedVideoDisabled">
            <summary>
            Set to true to disable accelerated video.
            </summary>
        </member>
        <member name="P:CefGlue.CefBrowserSettings.Accelerated2DCanvasDisabled">
            <summary>
            Set to true to disable accelerated 2d canvas.
            </summary>
        </member>
        <member name="P:CefGlue.CefBrowserSettings.AcceleratedPluginsDisabled">
            <summary>
            Set to true to disable accelerated plugins.
            </summary>
        </member>
        <member name="P:CefGlue.CefBrowserSettings.DeveloperToolsDisabled">
            <summary>
            Set to true to disable developer tools (WebKit inspector).
            </summary>
        </member>
        <member name="F:CefGlue.CefLogSeverity.Disable">
            <summary>
            Disables logging completely.
            </summary>
        </member>
        <member name="T:CefGlue.CefSettings">
            <summary>
            Initialization settings.
            Specify <c>null</c> or <c>0</c> to get the recommended default values.
            </summary>
        </member>
        <member name="P:CefGlue.CefSettings.MultiThreadedMessageLoop">
            <summary>
            Set to true to have the message loop run in a separate thread.
            If false than the Cef.DoMessageLoopWork() function must be called from your application message loop.
            </summary>
        </member>
        <member name="P:CefGlue.CefSettings.CachePath">
            <summary>
            The location where cache data will be stored on disk.
            If empty an in-memory cache will be used.
            HTML5 databases such as localStorage will only persist across sessions if a cache path is specified.
            </summary>
        </member>
        <member name="P:CefGlue.CefSettings.UserAgent">
            <summary>
            Value that will be returned as the User-Agent HTTP header.
            If empty the default User-Agent string will be used.
            </summary>
        </member>
        <member name="P:CefGlue.CefSettings.ProductVersion">
            <summary>
            Value that will be inserted as the product portion of the default
            User-Agent string. If empty the Chromium product version will be used. If
            |userAgent| is specified this value will be ignored.
            </summary>
        </member>
        <member name="P:CefGlue.CefSettings.Locale">
            <summary>
            The locale string that will be passed to WebKit. If empty the default
            locale of "en-US" will be used.
            </summary>
        </member>
        <member name="P:CefGlue.CefSettings.ExtraPluginPaths">
            <summary>
            List of fully qualified paths to plugins (including plugin name) that will
            be loaded in addition to any plugins found in the default search paths.
            </summary>
        </member>
        <member name="P:CefGlue.CefSettings.LogFile">
            <summary>
            The directory and file name to use for the debug log.
            If empty, the default name of "debug.log" will be used 
            and the file will be written to the application directory.
            </summary>
        </member>
        <member name="P:CefGlue.CefSettings.LogSeverity">
            <summary>
            The log severity. Only messages of this severity level or higher will be logged.
            </summary>
        </member>
        <member name="P:CefGlue.CefSettings.GraphicsImplementation">
            <summary>
            The graphics implementation that CEF will use for rendering GPU accelerated
            content like WebGL, accelerated layers and 3D CSS.
            </summary>
        </member>
        <member name="P:CefGlue.CefSettings.LocalStorageQuota">
            <summary>
            Quota limit for localStorage data across all origins. Default size is 5MB.
            </summary>
        </member>
        <member name="P:CefGlue.CefSettings.SessionStorageQuota">
            <summary>
            Quota limit for sessionStorage data per namespace. Default size is 5MB.
            </summary>
        </member>
        <member name="P:CefGlue.CefSettings.JavaScriptFlags">
            <summary>
            Custom flags that will be used when initializing the V8 JavaScript engine.
            The consequences of using custom flags may not be well tested.
            </summary>
        </member>
        <member name="P:CefGlue.CefSettings.AutoDetectProxySettingsEnabled">
            <summary>
            Set to true to use the system proxy resolver on Windows when "Automatically detect settings" is checked.
            This setting is disabled by default for performance reasons.
            </summary>
        </member>
        <member name="P:CefGlue.CefSettings.ResourcesDirPath">
            <summary>
            The fully qualified path for the resources directory. If this value is
            empty the chrome.pak and/or devtools_resources.pak files must be located in
            the module directory on Windows/Linux or the app bundle Resources directory
            on Mac OS X.
            </summary>
        </member>
        <member name="P:CefGlue.CefSettings.LocalesDirPath">
            <summary>
            The fully qualified path for the locales directory. If this value is empty
            the locales directory must be located in the module directory. This value
            is ignored on Mac OS X where pack files are always loaded from the app
            bundle resource directory.
            </summary>
        </member>
        <member name="P:CefGlue.CefSettings.PackLoadingDisabled">
            <summary>
            Set to true to disable loading of pack files for resources and locales.
            A resource bundle handler must be provided for the browser and renderer
            processes via CefApp::GetResourceBundleHandler() if loading of pack files
            is disabled.
            </summary>
        </member>
        <member name="T:CefGlue.CefHandlerStatusType">
            <summary>
            Status message types.
            </summary>
        </member>
        <member name="P:CefGlue.CefWindowInfo.ExStyle">
            <summary>
            Standard parameter required by CreateWindowEx().
            </summary>
        </member>
        <member name="P:CefGlue.CefWindowInfo.WindowName">
            <summary>
            Standard parameter required by CreateWindowEx().
            </summary>
        </member>
        <member name="P:CefGlue.CefWindowInfo.Style">
            <summary>
            Standard parameter required by CreateWindowEx().
            </summary>
        </member>
        <member name="P:CefGlue.CefWindowInfo.X">
            <summary>
            Standard parameter required by CreateWindowEx().
            </summary>
        </member>
        <member name="P:CefGlue.CefWindowInfo.Y">
            <summary>
            Standard parameter required by CreateWindowEx().
            </summary>
        </member>
        <member name="P:CefGlue.CefWindowInfo.Width">
            <summary>
            Standard parameter required by CreateWindowEx().
            </summary>
        </member>
        <member name="P:CefGlue.CefWindowInfo.Height">
            <summary>
            Standard parameter required by CreateWindowEx().
            </summary>
        </member>
        <member name="P:CefGlue.CefWindowInfo.ParentWindowHandle">
            <summary>
            Standard parameter required by CreateWindowEx().
            </summary>
        </member>
        <member name="P:CefGlue.CefWindowInfo.MenuHandle">
            <summary>
            Standard parameter required by CreateWindowEx().
            </summary>
        </member>
        <member name="P:CefGlue.CefWindowInfo.WindowRenderingDisabled">
            <summary>
            If window rendering is disabled no browser window will be created.
            Set |m_hWndParent| to the window that will act as the parent for popup menus, dialog boxes, etc.
            </summary>
        </member>
        <member name="P:CefGlue.CefWindowInfo.TransparentPainting">
            <summary>
            Set to true to enable transparent painting.
            </summary>
        </member>
        <member name="P:CefGlue.CefWindowInfo.WindowHandle">
            <summary>
            Handle for the new browser window.
            </summary>
        </member>
        <member name="T:CefGlue.CefCookie">
            <summary>
            Cookie information.
            </summary>
        </member>
        <member name="P:CefGlue.CefCookie.Name">
            <summary>
            The cookie name.
            </summary>
        </member>
        <member name="P:CefGlue.CefCookie.Value">
            <summary>
            The cookie value.
            </summary>
        </member>
        <member name="P:CefGlue.CefCookie.Domain">
            <summary>
            If |domain| is empty a host cookie will be created instead of a domain cookie.
            Domain cookies are stored with a leading "." and are visible to sub-domains whereas host cookies are not.
            </summary>
        </member>
        <member name="P:CefGlue.CefCookie.Path">
            <summary>
            If |path| is non-empty only URLs at or below the path will get the cookie value.
            </summary>
        </member>
        <member name="P:CefGlue.CefCookie.Secure">
            <summary>
            If |secure| is true the cookie will only be sent for HTTPS requests.
            </summary>
        </member>
        <member name="P:CefGlue.CefCookie.HttpOnly">
            <summary>
            If |httponly| is true the cookie will only be sent for HTTP requests.
            </summary>
        </member>
        <member name="P:CefGlue.CefCookie.Creation">
            <summary>
            The cookie creation date.
            This is automatically populated by the system on cookie creation.
            </summary>
        </member>
        <member name="P:CefGlue.CefCookie.LastAccess">
            <summary>
            The cookie last access date.
            This is automatically populated by the system on access.
            </summary>
        </member>
        <member name="P:CefGlue.CefCookie.HasExpires">
            <summary>
            The cookie expiration date is only valid if |has_expires| is true.
            </summary>
        </member>
        <member name="P:CefGlue.CefCookie.Expires">
            <summary>
            The cookie expiration date is only valid if |has_expires| is true.
            </summary>
        </member>
        <member name="T:CefGlue.CefPaperMetrics">
            <summary>
            Paper metric information for printing.
            </summary>
        </member>
        <member name="P:CefGlue.CefPaperMetrics.Length">
            <summary>
            Length needed if Type is Custom. Units are in inches.
            </summary>
        </member>
        <member name="P:CefGlue.CefPaperMetrics.Width">
            <summary>
            Width needed if Type is Custom. Units are in inches.
            </summary>
        </member>
        <member name="T:CefGlue.CefPrintInfo">
            <summary>
            Class representing print context information.
            </summary>
        </member>
        <member name="T:CefGlue.CefPrintMargins">
            <summary>
            Paper print margins.
            </summary>
        </member>
        <member name="P:CefGlue.CefPrintMargins.Left">
            <summary>
            Content left margin size in inches.
            </summary>
        </member>
        <member name="P:CefGlue.CefPrintMargins.Right">
            <summary>
            Content right margin size in inches.
            </summary>
        </member>
        <member name="P:CefGlue.CefPrintMargins.Top">
            <summary>
            Content top margin size in inches.
            </summary>
        </member>
        <member name="P:CefGlue.CefPrintMargins.Bottom">
            <summary>
            Content bottom margin size in inches.
            </summary>
        </member>
        <member name="P:CefGlue.CefPrintMargins.Header">
            <summary>
            Margin size (top) in inches for header.
            </summary>
        </member>
        <member name="P:CefGlue.CefPrintMargins.Footer">
            <summary>
            Margin size (bottom) in inches for footer.
            </summary>
        </member>
        <member name="T:CefGlue.CefPrintOptions">
            <summary>
            Printing options.
            </summary>
        </member>
        <member name="T:CefGlue.CefUrlParts">
            <summary>
            URL component parts.
            </summary>
        </member>
        <member name="P:CefGlue.CefUrlParts.Spec">
            <summary>
            The complete URL specification.
            </summary>
        </member>
        <member name="P:CefGlue.CefUrlParts.Scheme">
            <summary>
            Scheme component not including the colon (e.g., "http").
            </summary>
        </member>
        <member name="P:CefGlue.CefUrlParts.UserName">
            <summary>
            User name component.
            </summary>
        </member>
        <member name="P:CefGlue.CefUrlParts.Password">
            <summary>
            Password component.
            </summary>
        </member>
        <member name="P:CefGlue.CefUrlParts.Host">
            <summary>
            Host component.
            This may be a hostname, an IPv4 address or an IPv6 literal surrounded by square brackets (e.g., "[2001:db8::1]").
            </summary>
        </member>
        <member name="P:CefGlue.CefUrlParts.Port">
            <summary>
            Port number component.
            </summary>
        </member>
        <member name="P:CefGlue.CefUrlParts.Path">
            <summary>
            Path component including the first slash following the host.
            </summary>
        </member>
        <member name="P:CefGlue.CefUrlParts.Query">
            <summary>
            Query string component (i.e., everything following the '?').
            </summary>
        </member>
        <member name="T:CefGlue.Interop.cef_storage_type_t">
            <summary>
            Storage types.
            </summary>
        </member>
        <member name="T:CefGlue.Interop.cef_handler_focus_source_t">
            <summary>
            Focus sources.
            </summary>
        </member>
        <member name="F:CefGlue.Interop.cef_handler_focus_source_t.FOCUS_SOURCE_NAVIGATION">
            <summary>
            The source is explicit navigation via the API (LoadURL(), etc).
            </summary>
        </member>
        <member name="F:CefGlue.Interop.cef_handler_focus_source_t.FOCUS_SOURCE_SYSTEM">
            <summary>
            The source is a system-generated focus event.
            </summary>
        </member>
        <member name="F:CefGlue.Interop.cef_handler_focus_source_t.FOCUS_SOURCE_WIDGET">
            <summary>
            The source is a child widget of the browser window requesting focus.
            </summary>
        </member>
        <member name="T:CefGlue.Interop.cef_settings_t">
            
        </member>
        <member name="F:CefGlue.Interop.cef_settings_t.size">
            
        </member>
        <member name="F:CefGlue.Interop.cef_settings_t.multi_threaded_message_loop">
            
        </member>
        <member name="F:CefGlue.Interop.cef_settings_t.cache_path">
            
        </member>
        <member name="F:CefGlue.Interop.cef_settings_t.user_agent">
            
        </member>
        <member name="F:CefGlue.Interop.cef_settings_t.product_version">
            
        </member>
        <member name="F:CefGlue.Interop.cef_settings_t.locale">
            
        </member>
        <member name="F:CefGlue.Interop.cef_settings_t.extra_plugin_paths">
            
        </member>
        <member name="F:CefGlue.Interop.cef_settings_t.log_file">
            
        </member>
        <member name="F:CefGlue.Interop.cef_settings_t.log_severity">
            
        </member>
        <member name="F:CefGlue.Interop.cef_settings_t.graphics_implementation">
            
        </member>
        <member name="F:CefGlue.Interop.cef_settings_t.local_storage_quota">
            
        </member>
        <member name="F:CefGlue.Interop.cef_settings_t.session_storage_quota">
            
        </member>
        <member name="F:CefGlue.Interop.cef_settings_t.javascript_flags">
            
        </member>
        <member name="F:CefGlue.Interop.cef_settings_t.auto_detect_proxy_settings_enabled">
            
        </member>
        <member name="F:CefGlue.Interop.cef_settings_t.resources_dir_path">
            
        </member>
        <member name="F:CefGlue.Interop.cef_settings_t.locales_dir_path">
            
        </member>
        <member name="F:CefGlue.Interop.cef_settings_t.pack_loading_disabled">
            
        </member>
        <member name="T:CefGlue.Interop.cef_window_info_t">
            <summary>
            Class representing window information.
            </summary>
        </member>
        <member name="T:CefGlue.Interop.cef_browser_settings_t">
            
        </member>
        <member name="F:CefGlue.Interop.cef_browser_settings_t.size">
            <summary>
            Size of this structure.
            </summary>
        </member>
        <member name="F:CefGlue.Interop.cef_browser_settings_t.drag_drop_disabled">
            
        </member>
        <member name="F:CefGlue.Interop.cef_browser_settings_t.load_drops_disabled">
            
        </member>
        <member name="F:CefGlue.Interop.cef_browser_settings_t.history_disabled">
            
        </member>
        <member name="F:CefGlue.Interop.cef_browser_settings_t.animation_frame_rate">
            
        </member>
        <member name="F:CefGlue.Interop.cef_browser_settings_t.standard_font_family">
            
        </member>
        <member name="F:CefGlue.Interop.cef_browser_settings_t.remote_fonts_disabled">
            
        </member>
        <member name="F:CefGlue.Interop.cef_browser_settings_t.default_encoding">
            
        </member>
        <member name="F:CefGlue.Interop.cef_browser_settings_t.encoding_detector_enabled">
            
        </member>
        <member name="F:CefGlue.Interop.cef_browser_settings_t.javascript_disabled">
            
        </member>
        <member name="F:CefGlue.Interop.cef_browser_settings_t.javascript_open_windows_disallowed">
            
        </member>
        <member name="F:CefGlue.Interop.cef_browser_settings_t.javascript_close_windows_disallowed">
            
        </member>
        <member name="F:CefGlue.Interop.cef_browser_settings_t.javascript_access_clipboard_disallowed">
            
        </member>
        <member name="F:CefGlue.Interop.cef_browser_settings_t.dom_paste_disabled">
            
        </member>
        <member name="F:CefGlue.Interop.cef_browser_settings_t.caret_browsing_enabled">
            
        </member>
        <member name="F:CefGlue.Interop.cef_browser_settings_t.java_disabled">
            
        </member>
        <member name="F:CefGlue.Interop.cef_browser_settings_t.plugins_disabled">
            
        </member>
        <member name="F:CefGlue.Interop.cef_browser_settings_t.universal_access_from_file_urls_allowed">
            
        </member>
        <member name="F:CefGlue.Interop.cef_browser_settings_t.file_access_from_file_urls_allowed">
            
        </member>
        <member name="F:CefGlue.Interop.cef_browser_settings_t.web_security_disabled">
            
        </member>
        <member name="F:CefGlue.Interop.cef_browser_settings_t.xss_auditor_enabled">
            
        </member>
        <member name="F:CefGlue.Interop.cef_browser_settings_t.image_load_disabled">
            
        </member>
        <member name="F:CefGlue.Interop.cef_browser_settings_t.shrink_standalone_images_to_fit">
            
        </member>
        <member name="F:CefGlue.Interop.cef_browser_settings_t.site_specific_quirks_disabled">
            
        </member>
        <member name="F:CefGlue.Interop.cef_browser_settings_t.text_area_resize_disabled">
            
        </member>
        <member name="F:CefGlue.Interop.cef_browser_settings_t.page_cache_disabled">
            
        </member>
        <member name="F:CefGlue.Interop.cef_browser_settings_t.tab_to_links_disabled">
            
        </member>
        <member name="F:CefGlue.Interop.cef_browser_settings_t.hyperlink_auditing_disabled">
            
        </member>
        <member name="F:CefGlue.Interop.cef_browser_settings_t.user_style_sheet_enabled">
            
        </member>
        <member name="F:CefGlue.Interop.cef_browser_settings_t.user_style_sheet_location">
            
        </member>
        <member name="F:CefGlue.Interop.cef_browser_settings_t.author_and_user_styles_disabled">
            
        </member>
        <member name="F:CefGlue.Interop.cef_browser_settings_t.local_storage_disabled">
            
        </member>
        <member name="F:CefGlue.Interop.cef_browser_settings_t.databases_disabled">
            
        </member>
        <member name="F:CefGlue.Interop.cef_browser_settings_t.application_cache_disabled">
            
        </member>
        <member name="F:CefGlue.Interop.cef_browser_settings_t.webgl_disabled">
            
        </member>
        <member name="F:CefGlue.Interop.cef_browser_settings_t.accelerated_compositing_enabled">
            
        </member>
        <member name="F:CefGlue.Interop.cef_browser_settings_t.accelerated_layers_disabled">
            
        </member>
        <member name="F:CefGlue.Interop.cef_browser_settings_t.accelerated_video_disabled">
            
        </member>
        <member name="F:CefGlue.Interop.cef_browser_settings_t.accelerated_2d_canvas_disabled">
            
        </member>
        <member name="F:CefGlue.Interop.cef_browser_settings_t.accelerated_painting_disabled">
            
        </member>
        <member name="F:CefGlue.Interop.cef_browser_settings_t.accelerated_filters_disabled">
            
        </member>
        <member name="F:CefGlue.Interop.cef_browser_settings_t.accelerated_plugins_disabled">
            
        </member>
        <member name="F:CefGlue.Interop.cef_browser_settings_t.developer_tools_disabled">
            
        </member>
        <member name="F:CefGlue.Interop.cef_browser_settings_t.fullscreen_enabled">
            
        </member>
        <member name="T:CefGlue.Interop.cef_popup_features_t">
            <summary>
            Popup window features.
            </summary>
        </member>
        <member name="T:CefGlue.Interop.cef_cookie_t">
            <summary>
            Cookie information.
            </summary>
        </member>
        <member name="F:CefGlue.Interop.cef_cookie_t.name">
            
        </member>
        <member name="F:CefGlue.Interop.cef_cookie_t.value">
            
        </member>
        <member name="F:CefGlue.Interop.cef_cookie_t.domain">
            
        </member>
        <member name="F:CefGlue.Interop.cef_cookie_t.path">
            
        </member>
        <member name="F:CefGlue.Interop.cef_cookie_t.secure">
            
        </member>
        <member name="F:CefGlue.Interop.cef_cookie_t.httponly">
            
        </member>
        <member name="F:CefGlue.Interop.cef_cookie_t.creation">
            
        </member>
        <member name="F:CefGlue.Interop.cef_cookie_t.last_access">
            
        </member>
        <member name="F:CefGlue.Interop.cef_cookie_t.has_expires">
            
        </member>
        <member name="T:CefGlue.Interop.cef_client_t">
            <summary>
            Implement this structure to provide handler implementations.
            </summary>
        </member>
        <member name="F:CefGlue.Interop.cef_client_t.base">
            <summary>
            Base structure.
            </summary>
        </member>
        <member name="F:CefGlue.Interop.cef_client_t.get_life_span_handler">
            <summary>
            Return the handler for browser life span events.
            </summary>
        </member>
        <member name="F:CefGlue.Interop.cef_client_t.get_load_handler">
            <summary>
            Return the handler for browser load status events.
            </summary>
        </member>
        <member name="F:CefGlue.Interop.cef_client_t.get_request_handler">
            <summary>
            Return the handler for browser request events.
            </summary>
        </member>
        <member name="F:CefGlue.Interop.cef_client_t.get_display_handler">
            <summary>
            Return the handler for browser display state events.
            </summary>
        </member>
        <member name="F:CefGlue.Interop.cef_client_t.get_focus_handler">
            <summary>
            Return the handler for focus events.
            </summary>
        </member>
        <member name="F:CefGlue.Interop.cef_client_t.get_keyboard_handler">
            <summary>
            Return the handler for keyboard events.
            </summary>
        </member>
        <member name="F:CefGlue.Interop.cef_client_t.get_menu_handler">
            <summary>
            Return the handler for context menu events.
            </summary>
        </member>
        <member name="F:CefGlue.Interop.cef_client_t.get_permission_handler">
            <summary>
            Return the handler for browser permission events.
            </summary>
        </member>
        <member name="F:CefGlue.Interop.cef_client_t.get_print_handler">
            <summary>
            Return the handler for printing events.
            </summary>
        </member>
        <member name="F:CefGlue.Interop.cef_client_t.get_find_handler">
            <summary>
            Return the handler for find result events.
            </summary>
        </member>
        <member name="F:CefGlue.Interop.cef_client_t.get_jsdialog_handler">
            <summary>
            Return the handler for JavaScript dialog events.
            </summary>
        </member>
        <member name="F:CefGlue.Interop.cef_client_t.get_v8context_handler">
            <summary>
            Return the handler for V8 context events.
            </summary>
        </member>
        <member name="F:CefGlue.Interop.cef_client_t.get_render_handler">
            <summary>
            Return the handler for off-screen rendering events.
            </summary>
        </member>
        <member name="F:CefGlue.Interop.cef_client_t.get_drag_handler">
            <summary>
            Return the handler for drag events.
            </summary>
        </member>
        <member name="F:CefGlue.Interop.cef_client_t.get_geolocation_handler">
            <summary>
            Return the handler for geolocation permissions requests. If no
            handler is provided geolocation access will be denied by default.
            </summary>
        </member>
        <member name="F:CefGlue.Interop.cef_client_t.get_zoom_handler">
            <summary>
            Return the handler for zoom events. If no handler is provided the
            default zoom behavior will be used.
            </summary>
        </member>
        <member name="T:CefGlue.Interop.cef_life_span_handler_t">
            <summary>
            Implement this structure to handle events related to browser life span.
            The functions of this structure will be called on the UI thread.
            </summary>
        </member>
        <member name="F:CefGlue.Interop.cef_life_span_handler_t.base">
            <summary>
            Base structure.
            </summary>
        </member>
        <member name="F:CefGlue.Interop.cef_life_span_handler_t.on_before_popup">
            <summary>
            Called before a new popup window is created. The |parentBrowser|
            parameter will point to the parent browser window. The
            |popupFeatures| parameter will contain information about the style of
            popup window requested. Return false (0) to have the framework create
            the new popup window based on the parameters in |windowInfo|. Return
            true (1) to cancel creation of the popup window. By default, a newly
            created popup window will have the same client and settings as the
            parent window. To change the client for the new window modify the
            object that |client| points to. To change the settings for the new
            window modify the |settings| structure.
            </summary>
        </member>
        <member name="F:CefGlue.Interop.cef_life_span_handler_t.on_after_created">
            <summary>
            Called after a new window is created.
            </summary>
        </member>
        <member name="F:CefGlue.Interop.cef_life_span_handler_t.run_modal">
            <summary>
            Called when a modal window is about to display and the modal loop
            should begin running. Return false (0) to use the default modal loop
            implementation or true (1) to use a custom implementation.
            </summary>
        </member>
        <member name="F:CefGlue.Interop.cef_life_span_handler_t.do_close">
            <summary>
            Called when a window has recieved a request to close. Return false
            (0) to proceed with the window close or true (1) to cancel the window
            close. If this is a modal window and a custom modal loop
            implementation was provided in run_modal() this callback should be
            used to restore the opener window to a usable state.
            </summary>
        </member>
        <member name="F:CefGlue.Interop.cef_life_span_handler_t.on_before_close">
            <summary>
            Called just before a window is closed. If this is a modal window and
            a custom modal loop implementation was provided in run_modal() this
            callback should be used to exit the custom modal loop.
            </summary>
        </member>
        <member name="T:CefGlue.Interop.cef_load_handler_t">
            <summary>
            Implement this structure to handle events related to browser load status.
            The functions of this structure will be called on the UI thread.
            </summary>
        </member>
        <member name="F:CefGlue.Interop.cef_load_handler_t.base">
            <summary>
            Base structure.
            </summary>
        </member>
        <member name="F:CefGlue.Interop.cef_load_handler_t.on_load_start">
            <summary>
            Called when the browser begins loading a frame. The |frame| value
            will never be NULL -- call the is_main() function to check if this
            frame is the main frame. Multiple frames may be loading at the same
            time. Sub-frames may start or continue loading after the main frame
            load has ended. This function may not be called for a particular
            frame if the load request for that frame fails.
            </summary>
        </member>
        <member name="F:CefGlue.Interop.cef_load_handler_t.on_load_end">
            <summary>
            Called when the browser is done loading a frame. The |frame| value
            will never be NULL -- call the is_main() function to check if this
            frame is the main frame. Multiple frames may be loading at the same
            time. Sub-frames may start or continue loading after the main frame
            load has ended. This function will always be called for all frames
            irrespective of whether the request completes successfully.
            </summary>
        </member>
        <member name="F:CefGlue.Interop.cef_load_handler_t.on_load_error">
            <summary>
            Called when the browser fails to load a resource. |errorCode| is the
            error code number and |failedUrl| is the URL that failed to load. To
            provide custom error text assign the text to |errorText| and return
            true (1). Otherwise, return false (0) for the default error text. See
            net\base\net_error_list.h for complete descriptions of the error
            codes.
            </summary>
        </member>
        <member name="T:CefGlue.Interop.cef_request_handler_t">
            <summary>
            Implement this structure to handle events related to browser requests.
            The functions of this structure will be called on the thread indicated.
            </summary>
        </member>
        <member name="F:CefGlue.Interop.cef_request_handler_t.base">
            <summary>
            Base structure.
            </summary>
        </member>
        <member name="F:CefGlue.Interop.cef_request_handler_t.on_before_browse">
            <summary>
            Called on the UI thread before browser navigation. Return true (1) to
            cancel the navigation or false (0) to allow the navigation to
            proceed.
            </summary>
        </member>
        <member name="F:CefGlue.Interop.cef_request_handler_t.on_before_resource_load">
            <summary>
            Called on the IO thread before a resource is loaded.  To allow the
            resource to load normally return false (0). To redirect the resource
            to a new url populate the |redirectUrl| value and return false (0).
            To specify data for the resource return a CefStream object in
            |resourceStream|, use the |response| object to set mime type, HTTP
            status code and optional header values, and return false (0). To
            cancel loading of the resource return true (1). Any modifications to
            |request| will be observed.  If the URL in |request| is changed and
            |redirectUrl| is also set, the URL in |request| will be used.
            </summary>
        </member>
        <member name="F:CefGlue.Interop.cef_request_handler_t.on_resource_redirect">
            <summary>
            Called on the IO thread when a resource load is redirected. The
            |old_url| parameter will contain the old URL. The |new_url| parameter
            will contain the new URL and can be changed if desired.
            </summary>
        </member>
        <member name="F:CefGlue.Interop.cef_request_handler_t.on_resource_response">
            <summary>
            Called on the UI thread after a response to the resource request is
            received. Set |filter| if response content needs to be monitored
            and/or modified as it arrives.
            </summary>
        </member>
        <member name="F:CefGlue.Interop.cef_request_handler_t.on_protocol_execution">
            <summary>
            Called on the IO thread to handle requests for URLs with an unknown
            protocol component. Return true (1) to indicate that the request
            should succeed because it was handled externally. Set
            |allowOSExecution| to true (1) and return false (0) to attempt
            execution via the registered OS protocol handler, if any. If false
            (0) is returned and either |allow_os_execution| is false (0) or OS
            protocol handler execution fails then the request will fail with an
            error condition. SECURITY WARNING: YOU SHOULD USE THIS METHOD TO
            ENFORCE RESTRICTIONS BASED ON SCHEME, HOST OR OTHER URL ANALYSIS
            BEFORE ALLOWING OS EXECUTION.
            </summary>
        </member>
        <member name="F:CefGlue.Interop.cef_request_handler_t.get_download_handler">
            <summary>
            Called on the UI thread when a server indicates via the 'Content-
            Disposition' header that a response represents a file to download.
            |mimeType| is the mime type for the download, |fileName| is the
            suggested target file name and |contentLength| is either the value of
            the 'Content-Size' header or -1 if no size was provided. Set
            |handler| to the cef_download_handler_t instance that will recieve
            the file contents. Return true (1) to download the file or false (0)
            to cancel the file download.
            </summary>
        </member>
        <member name="F:CefGlue.Interop.cef_request_handler_t.get_auth_credentials">
            <summary>
            Called on the IO thread when the browser needs credentials from the
            user. |isProxy| indicates whether the host is a proxy server. |host|
            contains the hostname and port number. Set |username| and |password|
            and return true (1) to handle the request. Return false (0) to cancel
            the request.
            </summary>
        </member>
        <member name="F:CefGlue.Interop.cef_request_handler_t.get_cookie_manager">
            <summary>
            Called on the IO thread to retrieve the cookie manager. |main_url| is
            the URL of the top-level frame. Cookies managers can be unique per
            browser or shared across multiple browsers. The global cookie manager
            will be used if this function returns NULL.
            </summary>
        </member>
        <member name="T:CefGlue.Interop.cef_display_handler_t">
            <summary>
            Implement this structure to handle events related to browser display
            state. The functions of this structure will be called on the UI thread.
            </summary>
        </member>
        <member name="F:CefGlue.Interop.cef_display_handler_t.base">
            <summary>
            Base structure.
            </summary>
        </member>
        <member name="F:CefGlue.Interop.cef_display_handler_t.on_nav_state_change">
            <summary>
            Called when the navigation state has changed.
            </summary>
        </member>
        <member name="F:CefGlue.Interop.cef_display_handler_t.on_address_change">
            <summary>
            Called when a frame's address has changed.
            </summary>
        </member>
        <member name="F:CefGlue.Interop.cef_display_handler_t.on_contents_size_change">
            <summary>
            Called when the size of the content area has changed.
            </summary>
        </member>
        <member name="F:CefGlue.Interop.cef_display_handler_t.on_title_change">
            <summary>
            Called when the page title changes.
            </summary>
        </member>
        <member name="F:CefGlue.Interop.cef_display_handler_t.on_tooltip">
            <summary>
            Called when the browser is about to display a tooltip. |text|
            contains the text that will be displayed in the tooltip. To handle
            the display of the tooltip yourself return true (1). Otherwise, you
            can optionally modify |text| and then return false (0) to allow the
            browser to display the tooltip.
            </summary>
        </member>
        <member name="F:CefGlue.Interop.cef_display_handler_t.on_status_message">
            <summary>
            Called when the browser receives a status message. |text| contains
            the text that will be displayed in the status message and |type|
            indicates the status message type.
            </summary>
        </member>
        <member name="F:CefGlue.Interop.cef_display_handler_t.on_console_message">
            <summary>
            Called to display a console message. Return true (1) to stop the
            message from being output to the console.
            </summary>
        </member>
        <member name="T:CefGlue.Interop.cef_focus_handler_t">
            <summary>
            Implement this structure to handle events related to focus. The functions
            of this structure will be called on the UI thread.
            </summary>
        </member>
        <member name="F:CefGlue.Interop.cef_focus_handler_t.base">
            <summary>
            Base structure.
            </summary>
        </member>
        <member name="F:CefGlue.Interop.cef_focus_handler_t.on_take_focus">
            <summary>
            Called when the browser component is about to loose focus. For
            instance, if focus was on the last HTML element and the user pressed
            the TAB key. |next| will be true (1) if the browser is giving focus
            to the next component and false (0) if the browser is giving focus to
            the previous component.
            </summary>
        </member>
        <member name="F:CefGlue.Interop.cef_focus_handler_t.on_set_focus">
            <summary>
            Called when the browser component is requesting focus. |source|
            indicates where the focus request is originating from. Return false
            (0) to allow the focus to be set or true (1) to cancel setting the
            focus.
            </summary>
        </member>
        <member name="F:CefGlue.Interop.cef_focus_handler_t.on_focused_node_changed">
            <summary>
            Called when a new node in the the browser gets focus. The |node|
            value may be NULL if no specific node has gained focus. The node
            object passed to this function represents a snapshot of the DOM at
            the time this function is executed. DOM objects are only valid for
            the scope of this function. Do not keep references to or attempt to
            access any DOM objects outside the scope of this function.
            </summary>
        </member>
        <member name="T:CefGlue.Interop.cef_keyboard_handler_t">
            <summary>
            Implement this structure to handle events related to keyboard input. The
            functions of this structure will be called on the UI thread.
            </summary>
        </member>
        <member name="F:CefGlue.Interop.cef_keyboard_handler_t.base">
            <summary>
            Base structure.
            </summary>
        </member>
        <member name="F:CefGlue.Interop.cef_keyboard_handler_t.on_key_event">
            <summary>
            Called when the browser component receives a keyboard event. This
            function is called both before the event is passed to the renderer
            and after JavaScript in the page has had a chance to handle the
            event. |type| is the type of keyboard event, |code| is the windows
            scan-code for the event, |modifiers| is a set of bit- flags
            describing any pressed modifier keys and |isSystemKey| is true (1) if
            Windows considers this a 'system key' message (see
            http://msdn.microsoft.com/en-us/library/ms646286(VS.85).aspx). If
            |isAfterJavaScript| is true (1) then JavaScript in the page has had a
            chance to handle the event and has chosen not to. Only RAWKEYDOWN,
            KEYDOWN and CHAR events will be sent with |isAfterJavaScript| set to
            true (1). Return true (1) if the keyboard event was handled or false
            (0) to allow continued handling of the event by the renderer.
            </summary>
        </member>
        <member name="T:CefGlue.Interop.cef_menu_handler_t">
            <summary>
            Implement this structure to handle events related to browser context
            menus. The functions of this structure will be called on the UI thread.
            </summary>
        </member>
        <member name="F:CefGlue.Interop.cef_menu_handler_t.base">
            <summary>
            Base structure.
            </summary>
        </member>
        <member name="F:CefGlue.Interop.cef_menu_handler_t.on_before_menu">
            <summary>
            Called before a context menu is displayed. Return false (0) to
            display the default context menu or true (1) to cancel the display.
            </summary>
        </member>
        <member name="F:CefGlue.Interop.cef_menu_handler_t.get_menu_label">
            <summary>
            Called to optionally override the default text for a context menu
            item. |label| contains the default text and may be modified to
            substitute alternate text.
            </summary>
        </member>
        <member name="F:CefGlue.Interop.cef_menu_handler_t.on_menu_action">
            <summary>
            Called when an option is selected from the default context menu.
            Return false (0) to execute the default action or true (1) to cancel
            the action.
            </summary>
        </member>
        <member name="T:CefGlue.Interop.cef_permission_handler_t">
            <summary>
            Implement this structure to handle events related to browser permissions.
            The functions of this structure will be called on the UI thread.
            </summary>
        </member>
        <member name="F:CefGlue.Interop.cef_permission_handler_t.base">
            <summary>
            Base structure.
            </summary>
        </member>
        <member name="F:CefGlue.Interop.cef_permission_handler_t.on_before_script_extension_load">
            <summary>
            Called on the UI thread before a script extension is loaded. Return
            false (0) to let the extension load normally.
            </summary>
        </member>
        <member name="T:CefGlue.Interop.cef_print_handler_t">
            <summary>
            Implement this structure to handle events related to printing. The
            functions of this structure will be called on the UI thread.
            </summary>
        </member>
        <member name="F:CefGlue.Interop.cef_print_handler_t.base">
            <summary>
            Base structure.
            </summary>
        </member>
        <member name="F:CefGlue.Interop.cef_print_handler_t.get_print_options">
            <summary>
            Called to allow customization of standard print options before the
            print dialog is displayed. |printOptions| allows specification of
            paper size, orientation and margins. Note that the specified margins
            may be adjusted if they are outside the range supported by the
            printer. All units are in inches. Return false (0) to display the
            default print options or true (1) to display the modified
            |printOptions|.
            </summary>
        </member>
        <member name="F:CefGlue.Interop.cef_print_handler_t.get_print_header_footer">
            <summary>
            Called to format print headers and footers. |printInfo| contains
            platform- specific information about the printer context. |url| is
            the URL if the currently printing page, |title| is the title of the
            currently printing page, |currentPage| is the current page number and
            |maxPages| is the total number of pages. Six default header locations
            are provided by the implementation: top left, top center, top right,
            bottom left, bottom center and bottom right. To use one of these
            default locations just assign a string to the appropriate variable.
            To draw the header and footer yourself return true (1). Otherwise,
            populate the approprate variables and return false (0).
            </summary>
        </member>
        <member name="T:CefGlue.Interop.cef_find_handler_t">
            <summary>
            Implement this structure to handle events related to find results. The
            functions of this structure will be called on the UI thread.
            </summary>
        </member>
        <member name="F:CefGlue.Interop.cef_find_handler_t.base">
            <summary>
            Base structure.
            </summary>
        </member>
        <member name="F:CefGlue.Interop.cef_find_handler_t.on_find_result">
            <summary>
            Called to report find results returned by cef_browser_t::find().
            |identifer| is the identifier passed to cef_browser_t::find(),
            |count| is the number of matches currently identified,
            |selectionRect| is the location of where the match was found (in
            window coordinates), |activeMatchOrdinal| is the current position in
            the search results, and |finalUpdate| is true (1) if this is the last
            find notification.
            </summary>
        </member>
        <member name="T:CefGlue.Interop.cef_jsdialog_handler_t">
            <summary>
            Implement this structure to handle events related to JavaScript dialogs.
            The functions of this structure will be called on the UI thread.
            </summary>
        </member>
        <member name="F:CefGlue.Interop.cef_jsdialog_handler_t.base">
            <summary>
            Base structure.
            </summary>
        </member>
        <member name="F:CefGlue.Interop.cef_jsdialog_handler_t.on_jsalert">
            <summary>
            Called  to run a JavaScript alert message. Return false (0) to
            display the default alert or true (1) if you displayed a custom
            alert.
            </summary>
        </member>
        <member name="F:CefGlue.Interop.cef_jsdialog_handler_t.on_jsconfirm">
            <summary>
            Called to run a JavaScript confirm request. Return false (0) to
            display the default alert or true (1) if you displayed a custom
            alert. If you handled the alert set |retval| to true (1) if the user
            accepted the confirmation.
            </summary>
        </member>
        <member name="F:CefGlue.Interop.cef_jsdialog_handler_t.on_jsprompt">
            <summary>
            Called to run a JavaScript prompt request. Return false (0) to
            display the default prompt or true (1) if you displayed a custom
            prompt. If you handled the prompt set |retval| to true (1) if the
            user accepted the prompt and request and |result| to the resulting
            value.
            </summary>
        </member>
        <member name="T:CefGlue.Interop.cef_v8context_handler_t">
            <summary>
            Implement this structure to handle V8 context events. The functions of
            this structure will be called on the UI thread.
            </summary>
        </member>
        <member name="F:CefGlue.Interop.cef_v8context_handler_t.base">
            <summary>
            Base structure.
            </summary>
        </member>
        <member name="F:CefGlue.Interop.cef_v8context_handler_t.on_context_created">
            <summary>
            Called immediately after the V8 context for a frame has been created.
            To retrieve the JavaScript 'window' object use the
            cef_v8context_t::get_global() function.
            </summary>
        </member>
        <member name="F:CefGlue.Interop.cef_v8context_handler_t.on_context_released">
            <summary>
            Called immediately before the V8 context for a frame is released. No
            references to the context should be kept after this function is
            called.
            </summary>
        </member>
        <member name="T:CefGlue.Interop.cef_render_handler_t">
            <summary>
            Implement this structure to handle events when window rendering is
            disabled. The functions of this structure will be called on the UI
            thread.
            </summary>
        </member>
        <member name="F:CefGlue.Interop.cef_render_handler_t.base">
            <summary>
            Base structure.
            </summary>
        </member>
        <member name="F:CefGlue.Interop.cef_render_handler_t.get_view_rect">
            <summary>
            Called to retrieve the view rectangle which is relative to screen
            coordinates. Return true (1) if the rectangle was provided.
            </summary>
        </member>
        <member name="F:CefGlue.Interop.cef_render_handler_t.get_screen_rect">
            <summary>
            Called to retrieve the simulated screen rectangle. Return true (1) if
            the rectangle was provided.
            </summary>
        </member>
        <member name="F:CefGlue.Interop.cef_render_handler_t.get_screen_point">
            <summary>
            Called to retrieve the translation from view coordinates to actual
            screen coordinates. Return true (1) if the screen coordinates were
            provided.
            </summary>
        </member>
        <member name="F:CefGlue.Interop.cef_render_handler_t.on_popup_show">
            <summary>
            Called when the browser wants to show or hide the popup widget. The
            popup should be shown if |show| is true (1) and hidden if |show| is
            false (0).
            </summary>
        </member>
        <member name="F:CefGlue.Interop.cef_render_handler_t.on_popup_size">
            <summary>
            Called when the browser wants to move or resize the popup widget.
            |rect| contains the new location and size.
            </summary>
        </member>
        <member name="F:CefGlue.Interop.cef_render_handler_t.on_paint">
            <summary>
            Called when an element should be painted. |type| indicates whether
            the element is the view or the popup widget. |buffer| contains the
            pixel data for the whole image. |dirtyRects| contains the set of
            rectangles that need to be repainted. On Windows |buffer| will be
            width*height*4 bytes in size and represents a BGRA image with an
            upper-left origin. The cef_browser_tSettings.animation_frame_rate
            value controls the rate at which this function is called.
            </summary>
        </member>
        <member name="F:CefGlue.Interop.cef_render_handler_t.on_cursor_change">
            <summary>
            Called when the browser window's cursor has changed.
            </summary>
        </member>
        <member name="T:CefGlue.Interop.cef_proxy_handler_t">
            <summary>
            Implement this structure to handle proxy resolution events.
            </summary>
        </member>
        <member name="F:CefGlue.Interop.cef_proxy_handler_t.base">
            <summary>
            Base structure.
            </summary>
        </member>
        <member name="F:CefGlue.Interop.cef_proxy_handler_t.get_proxy_for_url">
            <summary>
            Called to retrieve proxy information for the specified |url|.
            </summary>
        </member>
        <member name="T:CefGlue.Interop.cef_drag_handler_t">
            <summary>
            Implement this structure to handle events related to dragging. The
            functions of this structure will be called on the UI thread.
            </summary>
        </member>
        <member name="F:CefGlue.Interop.cef_drag_handler_t.base">
            <summary>
            Base structure.
            </summary>
        </member>
        <member name="F:CefGlue.Interop.cef_drag_handler_t.on_drag_start">
            <summary>
            Called when the browser window initiates a drag event. |dragData|
            contains the drag event data and |mask| represents the type of drag
            operation. Return false (0) for default drag handling behavior or
            true (1) to cancel the drag event.
            </summary>
        </member>
        <member name="F:CefGlue.Interop.cef_drag_handler_t.on_drag_enter">
            <summary>
            Called when an external drag event enters the browser window.
            |dragData| contains the drag event data and |mask| represents the
            type of drag operation. Return false (0) for default drag handling
            behavior or true (1) to cancel the drag event.
            </summary>
        </member>
        <member name="T:CefGlue.Interop.cef_geolocation_handler_t">
            <summary>
            Implement this structure to handle events related to geolocation
            permission requests. The functions of this structure will be called on
            the browser process IO thread.
            </summary>
        </member>
        <member name="F:CefGlue.Interop.cef_geolocation_handler_t.base">
            <summary>
            Base structure.
            </summary>
        </member>
        <member name="F:CefGlue.Interop.cef_geolocation_handler_t.on_request_geolocation_permission">
            <summary>
            Called when a page requests permission to access geolocation
            information. |requesting_url| is the URL requesting permission and
            |request_id| is the unique ID for the permission request. Call
            cef_geolocation_callback_t::Continue to allow or deny the permission
            request.
            </summary>
        </member>
        <member name="F:CefGlue.Interop.cef_geolocation_handler_t.on_cancel_geolocation_permission">
            <summary>
            Called when a geolocation access request is canceled.
            |requesting_url| is the URL that originally requested permission and
            |request_id| is the unique ID for the permission request.
            </summary>
        </member>
        <member name="T:CefGlue.Interop.cef_zoom_handler_t">
            <summary>
            Implement this structure to customize zoom handling. The functions of
            this structure will be called on the UI thread.
            </summary>
        </member>
        <member name="F:CefGlue.Interop.cef_zoom_handler_t.base">
            <summary>
            Base structure.
            </summary>
        </member>
        <member name="F:CefGlue.Interop.cef_zoom_handler_t.on_get_zoom_level">
            <summary>
            Called when the browser wants to retrieve the zoom level for the
            given |url|. Return true (1) if |zoomLevel| has been set to the
            custom zoom level. Return false (0) for the browser's default zoom
            handling behavior.
            </summary>
        </member>
        <member name="F:CefGlue.Interop.cef_zoom_handler_t.on_set_zoom_level">
            <summary>
            Called when the browser's zoom level has been set to |zoomLevel| for
            the given |url|. Return true (1) to indicate that the new setting has
            been handled. Return false (0) to use the browser's default zoom
            handling behavior.
            </summary>
        </member>
        <member name="T:CefGlue.Interop.cef_download_handler_t">
            <summary>
            Structure used to handle file downloads. The functions of this structure
            will always be called on the UI thread.
            </summary>
        </member>
        <member name="F:CefGlue.Interop.cef_download_handler_t.base">
            <summary>
            Base structure.
            </summary>
        </member>
        <member name="F:CefGlue.Interop.cef_download_handler_t.received_data">
            <summary>
            A portion of the file contents have been received. This function will
            be called multiple times until the download is complete. Return |true
            (1)| to continue receiving data and |false (0)| to cancel.
            </summary>
        </member>
        <member name="F:CefGlue.Interop.cef_download_handler_t.complete">
            <summary>
            The download is complete.
            </summary>
        </member>
        <member name="T:CefGlue.Interop.cef_resource_bundle_handler_t">
            <summary>
            Structure used to implement a custom resource bundle structure. The
            functions of this structure may be called on multiple threads.
            </summary>
        </member>
        <member name="F:CefGlue.Interop.cef_resource_bundle_handler_t.base">
            <summary>
            Base structure.
            </summary>
        </member>
        <member name="F:CefGlue.Interop.cef_resource_bundle_handler_t.get_localized_string">
             <summary>
             Called to retrieve a localized translation for the string specified
             by |message_id|. To provide the translation set |string| to the
             translation string and return true (1). To use the default
             translation return false (0).
            
             WARNING: Be cautious when implementing this function. ID values are
             auto- generated when CEF is built and may change between versions.
             Existing ID values can be discovered by searching for *_strings.h in
             the "obj/global_intermediate" build output directory.
             </summary>
        </member>
        <member name="F:CefGlue.Interop.cef_resource_bundle_handler_t.get_data_resource">
             <summary>
             Called to retrieve data for the resource specified by |resource_id|.
             To provide the resource data set |data| and |data_size| to the data
             pointer and size respectively and return true (1). To use the default
             resource data return false (0). The resource data will not be copied
             and must remain resident in memory.
            
             WARNING: Be cautious when implementing this function. ID values are
             auto- generated when CEF is built and may change between versions.
             Existing ID values can be discovered by searching for *_resources.h
             in the "obj/global_intermediate" build output directory.
             </summary>
        </member>
        <member name="T:CefGlue.Interop.cef_scheme_handler_factory_t">
            <summary>
            Structure that creates cef_scheme_handler_t instances. The functions of
            this structure will always be called on the IO thread.
            </summary>
        </member>
        <member name="F:CefGlue.Interop.cef_scheme_handler_factory_t.base">
            <summary>
            Base structure.
            </summary>
        </member>
        <member name="F:CefGlue.Interop.cef_scheme_handler_factory_t.create">
            <summary>
            Return a new scheme handler instance to handle the request. |browser|
            will be the browser window that initiated the request. If the request
            was initiated using the cef_web_urlrequest_t API |browser| will be
            NULL. The |request| object passed to this function will not contain
            cookie data.
            </summary>
        </member>
        <member name="T:CefGlue.Interop.cef_scheme_handler_t">
            <summary>
            Structure used to implement a custom scheme handler structure. The
            functions of this structure will always be called on the IO thread.
            </summary>
        </member>
        <member name="F:CefGlue.Interop.cef_scheme_handler_t.base">
            <summary>
            Base structure.
            </summary>
        </member>
        <member name="F:CefGlue.Interop.cef_scheme_handler_t.process_request">
            <summary>
            Begin processing the request. To handle the request return true (1)
            and call headers_available() once the response header information is
            available (headers_available() can also be called from inside this
            function if header information is available immediately). To cancel
            the request return false (0).
            </summary>
        </member>
        <member name="F:CefGlue.Interop.cef_scheme_handler_t.get_response_headers">
            <summary>
            Retrieve response header information. If the response length is not
            known set |response_length| to -1 and read_response() will be called
            until it returns false (0). If the response length is known set
            |response_length| to a positive value and read_response() will be
            called until it returns false (0) or the specified number of bytes
            have been read. Use the |response| object to set the mime type, http
            status code and other optional header values. To redirect the request
            to a new URL set |redirectUrl| to the new URL.
            </summary>
        </member>
        <member name="F:CefGlue.Interop.cef_scheme_handler_t.read_response">
            <summary>
            Read response data. If data is available immediately copy up to
            |bytes_to_read| bytes into |data_out|, set |bytes_read| to the number
            of bytes copied, and return true (1). To read the data at a later
            time set |bytes_read| to 0, return true (1) and call
            bytes_available() when the data is available. To indicate response
            completion return false (0).
            </summary>
        </member>
        <member name="F:CefGlue.Interop.cef_scheme_handler_t.cancel">
            <summary>
            Request processing has been canceled.
            </summary>
        </member>
        <member name="T:CefGlue.Interop.cef_content_filter_t">
            <summary>
            Structure to implement for filtering response content. The functions of
            this structure will always be called on the UI thread.
            </summary>
        </member>
        <member name="F:CefGlue.Interop.cef_content_filter_t.base">
            <summary>
            Base structure.
            </summary>
        </member>
        <member name="F:CefGlue.Interop.cef_content_filter_t.process_data">
            <summary>
            Set |substitute_data| to the replacement for the data in |data| if
            data should be modified.
            </summary>
        </member>
        <member name="F:CefGlue.Interop.cef_content_filter_t.drain">
            <summary>
            Called when there is no more data to be processed. It is expected
            that whatever data was retained in the last process_data() call, it
            should be returned now by setting |remainder| if appropriate.
            </summary>
        </member>
        <member name="T:CefGlue.Interop.cef_task_t">
            <summary>
            Implement this structure for task execution. The functions of this
            structure may be called on any thread.
            </summary>
        </member>
        <member name="F:CefGlue.Interop.cef_task_t.base">
            <summary>
            Base structure.
            </summary>
        </member>
        <member name="F:CefGlue.Interop.cef_task_t.execute">
            <summary>
            Method that will be executed. |threadId| is the thread executing the
            call.
            </summary>
        </member>
        <member name="T:CefGlue.Interop.cef_cookie_visitor_t">
            <summary>
            Structure to implement for visiting cookie values. The functions of this
            structure will always be called on the IO thread.
            </summary>
        </member>
        <member name="F:CefGlue.Interop.cef_cookie_visitor_t.base">
            <summary>
            Base structure.
            </summary>
        </member>
        <member name="F:CefGlue.Interop.cef_cookie_visitor_t.visit">
            <summary>
            Method that will be called once for each cookie. |count| is the
            0-based index for the current cookie. |total| is the total number of
            cookies. Set |deleteCookie| to true (1) to delete the cookie
            currently being visited. Return false (0) to stop visiting cookies.
            This function may never be called if no cookies are found.
            </summary>
        </member>
        <member name="T:CefGlue.Interop.cef_v8handler_t">
            <summary>
            Structure that should be implemented to handle V8 function calls. The
            functions of this structure will always be called on the UI thread.
            </summary>
        </member>
        <member name="F:CefGlue.Interop.cef_v8handler_t.base">
            <summary>
            Base structure.
            </summary>
        </member>
        <member name="F:CefGlue.Interop.cef_v8handler_t.execute">
            <summary>
            Handle execution of the function identified by |name|. |object| is
            the receiver ('this' object) of the function. |arguments| is the list
            of arguments passed to the function. If execution succeeds set
            |retval| to the function return value. If execution fails set
            |exception| to the exception that will be thrown. Return true (1) if
            execution was handled.
            </summary>
        </member>
        <member name="T:CefGlue.Interop.cef_v8accessor_t">
            <summary>
            Structure that should be implemented to handle V8 accessor calls.
            Accessor identifiers are registered by calling
            cef_v8value_t::set_value_byaccessor(). The functions of this structure
            will always be called on the UI thread.
            </summary>
        </member>
        <member name="F:CefGlue.Interop.cef_v8accessor_t.base">
            <summary>
            Base structure.
            </summary>
        </member>
        <member name="F:CefGlue.Interop.cef_v8accessor_t.get">
            <summary>
            Handle retrieval the accessor value identified by |name|. |object| is
            the receiver ('this' object) of the accessor. If retrieval succeeds
            set |retval| to the return value. If retrieval fails set |exception|
            to the exception that will be thrown. Return true (1) if accessor
            retrieval was handled.
            </summary>
        </member>
        <member name="F:CefGlue.Interop.cef_v8accessor_t.set">
            <summary>
            Handle assignment of the accessor value identified by |name|.
            |object| is the receiver ('this' object) of the accessor. |value| is
            the new value being assigned to the accessor. If assignment fails set
            |exception| to the exception that will be thrown. Return true (1) if
            accessor assignment was handled.
            </summary>
        </member>
        <member name="T:CefGlue.Interop.cef_domvisitor_t">
            <summary>
            Structure to implement for visiting the DOM. The functions of this
            structure will be called on the UI thread.
            </summary>
        </member>
        <member name="F:CefGlue.Interop.cef_domvisitor_t.base">
            <summary>
            Base structure.
            </summary>
        </member>
        <member name="F:CefGlue.Interop.cef_domvisitor_t.visit">
            <summary>
            Method executed for visiting the DOM. The document object passed to
            this function represents a snapshot of the DOM at the time this
            function is executed. DOM objects are only valid for the scope of
            this function. Do not keep references to or attempt to access any DOM
            objects outside the scope of this function.
            </summary>
        </member>
        <member name="T:CefGlue.Interop.cef_domevent_listener_t">
            <summary>
            Structure to implement for handling DOM events. The functions of this
            structure will be called on the UI thread.
            </summary>
        </member>
        <member name="F:CefGlue.Interop.cef_domevent_listener_t.base">
            <summary>
            Base structure.
            </summary>
        </member>
        <member name="F:CefGlue.Interop.cef_domevent_listener_t.handle_event">
            <summary>
            Called when an event is received. The event object passed to this
            function contains a snapshot of the DOM at the time this function is
            executed. DOM objects are only valid for the scope of this function.
            Do not keep references to or attempt to access any DOM objects
            outside the scope of this function.
            </summary>
        </member>
        <member name="T:CefGlue.Interop.cef_read_handler_t">
            <summary>
            Structure the client can implement to provide a custom stream reader. The
            functions of this structure may be called on any thread.
            </summary>
        </member>
        <member name="F:CefGlue.Interop.cef_read_handler_t.base">
            <summary>
            Base structure.
            </summary>
        </member>
        <member name="F:CefGlue.Interop.cef_read_handler_t.read">
            <summary>
            Read raw binary data.
            </summary>
        </member>
        <member name="F:CefGlue.Interop.cef_read_handler_t.seek">
            <summary>
            Seek to the specified offset position. |whence| may be any one of
            SEEK_CUR, SEEK_END or SEEK_SET. Return zero on success and non-zero
            on failure.
            </summary>
        </member>
        <member name="F:CefGlue.Interop.cef_read_handler_t.tell">
            <summary>
            Return the current offset position.
            </summary>
        </member>
        <member name="F:CefGlue.Interop.cef_read_handler_t.eof">
            <summary>
            Return non-zero if at end of file.
            </summary>
        </member>
        <member name="T:CefGlue.Interop.cef_write_handler_t">
            <summary>
            Structure the client can implement to provide a custom stream writer. The
            functions of this structure may be called on any thread.
            </summary>
        </member>
        <member name="F:CefGlue.Interop.cef_write_handler_t.base">
            <summary>
            Base structure.
            </summary>
        </member>
        <member name="F:CefGlue.Interop.cef_write_handler_t.write">
            <summary>
            Write raw binary data.
            </summary>
        </member>
        <member name="F:CefGlue.Interop.cef_write_handler_t.seek">
            <summary>
            Seek to the specified offset position. |whence| may be any one of
            SEEK_CUR, SEEK_END or SEEK_SET. Return zero on success and non-zero
            on failure.
            </summary>
        </member>
        <member name="F:CefGlue.Interop.cef_write_handler_t.tell">
            <summary>
            Return the current offset position.
            </summary>
        </member>
        <member name="F:CefGlue.Interop.cef_write_handler_t.flush">
            <summary>
            Flush the stream.
            </summary>
        </member>
        <member name="T:CefGlue.Interop.cef_web_urlrequest_client_t">
            <summary>
            Structure that should be implemented by the cef_web_urlrequest_t client.
            The functions of this structure will always be called on the UI thread.
            </summary>
        </member>
        <member name="F:CefGlue.Interop.cef_web_urlrequest_client_t.base">
            <summary>
            Base structure.
            </summary>
        </member>
        <member name="F:CefGlue.Interop.cef_web_urlrequest_client_t.on_state_change">
            <summary>
            Notifies the client that the request state has changed. State change
            notifications will always be sent before the below notification
            functions are called.
            </summary>
        </member>
        <member name="F:CefGlue.Interop.cef_web_urlrequest_client_t.on_redirect">
            <summary>
            Notifies the client that the request has been redirected and
            provides a chance to change the request parameters.
            </summary>
        </member>
        <member name="F:CefGlue.Interop.cef_web_urlrequest_client_t.on_headers_received">
            <summary>
            Notifies the client of the response data.
            </summary>
        </member>
        <member name="F:CefGlue.Interop.cef_web_urlrequest_client_t.on_progress">
            <summary>
            Notifies the client of the upload progress.
            </summary>
        </member>
        <member name="F:CefGlue.Interop.cef_web_urlrequest_client_t.on_data">
            <summary>
            Notifies the client that content has been received.
            </summary>
        </member>
        <member name="F:CefGlue.Interop.cef_web_urlrequest_client_t.on_error">
            <summary>
            Notifies the client that the request ended with an error.
            </summary>
        </member>
        <member name="F:CefGlue.Interop.cefglue_userdata_t.base">
            <summary>
            Base structure.
            </summary>
        </member>
        <member name="T:CefGlue.Interop.cef_string_t">
             <summary>
             CEF string type.
            
             Whomever allocates |str| is responsible for providing an appropriate |dtor| implementation that will free the string in the same memory space.
             When reusing an existing string structure make sure to call |dtor| for the old value before assigning new |str| and |dtor| values.
             Static strings will have a NULL |dtor| value.
             </summary>
             <remarks>
             This is assumes that CEF builded with the UTF16 string type as default (CEF_STRING_TYPE_UTF16).
             </remarks>
        </member>
        <member name="F:CefGlue.Interop.cef_string_t.str">
            <summary></summary>
            <remarks>char16_t* str;</remarks>
        </member>
        <member name="F:CefGlue.Interop.cef_string_t.length">
            <summary></summary>
            <remarks>size_t length;</remarks>
        </member>
        <member name="F:CefGlue.Interop.cef_string_t.dtor">
            <summary></summary>
            <remarks>void (*dtor)(char16_t* str);</remarks>
        </member>
        <member name="M:CefGlue.Interop.cef_string_t.#ctor(System.Char*,System.Int32)">
            <summary>
            This is useful to pass string without copying.
            </summary>
        </member>
        <member name="F:CefGlue.Interop.cef_base_t.size">
            <summary>
            Size of the data structure.
            </summary>
        </member>
        <member name="F:CefGlue.Interop.cef_base_t.add_ref">
            <summary>
            Increment the reference count.
            </summary>
            <remarks>
            int (CEF_CALLBACK *add_ref)(struct _cef_base_t* self);
            </remarks>
        </member>
        <member name="F:CefGlue.Interop.cef_base_t.release">
            <summary>
            Decrement the reference count.  Delete this object when no references remain.
            </summary>
            <remarks>
            int (CEF_CALLBACK *release)(struct _cef_base_t* self);
            </remarks>
        </member>
        <member name="F:CefGlue.Interop.cef_base_t.get_refct">
            <summary>
            Returns the current number of references.
            </summary>
            <remarks>
            int (CEF_CALLBACK *get_refct)(struct _cef_base_t* self);
            </remarks>
        </member>
        <member name="T:CefGlue.Interop.cef_dom_document_type_t">
            
        </member>
        <member name="T:CefGlue.Interop.cef_dom_event_category_t">
            
        </member>
        <member name="T:CefGlue.Interop.cef_dom_event_phase_t">
            
        </member>
        <member name="T:CefGlue.Interop.cef_dom_node_type_t">
            
        </member>
        <member name="T:CefGlue.Interop.cef_handler_errorcode_t">
            
        </member>
        <member name="T:CefGlue.Interop.cef_handler_keyevent_modifiers_t">
            <summary>
            Key event modifiers.
            </summary>
        </member>
        <member name="T:CefGlue.Interop.cef_handler_keyevent_type_t">
            <summary>
            Key event types.
            </summary>
        </member>
        <member name="T:CefGlue.Interop.cef_handler_menucapabilitybits_t">
            
        </member>
        <member name="T:CefGlue.Interop.cef_handler_menutypebits_t">
            
        </member>
        <member name="F:CefGlue.Interop.cef_handler_menutypebits_t.MENUTYPE_NONE">
            
        </member>
        <member name="F:CefGlue.Interop.cef_handler_menutypebits_t.MENUTYPE_PAGE">
            
        </member>
        <member name="F:CefGlue.Interop.cef_handler_menutypebits_t.MENUTYPE_FRAME">
            
        </member>
        <member name="F:CefGlue.Interop.cef_handler_menutypebits_t.MENUTYPE_LINK">
            
        </member>
        <member name="F:CefGlue.Interop.cef_handler_menutypebits_t.MENUTYPE_IMAGE">
            
        </member>
        <member name="F:CefGlue.Interop.cef_handler_menutypebits_t.MENUTYPE_SELECTION">
            
        </member>
        <member name="F:CefGlue.Interop.cef_handler_menutypebits_t.MENUTYPE_EDITABLE">
            
        </member>
        <member name="F:CefGlue.Interop.cef_handler_menutypebits_t.MENUTYPE_MISSPELLED_WORD">
            
        </member>
        <member name="F:CefGlue.Interop.cef_handler_menutypebits_t.MENUTYPE_VIDEO">
            
        </member>
        <member name="F:CefGlue.Interop.cef_handler_menutypebits_t.MENUTYPE_AUDIO">
            
        </member>
        <member name="T:CefGlue.Interop.cef_handler_navtype_t">
            
        </member>
        <member name="T:CefGlue.Interop.cef_handler_statustype_t">
            <summary>
            Status message types.
            </summary>
        </member>
        <member name="T:CefGlue.Interop.cef_key_type_t">
            <summary>
            Key types.
            </summary>
        </member>
        <member name="T:CefGlue.Interop.cef_log_severity_t">
            
        </member>
        <member name="T:CefGlue.Interop.cef_mouse_button_type_t">
            
        </member>
        <member name="T:CefGlue.Interop.cef_page_orientation">
            
        </member>
        <member name="T:CefGlue.Interop.cef_paper_type_t">
            
        </member>
        <member name="T:CefGlue.Interop.cef_postdataelement_type_t">
            
        </member>
        <member name="T:CefGlue.Interop.cef_thread_id_t">
            <summary>
            Existing thread IDs.
            </summary>
        </member>
        <member name="T:CefGlue.Interop.cef_v8_accesscontrol_t">
            
        </member>
        <member name="T:CefGlue.Interop.cef_v8_propertyattribute_t">
            
        </member>
        <member name="T:CefGlue.Interop.cef_xml_encoding_type_t">
            
        </member>
        <member name="T:CefGlue.Interop.cef_xml_node_type_t">
            
        </member>
        <member name="T:CefGlue.Interop.cef_drag_operations_mask_t">
            <summary>
            "Verb" of a drag-and-drop operation as negotiated between the source and
            destination. These constants match their equivalents in WebCore's
            DragActions.h and should not be renumbered.
            </summary>
        </member>
        <member name="T:CefGlue.Interop.cef_paper_metrics">
            
        </member>
        <member name="T:CefGlue.Interop.cef_print_info_t">
            
        </member>
        <member name="T:CefGlue.Interop.cef_print_margins">
            
        </member>
        <member name="T:CefGlue.Interop.cef_print_options_t">
            
        </member>
        <member name="T:CefGlue.Interop.cef_rect_t">
            
        </member>
        <member name="T:CefGlue.Interop.cef_time_t">
            
        </member>
        <member name="T:CefGlue.Interop.cef_urlparts_t">
            <summary>
            URL component parts.
            </summary>
        </member>
        <member name="F:CefGlue.Interop.cef_urlparts_t.spec">
            
        </member>
        <member name="F:CefGlue.Interop.cef_urlparts_t.scheme">
            
        </member>
        <member name="F:CefGlue.Interop.cef_urlparts_t.username">
            
        </member>
        <member name="F:CefGlue.Interop.cef_urlparts_t.password">
            
        </member>
        <member name="F:CefGlue.Interop.cef_urlparts_t.host">
            
        </member>
        <member name="F:CefGlue.Interop.cef_urlparts_t.port">
            
        </member>
        <member name="F:CefGlue.Interop.cef_urlparts_t.path">
            
        </member>
        <member name="F:CefGlue.Interop.cef_urlparts_t.query">
            
        </member>
        <member name="M:CefGlue.Interop.NativeMethods.cef_initialize(CefGlue.Interop.cef_settings_t*,CefGlue.Interop.cef_app_t*)">
            <summary>
            This function should be called on the main application thread to
            initialize CEF when the application is started. The |application|
            parameter may be NULL. A return value of true (1) indicates that it
            succeeded and false (0) indicates that it failed.
            </summary>
        </member>
        <member name="M:CefGlue.Interop.NativeMethods.cef_shutdown">
            <summary>
            This function should be called on the main application thread to shut
            down CEF before the application exits.
            </summary>
        </member>
        <member name="M:CefGlue.Interop.NativeMethods.cef_do_message_loop_work">
            <summary>
            Perform a single iteration of CEF message loop processing. This
            function is used to integrate the CEF message loop into an existing
            application message loop. Care must be taken to balance performance
            against excessive CPU usage. This function should only be called on
            the main application thread and only if cef_initialize() is called
            with a CefSettings.multi_threaded_message_loop value of false (0).
            This function will not block.
            </summary>
        </member>
        <member name="M:CefGlue.Interop.NativeMethods.cef_run_message_loop">
            <summary>
            Run the CEF message loop. Use this function instead of an
            application- provided message loop to get the best balance between
            performance and CPU usage. This function should only be called on the
            main application thread and only if cef_initialize() is called with a
            CefSettings.multi_threaded_message_loop value of false (0). This
            function will block until a quit message is received by the system.
            </summary>
        </member>
        <member name="M:CefGlue.Interop.NativeMethods.cef_quit_message_loop">
            <summary>
            Quit the CEF message loop that was started by calling
            cef_run_message_loop(). This function should only be called on the
            main application thread and only if cef_run_message_loop() was used.
            </summary>
        </member>
        <member name="M:CefGlue.Interop.NativeMethods.cef_add_cross_origin_whitelist_entry(CefGlue.Interop.cef_string_t*,CefGlue.Interop.cef_string_t*,CefGlue.Interop.cef_string_t*,System.Int32)">
             <summary>
             Add an entry to the cross-origin access whitelist.
            
             The same-origin policy restricts how scripts hosted from different
             origins (scheme + domain + port) can communicate. By default, scripts
             can only access resources with the same origin. Scripts hosted on the
             HTTP and HTTPS schemes (but no other schemes) can use the "Access-
             Control-Allow-Origin" header to allow cross-origin requests. For
             example, https://source.example.com can make XMLHttpRequest requests
             on http://target.example.com if the http://target.example.com request
             returns an "Access-Control-Allow-Origin: https://source.example.com"
             response header.
            
             Scripts in separate frames or iframes and hosted from the same
             protocol and domain suffix can execute cross-origin JavaScript if
             both pages set the document.domain value to the same domain suffix.
             For example, scheme://foo.example.com and scheme://bar.example.com
             can communicate using JavaScript if both domains set
             document.domain="example.com".
            
             This function is used to allow access to origins that would otherwise
             violate the same-origin policy. Scripts hosted underneath the fully
             qualified |source_origin| URL (like http://www.example.com) will be
             allowed access to all resources hosted on the specified
             |target_protocol| and |target_domain|. If |target_domain| is non-NULL
             and |allow_target_subdomains| if false (0) only exact domain matches
             will be allowed. If |target_domain| is non-NULL and
             |allow_target_subdomains| is true (1) sub-domain matches will be
             allowed. If |target_domain| is NULL and |allow_target_subdomains| if
             true (1) all domains and IP addresses will be allowed.
            
             This function cannot be used to bypass the restrictions on local or
             display isolated schemes. See the comments on CefRegisterCustomScheme
             for more information.
            
             This function may be called on any thread. Returns false (0) if
             |source_origin| is invalid or the whitelist cannot be accessed.
             </summary>
        </member>
        <member name="M:CefGlue.Interop.NativeMethods.cef_remove_cross_origin_whitelist_entry(CefGlue.Interop.cef_string_t*,CefGlue.Interop.cef_string_t*,CefGlue.Interop.cef_string_t*,System.Int32)">
            <summary>
            Remove an entry from the cross-origin access whitelist. Returns false
            (0) if |source_origin| is invalid or the whitelist cannot be
            accessed.
            </summary>
        </member>
        <member name="M:CefGlue.Interop.NativeMethods.cef_clear_cross_origin_whitelist">
            <summary>
            Remove all entries from the cross-origin access whitelist. Returns
            false (0) if the whitelist cannot be accessed.
            </summary>
        </member>
        <member name="M:CefGlue.Interop.NativeMethods.cef_register_custom_scheme(CefGlue.Interop.cef_string_t*,System.Int32,System.Int32,System.Int32)">
             <summary>
             Register a custom scheme. This function should not be called for the
             built-in HTTP, HTTPS, FILE, FTP, ABOUT and DATA schemes.
            
             If |is_standard| is true (1) the scheme will be treated as a standard
             scheme. Standard schemes are subject to URL canonicalization and
             parsing rules as defined in the Common Internet Scheme Syntax RFC
             1738 Section 3.1 available at http://www.ietf.org/rfc/rfc1738.txt
            
             In particular, the syntax for standard scheme URLs must be of the
             form: &lt;pre&gt;
              [scheme]://[username]:[password]@[host]:[port]/[url-path]
             &lt;/pre&gt; Standard scheme URLs must have a host component that is a
             fully qualified domain name as defined in Section 3.5 of RFC 1034
             [13] and Section 2.1 of RFC 1123. These URLs will be canonicalized to
             "scheme://host/path" in the simplest case and
             "scheme://username:password@host:port/path" in the most explicit
             case. For example, "scheme:host/path" and "scheme:///host/path" will
             both be canonicalized to "scheme://host/path". The origin of a
             standard scheme URL is the combination of scheme, host and port
             (i.e., "scheme://host:port" in the most explicit case).
            
             For non-standard scheme URLs only the "scheme:" component is parsed
             and canonicalized. The remainder of the URL will be passed to the
             handler as-is. For example, "scheme:///some%20text" will remain the
             same. Non-standard scheme URLs cannot be used as a target for form
             submission.
            
             If |is_local| is true (1) the scheme will be treated as local (i.e.,
             with the same security rules as those applied to "file" URLs). Normal
             pages cannot link to or access local URLs. Also, by default, local
             URLs can only perform XMLHttpRequest calls to the same URL (origin +
             path) that originated the request. To allow XMLHttpRequest calls from
             a local URL to other URLs with the same origin set the
             CefSettings.file_access_from_file_urls_allowed value to true (1). To
             allow XMLHttpRequest calls from a local URL to all origins set the
             CefSettings.universal_access_from_file_urls_allowed value to true
             (1).
            
             If |is_display_isolated| is true (1) the scheme will be treated as
             display- isolated. This means that pages cannot display these URLs
             unless they are from the same scheme. For example, pages in another
             origin cannot create iframes or hyperlinks to URLs with this scheme.
            
             This function may be called on any thread. It should only be called
             once per unique |scheme_name| value. If |scheme_name| is already
             registered or if an error occurs this function will return false (0).
             </summary>
        </member>
        <member name="M:CefGlue.Interop.NativeMethods.cef_register_scheme_handler_factory(CefGlue.Interop.cef_string_t*,CefGlue.Interop.cef_string_t*,CefGlue.Interop.cef_scheme_handler_factory_t*)">
            <summary>
            Register a scheme handler factory for the specified |scheme_name| and
            optional |domain_name|. An NULL |domain_name| value for a standard
            scheme will cause the factory to match all domain names. The
            |domain_name| value will be ignored for non-standard schemes. If
            |scheme_name| is a built-in scheme and no handler is returned by
            |factory| then the built-in scheme handler factory will be called. If
            |scheme_name| is a custom scheme the cef_register_custom_scheme()
            function should be called for that scheme. This function may be
            called multiple times to change or remove the factory that matches
            the specified |scheme_name| and optional |domain_name|. Returns false
            (0) if an error occurs. This function may be called on any thread.
            </summary>
        </member>
        <member name="M:CefGlue.Interop.NativeMethods.cef_clear_scheme_handler_factories">
            <summary>
            Clear all registered scheme handler factories. Returns false (0) on
            error. This function may be called on any thread.
            </summary>
        </member>
        <member name="M:CefGlue.Interop.NativeMethods.cef_currently_on(CefGlue.Interop.cef_thread_id_t)">
            <summary>
            CEF maintains multiple internal threads that are used for handling
            different types of tasks. The UI thread creates the browser window
            and is used for all interaction with the WebKit rendering engine and
            V8 JavaScript engine (The UI thread will be the same as the main
            application thread if cef_initialize() is called with a
            CefSettings.multi_threaded_message_loop value of false (0).) The IO
            thread is used for handling schema and network requests. The FILE
            thread is used for the application cache and other miscellaneous
            activities. This function will return true (1) if called on the
            specified thread.
            </summary>
        </member>
        <member name="M:CefGlue.Interop.NativeMethods.cef_post_task(CefGlue.Interop.cef_thread_id_t,CefGlue.Interop.cef_task_t*)">
            <summary>
            Post a task for execution on the specified thread. This function may
            be called on any thread.
            </summary>
        </member>
        <member name="M:CefGlue.Interop.NativeMethods.cef_post_delayed_task(CefGlue.Interop.cef_thread_id_t,CefGlue.Interop.cef_task_t*,System.Int64)">
            <summary>
            Post a task for delayed execution on the specified thread. This
            function may be called on any thread.
            </summary>
        </member>
        <member name="M:CefGlue.Interop.NativeMethods.cef_parse_url(CefGlue.Interop.cef_string_t*,CefGlue.Interop.cef_urlparts_t*)">
            <summary>
            Parse the specified |url| into its component parts. Returns false (0)
            if the URL is NULL or invalid.
            </summary>
        </member>
        <member name="M:CefGlue.Interop.NativeMethods.cef_create_url(CefGlue.Interop.cef_urlparts_t*,CefGlue.Interop.cef_string_t*)">
            <summary>
            Creates a URL from the specified |parts|, which must contain a non-
            NULL spec or a non-NULL host and path (at a minimum), but not both.
            Returns false (0) if |parts| isn't initialized as described.
            </summary>
        </member>
        <member name="M:CefGlue.Interop.NativeMethods.cef_register_extension(CefGlue.Interop.cef_string_t*,CefGlue.Interop.cef_string_t*,CefGlue.Interop.cef_v8handler_t*)">
             <summary>
             Register a new V8 extension with the specified JavaScript extension
             code and handler. Functions implemented by the handler are prototyped
             using the keyword 'native'. The calling of a native function is
             restricted to the scope in which the prototype of the native function
             is defined. This function may be called on any thread.
            
             Example JavaScript extension code: &lt;pre&gt;
               // create the 'example' global object if it doesn't already exist.
               if (!example)
                 example = {};
               // create the 'example.test' global object if it doesn't already exist.
               if (!example.test)
                 example.test = {};
               (function() {
                 // Define the function 'example.test.myfunction'.
                 example.test.myfunction = function() {
                   // Call CefV8Handler::Execute() with the function name 'MyFunction'
                   // and no arguments.
                   native function MyFunction();
                   return MyFunction();
                 };
                 // Define the getter function for parameter 'example.test.myparam'.
                 example.test.__defineGetter__('myparam', function() {
                   // Call CefV8Handler::Execute() with the function name 'GetMyParam'
                   // and no arguments.
                   native function GetMyParam();
                   return GetMyParam();
                 });
                 // Define the setter function for parameter 'example.test.myparam'.
                 example.test.__defineSetter__('myparam', function(b) {
                   // Call CefV8Handler::Execute() with the function name 'SetMyParam'
                   // and a single argument.
                   native function SetMyParam();
                   if(b) SetMyParam(b);
                 });
            
                 // Extension definitions can also contain normal JavaScript variables
                 // and functions.
                 var myint = 0;
                 example.test.increment = function() {
                   myint += 1;
                   return myint;
                 };
               })();
             &lt;/pre&gt; Example usage in the page: &lt;pre&gt;
               // Call the function.
               example.test.myfunction();
               // Set the parameter.
               example.test.myparam = value;
               // Get the parameter.
               value = example.test.myparam;
               // Call another function.
               example.test.increment();
             &lt;/pre&gt;
             </summary>
        </member>
        <member name="M:CefGlue.Interop.NativeMethods.cef_get_web_plugin_count">
            <summary>
            Returns the number of installed web plugins. This function must be
            called on the UI thread.
            </summary>
        </member>
        <member name="M:CefGlue.Interop.NativeMethods.cef_get_web_plugin_info(System.Int32)">
            <summary>
            Returns information for web plugin at the specified zero-based index.
            This function must be called on the UI thread.
            </summary>
        </member>
        <member name="M:CefGlue.Interop.NativeMethods.cef_get_web_plugin_info_byname(CefGlue.Interop.cef_string_t*)">
            <summary>
            Returns information for web plugin with the specified name. This
            function must be called on the UI thread.
            </summary>
        </member>
        <member name="M:CefGlue.Interop.NativeMethods.cef_browser_create(CefGlue.Interop.cef_window_info_t*,CefGlue.Interop.cef_client_t*,CefGlue.Interop.cef_string_t*,CefGlue.Interop.cef_browser_settings_t*)">
            <summary>
            Create a new browser window using the window parameters specified by
            |windowInfo|. All values will be copied internally and the actual
            window will be created on the UI thread. This function call will not
            block.
            </summary>
        </member>
        <member name="M:CefGlue.Interop.NativeMethods.cef_browser_create_sync(CefGlue.Interop.cef_window_info_t*,CefGlue.Interop.cef_client_t*,CefGlue.Interop.cef_string_t*,CefGlue.Interop.cef_browser_settings_t*)">
            <summary>
            Create a new browser window using the window parameters specified by
            |windowInfo|. This function should only be called on the UI thread.
            </summary>
        </member>
        <member name="M:CefGlue.Interop.NativeMethods.cef_command_line_create">
            <summary>
            Create a new cef_command_line_t instance.
            </summary>
        </member>
        <member name="M:CefGlue.Interop.NativeMethods.cef_cookie_manager_get_global_manager">
            <summary>
            Returns the global cookie manager. By default data will be stored at
            CefSettings.cache_path if specified or in memory otherwise.
            </summary>
        </member>
        <member name="M:CefGlue.Interop.NativeMethods.cef_cookie_manager_create_manager(CefGlue.Interop.cef_string_t*)">
            <summary>
            Creates a new cookie manager. If |path| is NULL data will be stored
            in memory only. Returns NULL if creation fails.
            </summary>
        </member>
        <member name="M:CefGlue.Interop.NativeMethods.cef_request_create">
            <summary>
            Create a new cef_request_t object.
            </summary>
        </member>
        <member name="M:CefGlue.Interop.NativeMethods.cef_post_data_create">
            <summary>
            Create a new cef_post_data_t object.
            </summary>
        </member>
        <member name="M:CefGlue.Interop.NativeMethods.cef_post_data_element_create">
            <summary>
            Create a new cef_post_data_element_t object.
            </summary>
        </member>
        <member name="M:CefGlue.Interop.NativeMethods.cef_stream_reader_create_for_file(CefGlue.Interop.cef_string_t*)">
            <summary>
            Create a new cef_stream_reader_t object from a file.
            </summary>
        </member>
        <member name="M:CefGlue.Interop.NativeMethods.cef_stream_reader_create_for_data(System.Void*,System.Int32)">
            <summary>
            Create a new cef_stream_reader_t object from data.
            </summary>
        </member>
        <member name="M:CefGlue.Interop.NativeMethods.cef_stream_reader_create_for_handler(CefGlue.Interop.cef_read_handler_t*)">
            <summary>
            Create a new cef_stream_reader_t object from a custom handler.
            </summary>
        </member>
        <member name="M:CefGlue.Interop.NativeMethods.cef_stream_writer_create_for_file(CefGlue.Interop.cef_string_t*)">
            <summary>
            Create a new cef_stream_writer_t object for a file.
            </summary>
        </member>
        <member name="M:CefGlue.Interop.NativeMethods.cef_stream_writer_create_for_handler(CefGlue.Interop.cef_write_handler_t*)">
            <summary>
            Create a new cef_stream_writer_t object for a custom handler.
            </summary>
        </member>
        <member name="M:CefGlue.Interop.NativeMethods.cef_v8context_get_current_context">
            <summary>
            Returns the current (top) context object in the V8 context stack.
            </summary>
        </member>
        <member name="M:CefGlue.Interop.NativeMethods.cef_v8context_get_entered_context">
            <summary>
            Returns the entered (bottom) context object in the V8 context stack.
            </summary>
        </member>
        <member name="M:CefGlue.Interop.NativeMethods.cef_v8context_in_context">
            <summary>
            Returns true (1) if V8 is currently inside a context.
            </summary>
        </member>
        <member name="M:CefGlue.Interop.NativeMethods.cef_v8value_create_undefined">
            <summary>
            Create a new cef_v8value_t object of type undefined.
            </summary>
        </member>
        <member name="M:CefGlue.Interop.NativeMethods.cef_v8value_create_null">
            <summary>
            Create a new cef_v8value_t object of type null.
            </summary>
        </member>
        <member name="M:CefGlue.Interop.NativeMethods.cef_v8value_create_bool(System.Int32)">
            <summary>
            Create a new cef_v8value_t object of type bool.
            </summary>
        </member>
        <member name="M:CefGlue.Interop.NativeMethods.cef_v8value_create_int(System.Int32)">
            <summary>
            Create a new cef_v8value_t object of type int.
            </summary>
        </member>
        <member name="M:CefGlue.Interop.NativeMethods.cef_v8value_create_uint(System.UInt32)">
            <summary>
            Create a new cef_v8value_t object of type unsigned int.
            </summary>
        </member>
        <member name="M:CefGlue.Interop.NativeMethods.cef_v8value_create_double(System.Double)">
            <summary>
            Create a new cef_v8value_t object of type double.
            </summary>
        </member>
        <member name="M:CefGlue.Interop.NativeMethods.cef_v8value_create_date(CefGlue.Interop.cef_time_t*)">
            <summary>
            Create a new cef_v8value_t object of type Date. This function should
            only be called from within the scope of a cef_v8context_tHandler,
            cef_v8handler_t or cef_v8accessor_t callback, or in combination with
            calling enter() and exit() on a stored cef_v8context_t reference.
            </summary>
        </member>
        <member name="M:CefGlue.Interop.NativeMethods.cef_v8value_create_string(CefGlue.Interop.cef_string_t*)">
            <summary>
            Create a new cef_v8value_t object of type string.
            </summary>
        </member>
        <member name="M:CefGlue.Interop.NativeMethods.cef_v8value_create_object(CefGlue.Interop.cef_v8accessor_t*)">
            <summary>
            Create a new cef_v8value_t object of type object with optional
            accessor. This function should only be called from within the scope
            of a cef_v8context_tHandler, cef_v8handler_t or cef_v8accessor_t
            callback, or in combination with calling enter() and exit() on a
            stored cef_v8context_t reference.
            </summary>
        </member>
        <member name="M:CefGlue.Interop.NativeMethods.cef_v8value_create_array(System.Int32)">
            <summary>
            Create a new cef_v8value_t object of type array with the specified
            |length|. If |length| is negative the returned array will have length
            0. This function should only be called from within the scope of a
            cef_v8context_tHandler, cef_v8handler_t or cef_v8accessor_t callback,
            or in combination with calling enter() and exit() on a stored
            cef_v8context_t reference.
            </summary>
        </member>
        <member name="M:CefGlue.Interop.NativeMethods.cef_v8value_create_function(CefGlue.Interop.cef_string_t*,CefGlue.Interop.cef_v8handler_t*)">
            <summary>
            Create a new cef_v8value_t object of type function. This function
            should only be called from within the scope of a
            cef_v8context_tHandler, cef_v8handler_t or cef_v8accessor_t callback,
            or in combination with calling enter() and exit() on a stored
            cef_v8context_t reference.
            </summary>
        </member>
        <member name="M:CefGlue.Interop.NativeMethods.cef_v8stack_trace_get_current(System.Int32)">
            <summary>
            Returns the stack trace for the currently active context.
            |frame_limit| is the maximum number of frames that will be captured.
            </summary>
        </member>
        <member name="M:CefGlue.Interop.NativeMethods.cef_web_urlrequest_create(CefGlue.Interop.cef_request_t*,CefGlue.Interop.cef_web_urlrequest_client_t*)">
            <summary>
            Create a new CefWebUrlRequest object.
            </summary>
        </member>
        <member name="M:CefGlue.Interop.NativeMethods.cef_xml_reader_create(CefGlue.Interop.cef_stream_reader_t*,CefGlue.Interop.cef_xml_encoding_type_t,CefGlue.Interop.cef_string_t*)">
            <summary>
            Create a new cef_xml_reader_t object. The returned object's functions
            can only be called from the thread that created the object.
            </summary>
        </member>
        <member name="M:CefGlue.Interop.NativeMethods.cef_zip_reader_create(CefGlue.Interop.cef_stream_reader_t*)">
            <summary>
            Create a new cef_zip_reader_t object. The returned object's functions
            can only be called from the thread that created the object.
            </summary>
        </member>
        <member name="M:CefGlue.Interop.NativeMethods.cef_string_multimap_alloc">
            <summary>
            Allocate a new string multimap.
            </summary>
        </member>
        <member name="M:CefGlue.Interop.NativeMethods.cef_string_multimap_size(CefGlue.Interop.cef_string_multimap*)">
            <summary>
            Return the number of elements in the string multimap.
            </summary>
        </member>
        <member name="M:CefGlue.Interop.NativeMethods.cef_string_multimap_find_count(CefGlue.Interop.cef_string_multimap*,CefGlue.Interop.cef_string_t*)">
            <summary>
            Return the number of values with the specified key.
            </summary>
        </member>
        <member name="M:CefGlue.Interop.NativeMethods.cef_string_multimap_enumerate(CefGlue.Interop.cef_string_multimap*,CefGlue.Interop.cef_string_t*,System.Int32,CefGlue.Interop.cef_string_t*)">
            <summary>
            Return the value_index-th value with the specified key.
            </summary>
        </member>
        <member name="M:CefGlue.Interop.NativeMethods.cef_string_multimap_key(CefGlue.Interop.cef_string_multimap*,System.Int32,CefGlue.Interop.cef_string_t*)">
            <summary>
            Return the key at the specified zero-based string multimap index.
            </summary>
        </member>
        <member name="M:CefGlue.Interop.NativeMethods.cef_string_multimap_value(CefGlue.Interop.cef_string_multimap*,System.Int32,CefGlue.Interop.cef_string_t*)">
            <summary>
            Return the value at the specified zero-based string multimap index.
            </summary>
        </member>
        <member name="M:CefGlue.Interop.NativeMethods.cef_string_multimap_append(CefGlue.Interop.cef_string_multimap*,CefGlue.Interop.cef_string_t*,CefGlue.Interop.cef_string_t*)">
            <summary>
            Append a new key/value pair at the end of the string multimap.
            </summary>
        </member>
        <member name="M:CefGlue.Interop.NativeMethods.cef_string_multimap_clear(CefGlue.Interop.cef_string_multimap*)">
            <summary>
            Clear the string multimap.
            </summary>
        </member>
        <member name="M:CefGlue.Interop.NativeMethods.cef_string_multimap_free(CefGlue.Interop.cef_string_multimap*)">
            <summary>
            Free the string multimap.
            </summary>
        </member>
        <member name="M:CefGlue.Interop.NativeMethods.cef_string_list_alloc">
            <summary>
            Allocate a new string list.
            </summary>
            <returns></returns>
        </member>
        <member name="M:CefGlue.Interop.NativeMethods.cef_string_list_size(CefGlue.Interop.cef_string_list*)">
            <summary>
            Return the number of elements in the string list.
            </summary>
            <param name="list"></param>
            <returns></returns>
        </member>
        <member name="M:CefGlue.Interop.NativeMethods.cef_string_list_value(CefGlue.Interop.cef_string_list*,System.Int32,CefGlue.Interop.cef_string_t@)">
            <summary>
            Retrieve the value at the specified zero-based string list index.
            Returns true (1) if the value was successfully retrieved.
            </summary>
            <param name="list"></param>
            <param name="index"></param>
            <param name="value"></param>
            <returns></returns>
            <remarks>This method return string by value (via cef_string_copy).</remarks>
        </member>
        <member name="M:CefGlue.Interop.NativeMethods.cef_string_list_append(CefGlue.Interop.cef_string_list*,CefGlue.Interop.cef_string_t*)">
            <summary>
            Append a new value at the end of the string list.
            </summary>
            <param name="list"></param>
            <param name="value"></param>
        </member>
        <member name="M:CefGlue.Interop.NativeMethods.cef_string_list_clear(CefGlue.Interop.cef_string_list*)">
            <summary>
            Clear the string list.
            </summary>
            <param name="list"></param>
        </member>
        <member name="M:CefGlue.Interop.NativeMethods.cef_string_list_free(CefGlue.Interop.cef_string_list*)">
            <summary>
            Free the string list.
            </summary>
            <param name="list"></param>
            <remarks>Method doen't allow NULLs.</remarks>
        </member>
        <member name="M:CefGlue.Interop.NativeMethods.cef_string_list_copy(CefGlue.Interop.cef_string_list*)">
            <summary>
            Creates a copy of an existing string list.
            </summary>
            <param name="list"></param>
            <returns></returns>
        </member>
        <member name="M:CefGlue.Interop.NativeMethods.cef_string_map_alloc">
            <summary>
            Allocate a new string map.
            </summary>
            <returns></returns>
        </member>
        <member name="M:CefGlue.Interop.NativeMethods.cef_string_map_size(CefGlue.Interop.cef_string_map*)">
            
             Return the number of elements in the string map.
            
        </member>
        <member name="M:CefGlue.Interop.NativeMethods.cef_string_map_find(CefGlue.Interop.cef_string_map*,CefGlue.Interop.cef_string_t*,CefGlue.Interop.cef_string_t*)">
            
             Return the value assigned to the specified key.
            
        </member>
        <member name="M:CefGlue.Interop.NativeMethods.cef_string_map_key(CefGlue.Interop.cef_string_map*,System.Int32,CefGlue.Interop.cef_string_t*)">
            
             Return the key at the specified zero-based string map index.
            
        </member>
        <member name="M:CefGlue.Interop.NativeMethods.cef_string_map_value(CefGlue.Interop.cef_string_map*,System.Int32,CefGlue.Interop.cef_string_t*)">
            
             Return the value at the specified zero-based string map index.
            
        </member>
        <member name="M:CefGlue.Interop.NativeMethods.cef_string_map_append(CefGlue.Interop.cef_string_map*,CefGlue.Interop.cef_string_t*,CefGlue.Interop.cef_string_t*)">
            
             Append a new key/value pair at the end of the string map.
            
        </member>
        <member name="M:CefGlue.Interop.NativeMethods.cef_string_map_clear(CefGlue.Interop.cef_string_map*)">
            
             Clear the string map.
            
        </member>
        <member name="M:CefGlue.Interop.NativeMethods.cef_string_map_free(CefGlue.Interop.cef_string_map*)">
            
             Free the string map.
            
        </member>
        <member name="M:CefGlue.Interop.NativeMethods.cef_string_set(System.Char*,System.Int32,CefGlue.Interop.cef_string_t*,System.Int32)">
            <summary>
            These functions set string values. If |copy| is true (1) the value will be
            copied instead of referenced. It is up to the user to properly manage
            the lifespan of references.
            </summary>
            <remarks>
            CEF_EXPORT int cef_string_utf16_set(const char16_t* src, size_t src_len,
                                                cef_string_utf16_t* output, int copy);
            </remarks>
        </member>
        <member name="M:CefGlue.Interop.NativeMethods.cef_string_clear(CefGlue.Interop.cef_string_t*)">
            <summary>
            These functions clear string values. The structure itself is not freed.
            </summary>
            <param name="str"></param>
            <remarks>
            CEF_EXPORT void cef_string_utf16_clear(cef_string_utf16_t* str);
            </remarks>
        </member>
        <member name="M:CefGlue.Interop.NativeMethods.cef_string_userfree_alloc">
            <summary>
            These functions allocate a new string structure.
            They must be freed by calling the associated free function.
            </summary>
            <remarks>
            CEF_EXPORT cef_string_userfree_utf16_t cef_string_userfree_utf16_alloc();
            </remarks>
        </member>
        <member name="M:CefGlue.Interop.NativeMethods.cef_string_userfree_free(CefGlue.Interop.cef_string_userfree*)">
            <summary>
            These functions free the string structure allocated by the associated alloc function.
            Any string contents will first be cleared.
            </summary>
            <remarks>
            CEF_EXPORT void cef_string_userfree_utf16_free(cef_string_userfree_utf16_t str);
            </remarks>
        </member>
        <member name="T:CefGlue.Interop.WindowStyles">
            <summary>
            Window Styles.
            The following styles can be specified wherever a window style is required. After the control has been created, these styles cannot be modified, except as noted.
            </summary>
        </member>
        <member name="F:CefGlue.Interop.WindowStyles.WS_BORDER">
            <summary>The window has a thin-line border.</summary>
        </member>
        <member name="F:CefGlue.Interop.WindowStyles.WS_CAPTION">
            <summary>The window has a title bar (includes the WS_BORDER style).</summary>
        </member>
        <member name="F:CefGlue.Interop.WindowStyles.WS_CHILD">
            <summary>The window is a child window. A window with this style cannot have a menu bar. This style cannot be used with the WS_POPUP style.</summary>
        </member>
        <member name="F:CefGlue.Interop.WindowStyles.WS_CLIPCHILDREN">
            <summary>Excludes the area occupied by child windows when drawing occurs within the parent window. This style is used when creating the parent window.</summary>
        </member>
        <member name="F:CefGlue.Interop.WindowStyles.WS_CLIPSIBLINGS">
            <summary>
            Clips child windows relative to each other; that is, when a particular child window receives a WM_PAINT message, the WS_CLIPSIBLINGS style clips all other overlapping child windows out of the region of the child window to be updated.
            If WS_CLIPSIBLINGS is not specified and child windows overlap, it is possible, when drawing within the client area of a child window, to draw within the client area of a neighboring child window.
            </summary>
        </member>
        <member name="F:CefGlue.Interop.WindowStyles.WS_DISABLED">
            <summary>The window is initially disabled. A disabled window cannot receive input from the user. To change this after a window has been created, use the EnableWindow function.</summary>
        </member>
        <member name="F:CefGlue.Interop.WindowStyles.WS_DLGFRAME">
            <summary>The window has a border of a style typically used with dialog boxes. A window with this style cannot have a title bar.</summary>
        </member>
        <member name="F:CefGlue.Interop.WindowStyles.WS_GROUP">
            <summary>
            The window is the first control of a group of controls. The group consists of this first control and all controls defined after it, up to the next control with the WS_GROUP style.
            The first control in each group usually has the WS_TABSTOP style so that the user can move from group to group. The user can subsequently change the keyboard focus from one control in the group to the next control in the group by using the direction keys.
            You can turn this style on and off to change dialog box navigation. To change this style after a window has been created, use the SetWindowLong function.
            </summary>
        </member>
        <member name="F:CefGlue.Interop.WindowStyles.WS_HSCROLL">
            <summary>The window has a horizontal scroll bar.</summary>
        </member>
        <member name="F:CefGlue.Interop.WindowStyles.WS_MAXIMIZE">
            <summary>The window is initially maximized.</summary> 
        </member>
        <member name="F:CefGlue.Interop.WindowStyles.WS_MAXIMIZEBOX">
            <summary>The window has a maximize button. Cannot be combined with the WS_EX_CONTEXTHELP style. The WS_SYSMENU style must also be specified.</summary> 
        </member>
        <member name="F:CefGlue.Interop.WindowStyles.WS_MINIMIZE">
            <summary>The window is initially minimized.</summary>
        </member>
        <member name="F:CefGlue.Interop.WindowStyles.WS_MINIMIZEBOX">
            <summary>The window has a minimize button. Cannot be combined with the WS_EX_CONTEXTHELP style. The WS_SYSMENU style must also be specified.</summary>
        </member>
        <member name="F:CefGlue.Interop.WindowStyles.WS_OVERLAPPED">
            <summary>The window is an overlapped window. An overlapped window has a title bar and a border.</summary>
        </member>
        <member name="F:CefGlue.Interop.WindowStyles.WS_OVERLAPPEDWINDOW">
            <summary>The window is an overlapped window.</summary>
        </member>
        <member name="F:CefGlue.Interop.WindowStyles.WS_POPUP">
            <summary>The window is a pop-up window. This style cannot be used with the WS_CHILD style.</summary>
        </member>
        <member name="F:CefGlue.Interop.WindowStyles.WS_POPUPWINDOW">
            <summary>The window is a pop-up window. The WS_CAPTION and WS_POPUPWINDOW styles must be combined to make the window menu visible.</summary>
        </member>
        <member name="F:CefGlue.Interop.WindowStyles.WS_SIZEFRAME">
            <summary>The window has a sizing border.</summary>
        </member>
        <member name="F:CefGlue.Interop.WindowStyles.WS_SYSMENU">
            <summary>The window has a window menu on its title bar. The WS_CAPTION style must also be specified.</summary>
        </member>
        <member name="F:CefGlue.Interop.WindowStyles.WS_TABSTOP">
            <summary>
            The window is a control that can receive the keyboard focus when the user presses the TAB key.
            Pressing the TAB key changes the keyboard focus to the next control with the WS_TABSTOP style.  
            You can turn this style on and off to change dialog box navigation. To change this style after a window has been created, use the SetWindowLong function.
            For user-created windows and modeless dialogs to work with tab stops, alter the message loop to call the IsDialogMessage function.
            </summary>
        </member>
        <member name="F:CefGlue.Interop.WindowStyles.WS_VISIBLE">
            <summary>The window is initially visible. This style can be turned on and off by using the ShowWindow or SetWindowPos function.</summary>
        </member>
        <member name="F:CefGlue.Interop.WindowStyles.WS_VSCROLL">
            <summary>The window has a vertical scroll bar.</summary>
        </member>
        <member name="F:CefGlue.Interop.WindowStylesEx.WS_EX_ACCEPTFILES">
            <summary>
            Specifies that a window created with this style accepts drag-drop files.
            </summary>
        </member>
        <member name="F:CefGlue.Interop.WindowStylesEx.WS_EX_APPWINDOW">
            <summary>
            Forces a top-level window onto the taskbar when the window is visible.
            </summary>
        </member>
        <member name="F:CefGlue.Interop.WindowStylesEx.WS_EX_CLIENTEDGE">
            <summary>
            Specifies that a window has a border with a sunken edge.
            </summary>
        </member>
        <member name="F:CefGlue.Interop.WindowStylesEx.WS_EX_COMPOSITED">
            <summary>
            Windows XP: Paints all descendants of a window in bottom-to-top painting order using double-buffering. For more information, see Remarks. This cannot be used if the window has a class style of either CS_OWNDC or CS_CLASSDC. 
            </summary>
        </member>
        <member name="F:CefGlue.Interop.WindowStylesEx.WS_EX_CONTEXTHELP">
            <summary>
            Includes a question mark in the title bar of the window. When the user clicks the question mark, the cursor changes to a question mark with a pointer. If the user then clicks a child window, the child receives a WM_HELP message. The child window should pass the message to the parent window procedure, which should call the WinHelp function using the HELP_WM_HELP command. The Help application displays a pop-up window that typically contains help for the child window.
            WS_EX_CONTEXTHELP cannot be used with the WS_MAXIMIZEBOX or WS_MINIMIZEBOX styles.
            </summary>
        </member>
        <member name="F:CefGlue.Interop.WindowStylesEx.WS_EX_CONTROLPARENT">
            <summary>
            The window itself contains child windows that should take part in dialog box navigation. If this style is specified, the dialog manager recurses into children of this window when performing navigation operations such as handling the TAB key, an arrow key, or a keyboard mnemonic.
            </summary>
        </member>
        <member name="F:CefGlue.Interop.WindowStylesEx.WS_EX_DLGMODALFRAME">
            <summary>
            Creates a window that has a double border; the window can, optionally, be created with a title bar by specifying the WS_CAPTION style in the dwStyle parameter.
            </summary>
        </member>
        <member name="F:CefGlue.Interop.WindowStylesEx.WS_EX_LAYERED">
            <summary>
            Windows 2000/XP: Creates a layered window. Note that this cannot be used for child windows. Also, this cannot be used if the window has a class style of either CS_OWNDC or CS_CLASSDC. 
            </summary>
        </member>
        <member name="F:CefGlue.Interop.WindowStylesEx.WS_EX_LAYOUTRTL">
            <summary>
            Arabic and Hebrew versions of Windows 98/Me, Windows 2000/XP: Creates a window whose horizontal origin is on the right edge. Increasing horizontal values advance to the left. 
            </summary>
        </member>
        <member name="F:CefGlue.Interop.WindowStylesEx.WS_EX_LEFT">
            <summary>
            Creates a window that has generic left-aligned properties. This is the default.
            </summary>
        </member>
        <member name="F:CefGlue.Interop.WindowStylesEx.WS_EX_LEFTSCROLLBAR">
            <summary>
            If the shell language is Hebrew, Arabic, or another language that supports reading order alignment, the vertical scroll bar (if present) is to the left of the client area. For other languages, the style is ignored.
            </summary>
        </member>
        <member name="F:CefGlue.Interop.WindowStylesEx.WS_EX_LTRREADING">
            <summary>
            The window text is displayed using left-to-right reading-order properties. This is the default.
            </summary>
        </member>
        <member name="F:CefGlue.Interop.WindowStylesEx.WS_EX_MDICHILD">
            <summary>
            Creates a multiple-document interface (MDI) child window.
            </summary>
        </member>
        <member name="F:CefGlue.Interop.WindowStylesEx.WS_EX_NOACTIVATE">
            <summary>
            Windows 2000/XP: A top-level window created with this style does not become the foreground window when the user clicks it. The system does not bring this window to the foreground when the user minimizes or closes the foreground window. 
            To activate the window, use the SetActiveWindow or SetForegroundWindow function.
            The window does not appear on the taskbar by default. To force the window to appear on the taskbar, use the WS_EX_APPWINDOW style.
            </summary>
        </member>
        <member name="F:CefGlue.Interop.WindowStylesEx.WS_EX_NOINHERITLAYOUT">
            <summary>
            Windows 2000/XP: A window created with this style does not pass its window layout to its child windows.
            </summary>
        </member>
        <member name="F:CefGlue.Interop.WindowStylesEx.WS_EX_NOPARENTNOTIFY">
            <summary>
            Specifies that a child window created with this style does not send the WM_PARENTNOTIFY message to its parent window when it is created or destroyed.
            </summary>
        </member>
        <member name="F:CefGlue.Interop.WindowStylesEx.WS_EX_OVERLAPPEDWINDOW">
            <summary>
            Combines the WS_EX_CLIENTEDGE and WS_EX_WINDOWEDGE styles.
            </summary>
        </member>
        <member name="F:CefGlue.Interop.WindowStylesEx.WS_EX_PALETTEWINDOW">
            <summary>
            Combines the WS_EX_WINDOWEDGE, WS_EX_TOOLWINDOW, and WS_EX_TOPMOST styles.
            </summary>
        </member>
        <member name="F:CefGlue.Interop.WindowStylesEx.WS_EX_RIGHT">
            <summary>
            The window has generic "right-aligned" properties. This depends on the window class. This style has an effect only if the shell language is Hebrew, Arabic, or another language that supports reading-order alignment; otherwise, the style is ignored.
            Using the WS_EX_RIGHT style for static or edit controls has the same effect as using the SS_RIGHT or ES_RIGHT style, respectively. Using this style with button controls has the same effect as using BS_RIGHT and BS_RIGHTBUTTON styles.
            </summary>
        </member>
        <member name="F:CefGlue.Interop.WindowStylesEx.WS_EX_RIGHTSCROLLBAR">
            <summary>
            Vertical scroll bar (if present) is to the right of the client area. This is the default.
            </summary>
        </member>
        <member name="F:CefGlue.Interop.WindowStylesEx.WS_EX_RTLREADING">
            <summary>
            If the shell language is Hebrew, Arabic, or another language that supports reading-order alignment, the window text is displayed using right-to-left reading-order properties. For other languages, the style is ignored.
            </summary>
        </member>
        <member name="F:CefGlue.Interop.WindowStylesEx.WS_EX_STATICEDGE">
            <summary>
            Creates a window with a three-dimensional border style intended to be used for items that do not accept user input.
            </summary>
        </member>
        <member name="F:CefGlue.Interop.WindowStylesEx.WS_EX_TOOLWINDOW">
            <summary>
            Creates a tool window; that is, a window intended to be used as a floating toolbar. A tool window has a title bar that is shorter than a normal title bar, and the window title is drawn using a smaller font. A tool window does not appear in the taskbar or in the dialog that appears when the user presses ALT+TAB. If a tool window has a system menu, its icon is not displayed on the title bar. However, you can display the system menu by right-clicking or by typing ALT+SPACE. 
            </summary>
        </member>
        <member name="F:CefGlue.Interop.WindowStylesEx.WS_EX_TOPMOST">
            <summary>
            Specifies that a window created with this style should be placed above all non-topmost windows and should stay above them, even when the window is deactivated. To add or remove this style, use the SetWindowPos function.
            </summary>
        </member>
        <member name="F:CefGlue.Interop.WindowStylesEx.WS_EX_TRANSPARENT">
            <summary>
            Specifies that a window created with this style should not be painted until siblings beneath the window (that were created by the same thread) have been painted. The window appears transparent because the bits of underlying sibling windows have already been painted.
            To achieve transparency without these restrictions, use the SetWindowRgn function.
            </summary>
        </member>
        <member name="F:CefGlue.Interop.WindowStylesEx.WS_EX_WINDOWEDGE">
            <summary>
            Specifies that a window has a border with a raised edge.
            </summary>
        </member>
        <member name="T:CefGlue.Interop.cef_app_t">
            <summary>
            Implement this structure to provide handler implementations. Methods will
            be called on the thread indicated.
            </summary>
        </member>
        <member name="F:CefGlue.Interop.cef_app_t.base">
            <summary>
            Base structure.
            </summary>
        </member>
        <member name="F:CefGlue.Interop.cef_app_t.get_resource_bundle_handler">
            <summary>
            Return the handler for resource bundle events. If
            CefSettings.pack_loading_disabled is true (1) a handler must be
            returned. If no handler is returned resources will be loaded from
            pack files. This function is called on multiple threads.
            </summary>
        </member>
        <member name="F:CefGlue.Interop.cef_app_t.get_proxy_handler">
            <summary>
            Return the handler for proxy events. If not handler is returned the
            default system handler will be used. This function is called on the
            IO thread.
            </summary>
        </member>
        <member name="T:CefGlue.Interop.cef_browser_t">
            <summary>
            Structure used to represent a browser window. The functions of this
            structure may be called on any thread unless otherwise indicated in the
            comments.
            </summary>
        </member>
        <member name="F:CefGlue.Interop.cef_browser_t.base">
            <summary>
            Base structure.
            </summary>
        </member>
        <member name="F:CefGlue.Interop.cef_browser_t.parent_window_will_close">
            <summary>
            Call this function before destroying a contained browser window. This
            function performs any internal cleanup that may be needed before the
            browser window is destroyed.
            </summary>
        </member>
        <member name="F:CefGlue.Interop.cef_browser_t.close_browser">
            <summary>
            Closes this browser window.
            </summary>
        </member>
        <member name="F:CefGlue.Interop.cef_browser_t.can_go_back">
            <summary>
            Returns true (1) if the browser can navigate backwards.
            </summary>
        </member>
        <member name="F:CefGlue.Interop.cef_browser_t.go_back">
            <summary>
            Navigate backwards.
            </summary>
        </member>
        <member name="F:CefGlue.Interop.cef_browser_t.can_go_forward">
            <summary>
            Returns true (1) if the browser can navigate forwards.
            </summary>
        </member>
        <member name="F:CefGlue.Interop.cef_browser_t.go_forward">
            <summary>
            Navigate forwards.
            </summary>
        </member>
        <member name="F:CefGlue.Interop.cef_browser_t.reload">
            <summary>
            Reload the current page.
            </summary>
        </member>
        <member name="F:CefGlue.Interop.cef_browser_t.reload_ignore_cache">
            <summary>
            Reload the current page ignoring any cached data.
            </summary>
        </member>
        <member name="F:CefGlue.Interop.cef_browser_t.stop_load">
            <summary>
            Stop loading the page.
            </summary>
        </member>
        <member name="F:CefGlue.Interop.cef_browser_t.set_focus">
            <summary>
            Set focus for the browser window. If |enable| is true (1) focus will
            be set to the window. Otherwise, focus will be removed.
            </summary>
        </member>
        <member name="F:CefGlue.Interop.cef_browser_t.get_window_handle">
            <summary>
            Retrieve the window handle for this browser.
            </summary>
        </member>
        <member name="F:CefGlue.Interop.cef_browser_t.get_opener_window_handle">
            <summary>
            Retrieve the window handle of the browser that opened this browser.
            Will return NULL for non-popup windows. This function can be used in
            combination with custom handling of modal windows.
            </summary>
        </member>
        <member name="F:CefGlue.Interop.cef_browser_t.is_popup">
            <summary>
            Returns true (1) if the window is a popup window.
            </summary>
        </member>
        <member name="F:CefGlue.Interop.cef_browser_t.has_document">
            Returns true (1) if a document has been loaded in the browser.
        </member>
        <member name="F:CefGlue.Interop.cef_browser_t.get_client">
            <summary>
            Returns the client for this browser.
            </summary>
        </member>
        <member name="F:CefGlue.Interop.cef_browser_t.get_main_frame">
            <summary>
            Returns the main (top-level) frame for the browser window.
            </summary>
        </member>
        <member name="F:CefGlue.Interop.cef_browser_t.get_focused_frame">
            <summary>
            Returns the focused frame for the browser window. This function
            should only be called on the UI thread.
            </summary>
        </member>
        <member name="F:CefGlue.Interop.cef_browser_t.get_frame">
            <summary>
            Returns the frame with the specified name, or NULL if not found. This
            function should only be called on the UI thread.
            </summary>
        </member>
        <member name="F:CefGlue.Interop.cef_browser_t.get_frame_names">
            <summary>
            Returns the names of all existing frames. This function should only
            be called on the UI thread.
            </summary>
        </member>
        <member name="F:CefGlue.Interop.cef_browser_t.find">
            <summary>
            Search for |searchText|. |identifier| can be used to have multiple
            searches running simultaniously. |forward| indicates whether to
            search forward or backward within the page. |matchCase| indicates
            whether the search should be case-sensitive. |findNext| indicates
            whether this is the first request or a follow-up.
            </summary>
        </member>
        <member name="F:CefGlue.Interop.cef_browser_t.stop_finding">
            <summary>
            Cancel all searches that are currently going on.
            </summary>
        </member>
        <member name="F:CefGlue.Interop.cef_browser_t.get_zoom_level">
            <summary>
            Get the current zoom level. The default zoom level is 0.0. This
            function can only be called on the UI thread.
            </summary>
        </member>
        <member name="F:CefGlue.Interop.cef_browser_t.set_zoom_level">
            <summary>
            Change the zoom level to the specified value. Specify 0.0 to reset
            the zoom level. The change will be applied asynchronously on the UI
            thread.
            </summary>
        </member>
        <member name="F:CefGlue.Interop.cef_browser_t.clear_history">
            <summary>
            Clear the back/forward browsing history.
            </summary>
        </member>
        <member name="F:CefGlue.Interop.cef_browser_t.show_dev_tools">
            <summary>
            Open developer tools in its own window.
            </summary>
        </member>
        <member name="F:CefGlue.Interop.cef_browser_t.close_dev_tools">
            <summary>
            Explicitly close the developer tools window if one exists for this
            browser instance.
            </summary>
        </member>
        <member name="F:CefGlue.Interop.cef_browser_t.is_window_rendering_disabled">
            <summary>
            Returns true (1) if window rendering is disabled.
            </summary>
        </member>
        <member name="F:CefGlue.Interop.cef_browser_t.get_size">
            <summary>
            Get the size of the specified element. This function should only be
            called on the UI thread.
            </summary>
        </member>
        <member name="F:CefGlue.Interop.cef_browser_t.set_size">
            <summary>
            Set the size of the specified element. This function is only used
            when window rendering is disabled.
            </summary>
        </member>
        <member name="F:CefGlue.Interop.cef_browser_t.is_popup_visible">
            <summary>
            Returns true (1) if a popup is currently visible. This function
            should only be called on the UI thread.
            </summary>
        </member>
        <member name="F:CefGlue.Interop.cef_browser_t.hide_popup">
            <summary>
            Hide the currently visible popup, if any.
            </summary>
        </member>
        <member name="F:CefGlue.Interop.cef_browser_t.invalidate">
            <summary>
            Invalidate the |dirtyRect| region of the view. This function is only
            used when window rendering is disabled and will result in a call to
            HandlePaint().
            </summary>
        </member>
        <member name="F:CefGlue.Interop.cef_browser_t.get_image">
            <summary>
            Get the raw image data contained in the specified element without
            performing validation. The specified |width| and |height| dimensions
            must match the current element size. On Windows |buffer| must be
            width*height*4 bytes in size and represents a BGRA image with an
            upper-left origin. This function should only be called on the UI
            thread.
            </summary>
        </member>
        <member name="F:CefGlue.Interop.cef_browser_t.send_key_event">
            <summary>
            Send a key event to the browser.
            </summary>
        </member>
        <member name="F:CefGlue.Interop.cef_browser_t.send_mouse_click_event">
            <summary>
            Send a mouse click event to the browser. The |x| and |y| coordinates
            are relative to the upper-left corner of the view.
            </summary>
        </member>
        <member name="F:CefGlue.Interop.cef_browser_t.send_mouse_move_event">
            <summary>
            Send a mouse move event to the browser. The |x| and |y| coordinates
            are relative to the upper-left corner of the view.
            </summary>
        </member>
        <member name="F:CefGlue.Interop.cef_browser_t.send_mouse_wheel_event">
            <summary>
            Send a mouse wheel event to the browser. The |x| and |y| coordinates
            are relative to the upper-left corner of the view. The |deltaX| and
            |deltaY| values represent the movement delta in the X and Y
            directions respectively.
            </summary>
        </member>
        <member name="F:CefGlue.Interop.cef_browser_t.send_focus_event">
            <summary>
            Send a focus event to the browser.
            </summary>
        </member>
        <member name="F:CefGlue.Interop.cef_browser_t.send_capture_lost_event">
            <summary>
            Send a capture lost event to the browser.
            </summary>
        </member>
        <member name="T:CefGlue.Interop.cef_command_line_t">
            <summary>
            Structure used to create and/or parse command line arguments. Arguments
            with '--', '-' and, on Windows, '/' prefixes are considered switches.
            Switches will always precede any arguments without switch prefixes.
            Switches can optionally have a value specified using the '=' delimiter
            (e.g. "-switch=value"). An argument of "--" will terminate switch parsing
            with all subsequent tokens, regardless of prefix, being interpreted as
            non-switch arguments. Switch names are considered case-insensitive. This
            structure can be used before cef_initialize() is called.
            </summary>
        </member>
        <member name="F:CefGlue.Interop.cef_command_line_t.base">
            <summary>
            Base structure.
            </summary>
        </member>
        <member name="F:CefGlue.Interop.cef_command_line_t.init_from_argv">
            <summary>
            Initialize the command line with the specified |argc| and |argv|
            values. The first argument must be the name of the program. This
            function is only supported on non-Windows platforms.
            </summary>
        </member>
        <member name="F:CefGlue.Interop.cef_command_line_t.init_from_string">
            <summary>
            Initialize the command line with the string returned by calling
            GetCommandLineW(). This function is only supported on Windows.
            </summary>
        </member>
        <member name="F:CefGlue.Interop.cef_command_line_t.get_command_line_string">
            <summary>
            Constructs and returns the represented command line string. Use this
            function cautiously because quoting behavior is unclear.
            </summary>
            <remarks>
            The resulting string must be freed by calling cef_string_userfree_free().
            </remarks>
        </member>
        <member name="F:CefGlue.Interop.cef_command_line_t.get_program">
            <summary>
            Get the program part of the command line string (the first item).
            </summary>
            <remarks>
            The resulting string must be freed by calling cef_string_userfree_free().
            </remarks>
        </member>
        <member name="F:CefGlue.Interop.cef_command_line_t.set_program">
            <summary>
            Set the program part of the command line string (the first item).
            </summary>
        </member>
        <member name="F:CefGlue.Interop.cef_command_line_t.has_switches">
            <summary>
            Returns true (1) if the command line has switches.
            </summary>
        </member>
        <member name="F:CefGlue.Interop.cef_command_line_t.has_switch">
            <summary>
            Returns true (1) if the command line contains the given switch.
            </summary>
        </member>
        <member name="F:CefGlue.Interop.cef_command_line_t.get_switch_value">
            <summary>
            Returns the value associated with the given switch. If the switch has
            no value or isn't present this function returns the NULL string.
            </summary>
            <remarks>
            The resulting string must be freed by calling cef_string_userfree_free().
            </remarks>
        </member>
        <member name="F:CefGlue.Interop.cef_command_line_t.get_switches">
            <summary>
            Returns the map of switch names and values. If a switch has no value
            an NULL string is returned.
            </summary>
        </member>
        <member name="F:CefGlue.Interop.cef_command_line_t.append_switch">
            <summary>
            Add a switch to the end of the command line. If the switch has no
            value pass an NULL value string.
            </summary>
        </member>
        <member name="F:CefGlue.Interop.cef_command_line_t.append_switch_with_value">
            <summary>
            Add a switch with the specified value to the end of the command line.
            </summary>
        </member>
        <member name="F:CefGlue.Interop.cef_command_line_t.has_arguments">
            <summary>
            True if there are remaining command line arguments.
            </summary>
        </member>
        <member name="F:CefGlue.Interop.cef_command_line_t.get_arguments">
            <summary>
            Get the remaining command line arguments.
            </summary>
        </member>
        <member name="F:CefGlue.Interop.cef_command_line_t.append_argument">
            <summary>
            Add an argument to the end of the command line.
            </summary>
        </member>
        <member name="T:CefGlue.Interop.cef_cookie_manager_t">
            <summary>
            Structure used for managing cookies. The functions of this structure may
            be called on any thread unless otherwise indicated.
            </summary>
        </member>
        <member name="F:CefGlue.Interop.cef_cookie_manager_t.base">
            <summary>
            Base structure.
            </summary>
        </member>
        <member name="F:CefGlue.Interop.cef_cookie_manager_t.set_supported_schemes">
            <summary>
            Set the schemes supported by this manager. By default only "http" and
            "https" schemes are supported. Must be called before any cookies are
            accessed.
            </summary>
        </member>
        <member name="F:CefGlue.Interop.cef_cookie_manager_t.visit_all_cookies">
            <summary>
            Visit all cookies. The returned cookies are ordered by longest path,
            then by earliest creation date. Returns false (0) if cookies cannot
            be accessed.
            </summary>
        </member>
        <member name="F:CefGlue.Interop.cef_cookie_manager_t.visit_url_cookies">
            <summary>
            Visit a subset of cookies. The results are filtered by the given url
            scheme, host, domain and path. If |includeHttpOnly| is true (1) HTTP-
            only cookies will also be included in the results. The returned
            cookies are ordered by longest path, then by earliest creation date.
            Returns false (0) if cookies cannot be accessed.
            </summary>
        </member>
        <member name="F:CefGlue.Interop.cef_cookie_manager_t.set_cookie">
            <summary>
            Sets a cookie given a valid URL and explicit user-provided cookie
            attributes. This function expects each attribute to be well-formed.
            It will check for disallowed characters (e.g. the ';' character is
            disallowed within the cookie value attribute) and will return false
            (0) without setting the cookie if such characters are found. This
            function must be called on the IO thread.
            </summary>
        </member>
        <member name="F:CefGlue.Interop.cef_cookie_manager_t.delete_cookies">
            <summary>
            Delete all cookies that match the specified parameters. If both |url|
            and values |cookie_name| are specified all host and domain cookies
            matching both will be deleted. If only |url| is specified all host
            cookies (but not domain cookies) irrespective of path will be
            deleted. If |url| is NULL all cookies for all hosts and domains will
            be deleted. Returns false (0) if a non- NULL invalid URL is specified
            or if cookies cannot be accessed. This function must be called on the
            IO thread.
            </summary>
        </member>
        <member name="F:CefGlue.Interop.cef_cookie_manager_t.set_storage_path">
            <summary>
            Sets the directory path that will be used for storing cookie data. If
            |path| is NULL data will be stored in memory only. Returns false (0)
            if cookies cannot be accessed.
            </summary>
        </member>
        <member name="T:CefGlue.Interop.cef_domdocument_t">
            <summary>
            Structure used to represent a DOM document. The functions of this
            structure should only be called on the UI thread.
            </summary>
        </member>
        <member name="F:CefGlue.Interop.cef_domdocument_t.base">
            <summary>
            Base structure.
            </summary>
        </member>
        <member name="F:CefGlue.Interop.cef_domdocument_t.get_type">
            <summary>
            Returns the document type.
            </summary>
        </member>
        <member name="F:CefGlue.Interop.cef_domdocument_t.get_document">
            <summary>
            Returns the root document node.
            </summary>
        </member>
        <member name="F:CefGlue.Interop.cef_domdocument_t.get_body">
            <summary>
            Returns the BODY node of an HTML document.
            </summary>
        </member>
        <member name="F:CefGlue.Interop.cef_domdocument_t.get_head">
            <summary>
            Returns the HEAD node of an HTML document.
            </summary>
        </member>
        <member name="F:CefGlue.Interop.cef_domdocument_t.get_title">
            <summary>
            Returns the title of an HTML document.
            </summary>
            <remarks>
            The resulting string must be freed by calling cef_string_userfree_free().
            </remarks>
        </member>
        <member name="F:CefGlue.Interop.cef_domdocument_t.get_element_by_id">
            <summary>
            Returns the document element with the specified ID value.
            </summary>
        </member>
        <member name="F:CefGlue.Interop.cef_domdocument_t.get_focused_node">
            <summary>
            Returns the node that currently has keyboard focus.
            </summary>
        </member>
        <member name="F:CefGlue.Interop.cef_domdocument_t.has_selection">
            <summary>
            Returns true (1) if a portion of the document is selected.
            </summary>
        </member>
        <member name="F:CefGlue.Interop.cef_domdocument_t.get_selection_start_node">
            <summary>
            Returns the selection start node.
            </summary>
        </member>
        <member name="F:CefGlue.Interop.cef_domdocument_t.get_selection_start_offset">
            <summary>
            Returns the selection offset within the start node.
            </summary>
        </member>
        <member name="F:CefGlue.Interop.cef_domdocument_t.get_selection_end_node">
            <summary>
            Returns the selection end node.
            </summary>
        </member>
        <member name="F:CefGlue.Interop.cef_domdocument_t.get_selection_end_offset">
            <summary>
            Returns the selection offset within the end node.
            </summary>
        </member>
        <member name="F:CefGlue.Interop.cef_domdocument_t.get_selection_as_markup">
            <summary>
            Returns the contents of this selection as markup.
            </summary>
            <remarks>
            The resulting string must be freed by calling cef_string_userfree_free().
            </remarks>
        </member>
        <member name="F:CefGlue.Interop.cef_domdocument_t.get_selection_as_text">
            <summary>
            Returns the contents of this selection as text.
            </summary>
            <remarks>
            The resulting string must be freed by calling cef_string_userfree_free().
            </remarks>
        </member>
        <member name="F:CefGlue.Interop.cef_domdocument_t.get_base_url">
            <summary>
            Returns the base URL for the document.
            </summary>
            <remarks>
            The resulting string must be freed by calling cef_string_userfree_free().
            </remarks>
        </member>
        <member name="F:CefGlue.Interop.cef_domdocument_t.get_complete_url">
            <summary>
            Returns a complete URL based on the document base URL and the
            specified partial URL.
            </summary>
            <remarks>
            The resulting string must be freed by calling cef_string_userfree_free().
            </remarks>
        </member>
        <member name="T:CefGlue.Interop.cef_domnode_t">
            <summary>
            Structure used to represent a DOM node. The functions of this structure
            should only be called on the UI thread.
            </summary>
        </member>
        <member name="F:CefGlue.Interop.cef_domnode_t.base">
            <summary>
            Base structure.
            </summary>
        </member>
        <member name="F:CefGlue.Interop.cef_domnode_t.get_type">
            <summary>
            Returns the type for this node.
            </summary>
        </member>
        <member name="F:CefGlue.Interop.cef_domnode_t.is_text">
            <summary>
            Returns true (1) if this is a text node.
            </summary>
        </member>
        <member name="F:CefGlue.Interop.cef_domnode_t.is_element">
            <summary>
            Returns true (1) if this is an element node.
            </summary>
        </member>
        <member name="F:CefGlue.Interop.cef_domnode_t.is_form_control_element">
            <summary>
            Returns true (1) if this is a form control element node.
            </summary>
        </member>
        <member name="F:CefGlue.Interop.cef_domnode_t.get_form_control_element_type">
            <summary>
            Returns the type of this form control element node.
            </summary>
            <remarks>
            The resulting string must be freed by calling cef_string_userfree_free().
            </remarks>
        </member>
        <member name="F:CefGlue.Interop.cef_domnode_t.is_same">
            <summary>
            Returns true (1) if this object is pointing to the same handle as
            |that| object.
            </summary>
        </member>
        <member name="F:CefGlue.Interop.cef_domnode_t.get_name">
            <summary>
            Returns the name of this node.
            </summary>
            <remarks>
            The resulting string must be freed by calling cef_string_userfree_free().
            </remarks>
        </member>
        <member name="F:CefGlue.Interop.cef_domnode_t.get_value">
            <summary>
            Returns the value of this node.
            </summary>
            <remarks>
            The resulting string must be freed by calling cef_string_userfree_free().
            </remarks>
        </member>
        <member name="F:CefGlue.Interop.cef_domnode_t.set_value">
            <summary>
            Set the value of this node. Returns true (1) on success.
            </summary>
        </member>
        <member name="F:CefGlue.Interop.cef_domnode_t.get_as_markup">
            <summary>
            Returns the contents of this node as markup.
            </summary>
            <remarks>
            The resulting string must be freed by calling cef_string_userfree_free().
            </remarks>
        </member>
        <member name="F:CefGlue.Interop.cef_domnode_t.get_document">
            <summary>
            Returns the document associated with this node.
            </summary>
        </member>
        <member name="F:CefGlue.Interop.cef_domnode_t.get_parent">
            <summary>
            Returns the parent node.
            </summary>
        </member>
        <member name="F:CefGlue.Interop.cef_domnode_t.get_previous_sibling">
            <summary>
            Returns the previous sibling node.
            </summary>
        </member>
        <member name="F:CefGlue.Interop.cef_domnode_t.get_next_sibling">
            <summary>
            Returns the next sibling node.
            </summary>
        </member>
        <member name="F:CefGlue.Interop.cef_domnode_t.has_children">
            <summary>
            Returns true (1) if this node has child nodes.
            </summary>
        </member>
        <member name="F:CefGlue.Interop.cef_domnode_t.get_first_child">
            <summary>
            Return the first child node.
            </summary>
        </member>
        <member name="F:CefGlue.Interop.cef_domnode_t.get_last_child">
            <summary>
            Returns the last child node.
            </summary>
        </member>
        <member name="F:CefGlue.Interop.cef_domnode_t.add_event_listener">
            <summary>
            Add an event listener to this node for the specified event type. If
            |useCapture| is true (1) then this listener will be considered a
            capturing listener. Capturing listeners will recieve all events of
            the specified type before the events are dispatched to any other
            event targets beneath the current node in the tree. Events which are
            bubbling upwards through the tree will not trigger a capturing
            listener. Separate calls to this function can be used to register the
            same listener with and without capture. See WebCore/dom/EventNames.h
            for the list of supported event types.
            </summary>
        </member>
        <member name="F:CefGlue.Interop.cef_domnode_t.get_element_tag_name">
            <summary>
            Returns the tag name of this element.
            </summary>
            <remarks>
            The resulting string must be freed by calling cef_string_userfree_free().
            </remarks>
        </member>
        <member name="F:CefGlue.Interop.cef_domnode_t.has_element_attributes">
            <summary>
            Returns true (1) if this element has attributes.
            </summary>
        </member>
        <member name="F:CefGlue.Interop.cef_domnode_t.has_element_attribute">
            <summary>
            Returns true (1) if this element has an attribute named |attrName|.
            </summary>
        </member>
        <member name="F:CefGlue.Interop.cef_domnode_t.get_element_attribute">
            <summary>
            Returns the element attribute named |attrName|.
            </summary>
            <remarks>
            The resulting string must be freed by calling cef_string_userfree_free().
            </remarks>
        </member>
        <member name="F:CefGlue.Interop.cef_domnode_t.get_element_attributes">
            <summary>
            Returns a map of all element attributes.
            </summary>
        </member>
        <member name="F:CefGlue.Interop.cef_domnode_t.set_element_attribute">
            <summary>
            Set the value for the element attribute named |attrName|. Returns
            true (1) on success.
            </summary>
        </member>
        <member name="F:CefGlue.Interop.cef_domnode_t.get_element_inner_text">
            <summary>
            Returns the inner text of the element.
            </summary>
            <remarks>
            The resulting string must be freed by calling cef_string_userfree_free().
            </remarks>
        </member>
        <member name="T:CefGlue.Interop.cef_domevent_t">
            <summary>
            Structure used to represent a DOM event. The functions of this structure
            should only be called on the UI thread.
            </summary>
        </member>
        <member name="F:CefGlue.Interop.cef_domevent_t.base">
            <summary>
            Base structure.
            </summary>
        </member>
        <member name="F:CefGlue.Interop.cef_domevent_t.get_type">
            <summary>
            Returns the event type.
            </summary>
            <remarks>
            The resulting string must be freed by calling cef_string_userfree_free().
            </remarks>
        </member>
        <member name="F:CefGlue.Interop.cef_domevent_t.get_category">
            <summary>
            Returns the event category.
            </summary>
        </member>
        <member name="F:CefGlue.Interop.cef_domevent_t.get_phase">
            <summary>
            Returns the event processing phase.
            </summary>
        </member>
        <member name="F:CefGlue.Interop.cef_domevent_t.can_bubble">
            <summary>
            Returns true (1) if the event can bubble up the tree.
            </summary>
        </member>
        <member name="F:CefGlue.Interop.cef_domevent_t.can_cancel">
            <summary>
            Returns true (1) if the event can be canceled.
            </summary>
        </member>
        <member name="F:CefGlue.Interop.cef_domevent_t.get_document">
            <summary>
            Returns the document associated with this event.
            </summary>
        </member>
        <member name="F:CefGlue.Interop.cef_domevent_t.get_target">
            <summary>
            Returns the target of the event.
            </summary>
        </member>
        <member name="F:CefGlue.Interop.cef_domevent_t.get_current_target">
            <summary>
            Returns the current target of the event.
            </summary>
        </member>
        <member name="T:CefGlue.Interop.cef_drag_data_t">
            <summary>
            Structure used to represent drag data. The functions of this structure
            may be called on any thread.
            </summary>
        </member>
        <member name="F:CefGlue.Interop.cef_drag_data_t.base">
            <summary>
            Base structure.
            </summary>
        </member>
        <member name="F:CefGlue.Interop.cef_drag_data_t.is_link">
            <summary>
            Returns true (1) if the drag data is a link.
            </summary>
        </member>
        <member name="F:CefGlue.Interop.cef_drag_data_t.is_fragment">
            <summary>
            Returns true (1) if the drag data is a text or html fragment.
            </summary>
        </member>
        <member name="F:CefGlue.Interop.cef_drag_data_t.is_file">
            <summary>
            Returns true (1) if the drag data is a file.
            </summary>
        </member>
        <member name="F:CefGlue.Interop.cef_drag_data_t.get_link_url">
            <summary>
            Return the link URL that is being dragged.
            </summary>
            <remarks>
            The resulting string must be freed by calling cef_string_userfree_free().
            </remarks>
        </member>
        <member name="F:CefGlue.Interop.cef_drag_data_t.get_link_title">
            <summary>
            Return the title associated with the link being dragged.
            </summary>
            <remarks>
            The resulting string must be freed by calling cef_string_userfree_free().
            </remarks>
        </member>
        <member name="F:CefGlue.Interop.cef_drag_data_t.get_link_metadata">
            <summary>
            Return the metadata, if any, associated with the link being dragged.
            </summary>
            <remarks>
            The resulting string must be freed by calling cef_string_userfree_free().
            </remarks>
        </member>
        <member name="F:CefGlue.Interop.cef_drag_data_t.get_fragment_text">
            <summary>
            Return the plain text fragment that is being dragged.
            </summary>
            <remarks>
            The resulting string must be freed by calling cef_string_userfree_free().
            </remarks>
        </member>
        <member name="F:CefGlue.Interop.cef_drag_data_t.get_fragment_html">
            <summary>
            Return the text/html fragment that is being dragged.
            </summary>
            <remarks>
            The resulting string must be freed by calling cef_string_userfree_free().
            </remarks>
        </member>
        <member name="F:CefGlue.Interop.cef_drag_data_t.get_fragment_base_url">
            <summary>
            Return the base URL that the fragment came from. This value is used
            for resolving relative URLs and may be NULL.
            </summary>
            <remarks>
            The resulting string must be freed by calling cef_string_userfree_free().
            </remarks>
        </member>
        <member name="F:CefGlue.Interop.cef_drag_data_t.get_file_name">
            <summary>
            Return the name of the file being dragged out of the browser window.
            </summary>
            <remarks>
            The resulting string must be freed by calling cef_string_userfree_free().
            </remarks>
        </member>
        <member name="F:CefGlue.Interop.cef_drag_data_t.get_file_names">
            <summary>
            Retrieve the list of file names that are being dragged into the
            browser window.
            </summary>
        </member>
        <member name="T:CefGlue.Interop.cef_frame_t">
            <summary>
            Structure used to represent a frame in the browser window. The functions
            of this structure may be called on any thread unless otherwise indicated
            in the comments.
            </summary>
        </member>
        <member name="F:CefGlue.Interop.cef_frame_t.base">
            <summary>
            Base structure.
            </summary>
        </member>
        <member name="F:CefGlue.Interop.cef_frame_t.undo">
            <summary>
            Execute undo in this frame.
            </summary>
        </member>
        <member name="F:CefGlue.Interop.cef_frame_t.redo">
            <summary>
            Execute redo in this frame.
            </summary>
        </member>
        <member name="F:CefGlue.Interop.cef_frame_t.cut">
            <summary>
            Execute cut in this frame.
            </summary>
        </member>
        <member name="F:CefGlue.Interop.cef_frame_t.copy">
            <summary>
            Execute copy in this frame.
            </summary>
        </member>
        <member name="F:CefGlue.Interop.cef_frame_t.paste">
            <summary>
            Execute paste in this frame.
            </summary>
        </member>
        <member name="F:CefGlue.Interop.cef_frame_t.del">
            <summary>
            Execute delete in this frame.
            </summary>
        </member>
        <member name="F:CefGlue.Interop.cef_frame_t.select_all">
            <summary>
            Execute select all in this frame.
            </summary>
        </member>
        <member name="F:CefGlue.Interop.cef_frame_t.print">
            <summary>
            Execute printing in the this frame.  The user will be prompted with
            the print dialog appropriate to the operating system.
            </summary>
        </member>
        <member name="F:CefGlue.Interop.cef_frame_t.view_source">
            <summary>
            Save this frame's HTML source to a temporary file and open it in the
            default text viewing application.
            </summary>
        </member>
        <member name="F:CefGlue.Interop.cef_frame_t.get_source">
            <summary>
            Returns this frame's HTML source as a string. This function should
            only be called on the UI thread.
            </summary>
            <remarks>
            The resulting string must be freed by calling cef_string_userfree_free().
            </remarks>
        </member>
        <member name="F:CefGlue.Interop.cef_frame_t.get_text">
            <summary>
            Returns this frame's display text as a string. This function should
            only be called on the UI thread.
            </summary>
            <remarks>
            The resulting string must be freed by calling cef_string_userfree_free().
            </remarks>
        </member>
        <member name="F:CefGlue.Interop.cef_frame_t.load_request">
            <summary>
            Load the request represented by the |request| object.
            </summary>
        </member>
        <member name="F:CefGlue.Interop.cef_frame_t.load_url">
            <summary>
            Load the specified |url|.
            </summary>
        </member>
        <member name="F:CefGlue.Interop.cef_frame_t.load_string">
            <summary>
            Load the contents of |string_val| with the optional dummy target
            |url|.
            </summary>
        </member>
        <member name="F:CefGlue.Interop.cef_frame_t.load_stream">
            <summary>
            Load the contents of |stream| with the optional dummy target |url|.
            </summary>
        </member>
        <member name="F:CefGlue.Interop.cef_frame_t.execute_java_script">
            <summary>
            Execute a string of JavaScript code in this frame. The |script_url|
            parameter is the URL where the script in question can be found, if
            any. The renderer may request this URL to show the developer the
            source of the error.  The |start_line| parameter is the base line
            number to use for error reporting.
            </summary>
        </member>
        <member name="F:CefGlue.Interop.cef_frame_t.is_main">
            <summary>
            Returns true (1) if this is the main (top-level) frame.
            </summary>
        </member>
        <member name="F:CefGlue.Interop.cef_frame_t.is_focused">
            <summary>
            Returns true (1) if this is the focused frame. This function should
            only be called on the UI thread.
            </summary>
        </member>
        <member name="F:CefGlue.Interop.cef_frame_t.get_name">
            <summary>
            Returns the name for this frame. If the frame has an assigned name
            (for example, set via the iframe "name" attribute) then that value
            will be returned. Otherwise a unique name will be constructed based
            on the frame parent hierarchy. The main (top-level) frame will always
            have an NULL name value.
            </summary>
            <remarks>
            The resulting string must be freed by calling cef_string_userfree_free().
            </remarks>
        </member>
        <member name="F:CefGlue.Interop.cef_frame_t.get_identifier">
            <summary>
            Returns the globally unique identifier for this frame.
            </summary>
        </member>
        <member name="F:CefGlue.Interop.cef_frame_t.get_parent">
            <summary>
            Returns the parent of this frame or NULL if this is the main (top-
            level) frame. This function should only be called on the UI thread.
            </summary>
        </member>
        <member name="F:CefGlue.Interop.cef_frame_t.get_url">
            <summary>
            Returns the URL currently loaded in this frame.
            </summary>
            <remarks>
            The resulting string must be freed by calling cef_string_userfree_free().
            </remarks>
        </member>
        <member name="F:CefGlue.Interop.cef_frame_t.get_browser">
            <summary>
            Returns the browser that this frame belongs to.
            </summary>
        </member>
        <member name="F:CefGlue.Interop.cef_frame_t.visit_dom">
            <summary>
            Visit the DOM document.
            </summary>
        </member>
        <member name="F:CefGlue.Interop.cef_frame_t.get_v8context">
            <summary>
            Get the V8 context associated with the frame. This function should
            only be called on the UI thread.
            </summary>
        </member>
        <member name="T:CefGlue.Interop.cef_geolocation_callback_t">
            <summary>
            Callback structure used for asynchronous continuation of geolocation
            permission requests.
            </summary>
        </member>
        <member name="F:CefGlue.Interop.cef_geolocation_callback_t.base">
            <summary>
            Base structure.
            </summary>
        </member>
        <member name="F:CefGlue.Interop.cef_geolocation_callback_t.cont">
            <summary>
            Call to allow or deny geolocation access.
            </summary>
        </member>
        <member name="T:CefGlue.Interop.cef_request_t">
            <summary>
            Structure used to represent a web request. The functions of this
            structure may be called on any thread.
            </summary>
        </member>
        <member name="F:CefGlue.Interop.cef_request_t.base">
            <summary>
            Base structure.
            </summary>
        </member>
        <member name="F:CefGlue.Interop.cef_request_t.get_url">
            <summary>
            Get the fully qualified URL.
            </summary>
            <remarks>
            The resulting string must be freed by calling cef_string_userfree_free().
            </remarks>
        </member>
        <member name="F:CefGlue.Interop.cef_request_t.set_url">
            <summary>
            Set the fully qualified URL.
            </summary>
        </member>
        <member name="F:CefGlue.Interop.cef_request_t.get_method">
            <summary>
            Get the request function type. The value will default to POST if post
            data is provided and GET otherwise.
            </summary>
            <remarks>
            The resulting string must be freed by calling cef_string_userfree_free().
            </remarks>
        </member>
        <member name="F:CefGlue.Interop.cef_request_t.set_method">
            <summary>
            Set the request function type.
            </summary>
        </member>
        <member name="F:CefGlue.Interop.cef_request_t.get_post_data">
            <summary>
            Get the post data.
            </summary>
        </member>
        <member name="F:CefGlue.Interop.cef_request_t.set_post_data">
            <summary>
            Set the post data.
            </summary>
        </member>
        <member name="F:CefGlue.Interop.cef_request_t.get_header_map">
            <summary>
            Get the header values.
            </summary>
        </member>
        <member name="F:CefGlue.Interop.cef_request_t.set_header_map">
            <summary>
            Set the header values.
            </summary>
        </member>
        <member name="F:CefGlue.Interop.cef_request_t.set">
            <summary>
            Set all values at one time.
            </summary>
        </member>
        <member name="F:CefGlue.Interop.cef_request_t.get_flags">
            <summary>
            Get the flags used in combination with cef_web_urlrequest_t.
            </summary>
        </member>
        <member name="F:CefGlue.Interop.cef_request_t.set_flags">
            <summary>
            Set the flags used in combination with cef_web_urlrequest_t.
            </summary>
        </member>
        <member name="F:CefGlue.Interop.cef_request_t.get_first_party_for_cookies">
            <summary>
            Set the URL to the first party for cookies used in combination with
            cef_web_urlrequest_t.
            </summary>
            <remarks>
            The resulting string must be freed by calling cef_string_userfree_free().
            </remarks>
        </member>
        <member name="F:CefGlue.Interop.cef_request_t.set_first_party_for_cookies">
            <summary>
            Get the URL to the first party for cookies used in combination with
            cef_web_urlrequest_t.
            </summary>
        </member>
        <member name="T:CefGlue.Interop.cef_post_data_t">
            <summary>
            Structure used to represent post data for a web request. The functions of
            this structure may be called on any thread.
            </summary>
        </member>
        <member name="F:CefGlue.Interop.cef_post_data_t.base">
            <summary>
            Base structure.
            </summary>
        </member>
        <member name="F:CefGlue.Interop.cef_post_data_t.get_element_count">
            <summary>
            Returns the number of existing post data elements.
            </summary>
        </member>
        <member name="F:CefGlue.Interop.cef_post_data_t.get_elements">
            <summary>
            Retrieve the post data elements.
            </summary>
        </member>
        <member name="F:CefGlue.Interop.cef_post_data_t.remove_element">
            <summary>
            Remove the specified post data element.  Returns true (1) if the
            removal succeeds.
            </summary>
        </member>
        <member name="F:CefGlue.Interop.cef_post_data_t.add_element">
            <summary>
            Add the specified post data element.  Returns true (1) if the add
            succeeds.
            </summary>
        </member>
        <member name="F:CefGlue.Interop.cef_post_data_t.remove_elements">
            <summary>
            Remove all existing post data elements.
            </summary>
        </member>
        <member name="T:CefGlue.Interop.cef_post_data_element_t">
            <summary>
            Structure used to represent a single element in the request post data.
            The functions of this structure may be called on any thread.
            </summary>
        </member>
        <member name="F:CefGlue.Interop.cef_post_data_element_t.base">
            <summary>
            Base structure.
            </summary>
        </member>
        <member name="F:CefGlue.Interop.cef_post_data_element_t.set_to_empty">
            <summary>
            Remove all contents from the post data element.
            </summary>
        </member>
        <member name="F:CefGlue.Interop.cef_post_data_element_t.set_to_file">
            <summary>
            The post data element will represent a file.
            </summary>
        </member>
        <member name="F:CefGlue.Interop.cef_post_data_element_t.set_to_bytes">
            <summary>
            The post data element will represent bytes.  The bytes passed in will
            be copied.
            </summary>
        </member>
        <member name="F:CefGlue.Interop.cef_post_data_element_t.get_type">
            <summary>
            Return the type of this post data element.
            </summary>
        </member>
        <member name="F:CefGlue.Interop.cef_post_data_element_t.get_file">
            <summary>
            Return the file name.
            </summary>
            <remarks>
            The resulting string must be freed by calling cef_string_userfree_free().
            </remarks>
        </member>
        <member name="F:CefGlue.Interop.cef_post_data_element_t.get_bytes_count">
            <summary>
            Return the number of bytes.
            </summary>
        </member>
        <member name="F:CefGlue.Interop.cef_post_data_element_t.get_bytes">
            <summary>
            Read up to |size| bytes into |bytes| and return the number of bytes
            actually read.
            </summary>
        </member>
        <member name="T:CefGlue.Interop.cef_response_t">
            <summary>
            Structure used to represent a web response. The functions of this
            structure may be called on any thread.
            </summary>
        </member>
        <member name="F:CefGlue.Interop.cef_response_t.base">
            <summary>
            Base structure.
            </summary>
        </member>
        <member name="F:CefGlue.Interop.cef_response_t.get_status">
            <summary>
            Get the response status code.
            </summary>
        </member>
        <member name="F:CefGlue.Interop.cef_response_t.set_status">
            <summary>
            Set the response status code.
            </summary>
        </member>
        <member name="F:CefGlue.Interop.cef_response_t.get_status_text">
            <summary>
            Get the response status text.
            </summary>
            <remarks>
            The resulting string must be freed by calling cef_string_userfree_free().
            </remarks>
        </member>
        <member name="F:CefGlue.Interop.cef_response_t.set_status_text">
            <summary>
            Set the response status text.
            </summary>
        </member>
        <member name="F:CefGlue.Interop.cef_response_t.get_mime_type">
            <summary>
            Get the response mime type.
            </summary>
            <remarks>
            The resulting string must be freed by calling cef_string_userfree_free().
            </remarks>
        </member>
        <member name="F:CefGlue.Interop.cef_response_t.set_mime_type">
            <summary>
            Set the response mime type.
            </summary>
        </member>
        <member name="F:CefGlue.Interop.cef_response_t.get_header">
            <summary>
            Get the value for the specified response header field.
            </summary>
            <remarks>
            The resulting string must be freed by calling cef_string_userfree_free().
            </remarks>
        </member>
        <member name="F:CefGlue.Interop.cef_response_t.get_header_map">
            <summary>
            Get all response header fields.
            </summary>
        </member>
        <member name="F:CefGlue.Interop.cef_response_t.set_header_map">
            <summary>
            Set all response header fields.
            </summary>
        </member>
        <member name="T:CefGlue.Interop.cef_scheme_handler_callback_t">
            <summary>
            Structure used to facilitate asynchronous responses to custom scheme
            handler requests. The functions of this structure may be called on any
            thread.
            </summary>
        </member>
        <member name="F:CefGlue.Interop.cef_scheme_handler_callback_t.base">
            <summary>
            Base structure.
            </summary>
        </member>
        <member name="F:CefGlue.Interop.cef_scheme_handler_callback_t.headers_available">
            <summary>
            Notify that header information is now available for retrieval.
            </summary>
        </member>
        <member name="F:CefGlue.Interop.cef_scheme_handler_callback_t.bytes_available">
            <summary>
            Notify that response data is now available for reading.
            </summary>
        </member>
        <member name="F:CefGlue.Interop.cef_scheme_handler_callback_t.cancel">
            <summary>
            Cancel processing of the request.
            </summary>
        </member>
        <member name="T:CefGlue.Interop.cef_stream_reader_t">
            <summary>
            Structure used to read data from a stream. The functions of this
            structure may be called on any thread.
            </summary>
        </member>
        <member name="F:CefGlue.Interop.cef_stream_reader_t.base">
            <summary>
            Base structure.
            </summary>
        </member>
        <member name="F:CefGlue.Interop.cef_stream_reader_t.read">
            <summary>
            Read raw binary data.
            </summary>
        </member>
        <member name="F:CefGlue.Interop.cef_stream_reader_t.seek">
            <summary>
            Seek to the specified offset position. |whence| may be any one of
            SEEK_CUR, SEEK_END or SEEK_SET. Returns zero on success and non-zero
            on failure.
            </summary>
        </member>
        <member name="F:CefGlue.Interop.cef_stream_reader_t.tell">
            <summary>
            Return the current offset position.
            </summary>
        </member>
        <member name="F:CefGlue.Interop.cef_stream_reader_t.eof">
            <summary>
            Return non-zero if at end of file.
            </summary>
        </member>
        <member name="T:CefGlue.Interop.cef_stream_writer_t">
            <summary>
            Structure used to write data to a stream. The functions of this structure
            may be called on any thread.
            </summary>
        </member>
        <member name="F:CefGlue.Interop.cef_stream_writer_t.base">
            <summary>
            Base structure.
            </summary>
        </member>
        <member name="F:CefGlue.Interop.cef_stream_writer_t.write">
            <summary>
            Write raw binary data.
            </summary>
        </member>
        <member name="F:CefGlue.Interop.cef_stream_writer_t.seek">
            <summary>
            Seek to the specified offset position. |whence| may be any one of
            SEEK_CUR, SEEK_END or SEEK_SET. Returns zero on success and non-zero
            on failure.
            </summary>
        </member>
        <member name="F:CefGlue.Interop.cef_stream_writer_t.tell">
            <summary>
            Return the current offset position.
            </summary>
        </member>
        <member name="F:CefGlue.Interop.cef_stream_writer_t.flush">
            <summary>
            Flush the stream.
            </summary>
        </member>
        <member name="T:CefGlue.Interop.cef_v8context_t">
            <summary>
            Structure that encapsulates a V8 context handle. The functions of this
            structure may only be called on the UI thread.
            </summary>
        </member>
        <member name="F:CefGlue.Interop.cef_v8context_t.base">
            <summary>
            Base structure.
            </summary>
        </member>
        <member name="F:CefGlue.Interop.cef_v8context_t.get_browser">
            <summary>
            Returns the browser for this context.
            </summary>
        </member>
        <member name="F:CefGlue.Interop.cef_v8context_t.get_frame">
            <summary>
            Returns the frame for this context.
            </summary>
        </member>
        <member name="F:CefGlue.Interop.cef_v8context_t.get_global">
            <summary>
            Returns the global object for this context. The context must be
            entered before calling this function.
            </summary>
        </member>
        <member name="F:CefGlue.Interop.cef_v8context_t.enter">
            <summary>
            Enter this context. A context must be explicitly entered before
            creating a V8 Object, Array, Function or Date asynchronously. exit()
            must be called the same number of times as enter() before releasing
            this context. V8 objects belong to the context in which they are
            created. Returns true (1) if the scope was entered successfully.
            </summary>
        </member>
        <member name="F:CefGlue.Interop.cef_v8context_t.exit">
            <summary>
            Exit this context. Call this function only after calling enter().
            Returns true (1) if the scope was exited successfully.
            </summary>
        </member>
        <member name="F:CefGlue.Interop.cef_v8context_t.is_same">
            <summary>
            Returns true (1) if this object is pointing to the same handle as
            |that| object.
            </summary>
        </member>
        <member name="F:CefGlue.Interop.cef_v8context_t.eval">
            <summary>
            Evaluates the specified JavaScript code using this context's global
            object. On success |retval| will be set to the return value, if any,
            and the function will return true (1). On failure |exception| will be
            set to the exception, if any, and the function will return false (0).
            </summary>
        </member>
        <member name="T:CefGlue.Interop.cef_v8exception_t">
            <summary>
            Structure representing a V8 exception.
            </summary>
        </member>
        <member name="F:CefGlue.Interop.cef_v8exception_t.base">
            <summary>
            Base structure.
            </summary>
        </member>
        <member name="F:CefGlue.Interop.cef_v8exception_t.get_message">
            <summary>
            Returns the exception message.
            </summary>
            <remarks>
            The resulting string must be freed by calling cef_string_userfree_free().
            </remarks>
        </member>
        <member name="F:CefGlue.Interop.cef_v8exception_t.get_source_line">
            <summary>
            Returns the line of source code that the exception occurred within.
            </summary>
            <remarks>
            The resulting string must be freed by calling cef_string_userfree_free().
            </remarks>
        </member>
        <member name="F:CefGlue.Interop.cef_v8exception_t.get_script_resource_name">
            <summary>
            Returns the resource name for the script from where the function
            causing the error originates.
            </summary>
            <remarks>
            The resulting string must be freed by calling cef_string_userfree_free().
            </remarks>
        </member>
        <member name="F:CefGlue.Interop.cef_v8exception_t.get_line_number">
            <summary>
            Returns the 1-based number of the line where the error occurred or 0
            if the line number is unknown.
            </summary>
        </member>
        <member name="F:CefGlue.Interop.cef_v8exception_t.get_start_position">
            <summary>
            Returns the index within the script of the first character where the
            error occurred.
            </summary>
        </member>
        <member name="F:CefGlue.Interop.cef_v8exception_t.get_end_position">
            <summary>
            Returns the index within the script of the last character where the
            error occurred.
            </summary>
        </member>
        <member name="F:CefGlue.Interop.cef_v8exception_t.get_start_column">
            <summary>
            Returns the index within the line of the first character where the
            error occurred.
            </summary>
        </member>
        <member name="F:CefGlue.Interop.cef_v8exception_t.get_end_column">
            <summary>
            Returns the index within the line of the last character where the
            error occurred.
            </summary>
        </member>
        <member name="T:CefGlue.Interop.cef_v8value_t">
            <summary>
            Structure representing a V8 value. The functions of this structure may
            only be called on the UI thread.
            </summary>
        </member>
        <member name="F:CefGlue.Interop.cef_v8value_t.base">
            <summary>
            Base structure.
            </summary>
        </member>
        <member name="F:CefGlue.Interop.cef_v8value_t.is_undefined">
            <summary>
            True if the value type is undefined.
            </summary>
        </member>
        <member name="F:CefGlue.Interop.cef_v8value_t.is_null">
            <summary>
            True if the value type is null.
            </summary>
        </member>
        <member name="F:CefGlue.Interop.cef_v8value_t.is_bool">
            <summary>
            True if the value type is bool.
            </summary>
        </member>
        <member name="F:CefGlue.Interop.cef_v8value_t.is_int">
            <summary>
            True if the value type is int.
            </summary>
        </member>
        <member name="F:CefGlue.Interop.cef_v8value_t.is_uint">
            <summary>
            True if the value type is unsigned int.
            </summary>
        </member>
        <member name="F:CefGlue.Interop.cef_v8value_t.is_double">
            <summary>
            True if the value type is double.
            </summary>
        </member>
        <member name="F:CefGlue.Interop.cef_v8value_t.is_date">
            <summary>
            True if the value type is Date.
            </summary>
        </member>
        <member name="F:CefGlue.Interop.cef_v8value_t.is_string">
            <summary>
            True if the value type is string.
            </summary>
        </member>
        <member name="F:CefGlue.Interop.cef_v8value_t.is_object">
            <summary>
            True if the value type is object.
            </summary>
        </member>
        <member name="F:CefGlue.Interop.cef_v8value_t.is_array">
            <summary>
            True if the value type is array.
            </summary>
        </member>
        <member name="F:CefGlue.Interop.cef_v8value_t.is_function">
            <summary>
            True if the value type is function.
            </summary>
        </member>
        <member name="F:CefGlue.Interop.cef_v8value_t.is_same">
            <summary>
            Returns true (1) if this object is pointing to the same handle as
            |that| object.
            </summary>
        </member>
        <member name="F:CefGlue.Interop.cef_v8value_t.get_bool_value">
            <summary>
            Return a bool value.  The underlying data will be converted to if
            necessary.
            </summary>
        </member>
        <member name="F:CefGlue.Interop.cef_v8value_t.get_int_value">
            <summary>
            Return an int value.  The underlying data will be converted to if
            necessary.
            </summary>
        </member>
        <member name="F:CefGlue.Interop.cef_v8value_t.get_uint_value">
            <summary>
            Return an unisgned int value.  The underlying data will be converted
            to if necessary.
            </summary>
        </member>
        <member name="F:CefGlue.Interop.cef_v8value_t.get_double_value">
            <summary>
            Return a double value.  The underlying data will be converted to if
            necessary.
            </summary>
        </member>
        <member name="F:CefGlue.Interop.cef_v8value_t.get_date_value">
            <summary>
            Return a Date value.  The underlying data will be converted to if
            necessary.
            </summary>
        </member>
        <member name="F:CefGlue.Interop.cef_v8value_t.get_string_value">
            <summary>
            Return a string value.  The underlying data will be converted to if
            necessary.
            </summary>
            <remarks>
            The resulting string must be freed by calling cef_string_userfree_free().
            </remarks>
        </member>
        <member name="F:CefGlue.Interop.cef_v8value_t.is_user_created">
            <summary>
            Returns true (1) if this is a user created object.
            </summary>
        </member>
        <member name="F:CefGlue.Interop.cef_v8value_t.has_exception">
            <summary>
            Returns true (1) if the last function call resulted in an exception.
            This attribute exists only in the scope of the current CEF value
            object.
            </summary>
        </member>
        <member name="F:CefGlue.Interop.cef_v8value_t.get_exception">
            <summary>
            Returns the exception resulting from the last function call. This
            attribute exists only in the scope of the current CEF value object.
            </summary>
        </member>
        <member name="F:CefGlue.Interop.cef_v8value_t.clear_exception">
            <summary>
            Clears the last exception and returns true (1) on success.
            </summary>
        </member>
        <member name="F:CefGlue.Interop.cef_v8value_t.will_rethrow_exceptions">
            <summary>
            Returns true (1) if this object will re-throw future exceptions. This
            attribute exists only in the scope of the current CEF value object.
            </summary>
        </member>
        <member name="F:CefGlue.Interop.cef_v8value_t.set_rethrow_exceptions">
            <summary>
            Set whether this object will re-throw future exceptions. By default
            exceptions are not re-thrown. If a exception is re-thrown the current
            context should not be accessed again until after the exception has
            been caught and not re-thrown. Returns true (1) on success. This
            attribute exists only in the scope of the current CEF value object.
            </summary>
        </member>
        <member name="F:CefGlue.Interop.cef_v8value_t.has_value_bykey">
            <summary>
            Returns true (1) if the object has a value with the specified
            identifier.
            </summary>
        </member>
        <member name="F:CefGlue.Interop.cef_v8value_t.has_value_byindex">
            <summary>
            Returns true (1) if the object has a value with the specified
            identifier.
            </summary>
        </member>
        <member name="F:CefGlue.Interop.cef_v8value_t.delete_value_bykey">
            <summary>
            Deletes the value with the specified identifier and returns true (1)
            on success. Returns false (0) if this function is called incorrectly
            or an exception is thrown. For read-only and don't-delete values this
            function will return true (1) even though deletion failed.
            </summary>
        </member>
        <member name="F:CefGlue.Interop.cef_v8value_t.delete_value_byindex">
            <summary>
            Deletes the value with the specified identifier and returns true (1)
            on success. Returns false (0) if this function is called incorrectly,
            deletion fails or an exception is thrown. For read-only and
            don't-delete values this function will return true (1) even though
            deletion failed.
            </summary>
        </member>
        <member name="F:CefGlue.Interop.cef_v8value_t.get_value_bykey">
            <summary>
            Returns the value with the specified identifier on success. Returns
            NULL if this function is called incorrectly or an exception is
            thrown.
            </summary>
        </member>
        <member name="F:CefGlue.Interop.cef_v8value_t.get_value_byindex">
            <summary>
            Returns the value with the specified identifier on success. Returns
            NULL if this function is called incorrectly or an exception is
            thrown.
            </summary>
        </member>
        <member name="F:CefGlue.Interop.cef_v8value_t.set_value_bykey">
            <summary>
            Associates a value with the specified identifier and returns true (1)
            on success. Returns false (0) if this function is called incorrectly
            or an exception is thrown. For read-only values this function will
            return true (1) even though assignment failed.
            </summary>
        </member>
        <member name="F:CefGlue.Interop.cef_v8value_t.set_value_byindex">
            <summary>
            Associates a value with the specified identifier and returns true (1)
            on success. Returns false (0) if this function is called incorrectly
            or an exception is thrown. For read-only values this function will
            return true (1) even though assignment failed.
            </summary>
        </member>
        <member name="F:CefGlue.Interop.cef_v8value_t.set_value_byaccessor">
            <summary>
            Registers an identifier and returns true (1) on success. Access to
            the identifier will be forwarded to the cef_v8accessor_t instance
            passed to cef_v8value_t::cef_v8value_create_object(). Returns false
            (0) if this function is called incorrectly or an exception is thrown.
            For read-only values this function will return true (1) even though
            assignment failed.
            </summary>
        </member>
        <member name="F:CefGlue.Interop.cef_v8value_t.get_keys">
            <summary>
            Read the keys for the object's values into the specified vector.
            Integer- based keys will also be returned as strings.
            </summary>
        </member>
        <member name="F:CefGlue.Interop.cef_v8value_t.set_user_data">
            <summary>
            Sets the user data for this object and returns true (1) on success.
            Returns false (0) if this function is called incorrectly. This
            function can only be called on user created objects.
            </summary>
        </member>
        <member name="F:CefGlue.Interop.cef_v8value_t.get_user_data">
            <summary>
            Returns the user data, if any, assigned to this object.
            </summary>
        </member>
        <member name="F:CefGlue.Interop.cef_v8value_t.get_externally_allocated_memory">
            <summary>
            Returns the amount of externally allocated memory registered for the
            object.
            </summary>
        </member>
        <member name="F:CefGlue.Interop.cef_v8value_t.adjust_externally_allocated_memory">
            <summary>
            Adjusts the amount of registered external memory for the object. Used
            to give V8 an indication of the amount of externally allocated memory
            that is kept alive by JavaScript objects. V8 uses this information to
            decide when to perform global garbage collection. Each cef_v8value_t
            tracks the amount of external memory associated with it and
            automatically decreases the global total by the appropriate amount on
            its destruction. |change_in_bytes| specifies the number of bytes to
            adjust by. This function returns the number of bytes associated with
            the object after the adjustment. This function can only be called on
            user created objects.
            </summary>
        </member>
        <member name="F:CefGlue.Interop.cef_v8value_t.get_array_length">
            <summary>
            Returns the number of elements in the array.
            </summary>
        </member>
        <member name="F:CefGlue.Interop.cef_v8value_t.get_function_name">
            <summary>
            Returns the function name.
            </summary>
            <remarks>
            The resulting string must be freed by calling cef_string_userfree_free().
            </remarks>
        </member>
        <member name="F:CefGlue.Interop.cef_v8value_t.get_function_handler">
            <summary>
            Returns the function handler or NULL if not a CEF-created function.
            </summary>
        </member>
        <member name="F:CefGlue.Interop.cef_v8value_t.execute_function">
            <summary>
            Execute the function using the current V8 context. This function
            should only be called from within the scope of a cef_v8handler_t or
            cef_v8accessor_t callback, or in combination with calling enter() and
            exit() on a stored cef_v8context_t reference. |object| is the
            receiver ('this' object) of the function. If |object| is NULL the
            current context's global object will be used. |arguments| is the list
            of arguments that will be passed to the function. Returns the
            function return value on success. Returns NULL if this function is
            called incorrectly or an exception is thrown.
            </summary>
        </member>
        <member name="F:CefGlue.Interop.cef_v8value_t.execute_function_with_context">
            <summary>
            Execute the function using the specified V8 context. |object| is the
            receiver ('this' object) of the function. If |object| is NULL the
            specified context's global object will be used. |arguments| is the
            list of arguments that will be passed to the function. Returns the
            function return value on success. Returns NULL if this function is
            called incorrectly or an exception is thrown.
            </summary>
        </member>
        <member name="T:CefGlue.Interop.cef_v8stack_trace_t">
            <summary>
            Structure representing a V8 stack trace. The functions of this structure
            may only be called on the UI thread.
            </summary>
        </member>
        <member name="F:CefGlue.Interop.cef_v8stack_trace_t.base">
            <summary>
            Base structure.
            </summary>
        </member>
        <member name="F:CefGlue.Interop.cef_v8stack_trace_t.get_frame_count">
            <summary>
            Returns the number of stack frames.
            </summary>
        </member>
        <member name="F:CefGlue.Interop.cef_v8stack_trace_t.get_frame">
            <summary>
            Returns the stack frame at the specified 0-based index.
            </summary>
        </member>
        <member name="T:CefGlue.Interop.cef_v8stack_frame_t">
            <summary>
            Structure representing a V8 stack frame. The functions of this structure
            may only be called on the UI thread.
            </summary>
        </member>
        <member name="F:CefGlue.Interop.cef_v8stack_frame_t.base">
            <summary>
            Base structure.
            </summary>
        </member>
        <member name="F:CefGlue.Interop.cef_v8stack_frame_t.get_script_name">
            <summary>
            Returns the name of the resource script that contains the function.
            </summary>
            <remarks>
            The resulting string must be freed by calling cef_string_userfree_free().
            </remarks>
        </member>
        <member name="F:CefGlue.Interop.cef_v8stack_frame_t.get_script_name_or_source_url">
            <summary>
            Returns the name of the resource script that contains the function or
            the sourceURL value if the script name is undefined and its source
            ends with a "//@ sourceURL=..." string.
            </summary>
            <remarks>
            The resulting string must be freed by calling cef_string_userfree_free().
            </remarks>
        </member>
        <member name="F:CefGlue.Interop.cef_v8stack_frame_t.get_function_name">
            <summary>
            Returns the name of the function.
            </summary>
            <remarks>
            The resulting string must be freed by calling cef_string_userfree_free().
            </remarks>
        </member>
        <member name="F:CefGlue.Interop.cef_v8stack_frame_t.get_line_number">
            <summary>
            Returns the 1-based line number for the function call or 0 if
            unknown.
            </summary>
        </member>
        <member name="F:CefGlue.Interop.cef_v8stack_frame_t.get_column">
            <summary>
            Returns the 1-based column offset on the line for the function call
            or 0 if unknown.
            </summary>
        </member>
        <member name="F:CefGlue.Interop.cef_v8stack_frame_t.is_eval">
            <summary>
            Returns true (1) if the function was compiled using eval().
            </summary>
        </member>
        <member name="F:CefGlue.Interop.cef_v8stack_frame_t.is_constructor">
            <summary>
            Returns true (1) if the function was called as a constructor via
            "new".
            </summary>
        </member>
        <member name="T:CefGlue.Interop.cef_web_plugin_info_t">
            <summary>
            Information about a specific web plugin.
            </summary>
        </member>
        <member name="F:CefGlue.Interop.cef_web_plugin_info_t.base">
            <summary>
            Base structure.
            </summary>
        </member>
        <member name="F:CefGlue.Interop.cef_web_plugin_info_t.get_name">
            <summary>
            Returns the plugin name (i.e. Flash).
            </summary>
            <remarks>
            The resulting string must be freed by calling cef_string_userfree_free().
            </remarks>
        </member>
        <member name="F:CefGlue.Interop.cef_web_plugin_info_t.get_path">
            <summary>
            Returns the plugin file path (DLL/bundle/library).
            </summary>
            <remarks>
            The resulting string must be freed by calling cef_string_userfree_free().
            </remarks>
        </member>
        <member name="F:CefGlue.Interop.cef_web_plugin_info_t.get_version">
            <summary>
            Returns the version of the plugin (may be OS-specific).
            </summary>
            <remarks>
            The resulting string must be freed by calling cef_string_userfree_free().
            </remarks>
        </member>
        <member name="F:CefGlue.Interop.cef_web_plugin_info_t.get_description">
            <summary>
            Returns a description of the plugin from the version information.
            </summary>
            <remarks>
            The resulting string must be freed by calling cef_string_userfree_free().
            </remarks>
        </member>
        <member name="T:CefGlue.Interop.cef_web_urlrequest_t">
            <summary>
            Structure used to make a Web URL request. Web URL requests are not
            associated with a browser instance so no cef_client_t callbacks will be
            executed. The functions of this structure may be called on any thread.
            </summary>
        </member>
        <member name="F:CefGlue.Interop.cef_web_urlrequest_t.base">
            <summary>
            Base structure.
            </summary>
        </member>
        <member name="F:CefGlue.Interop.cef_web_urlrequest_t.cancel">
            <summary>
            Cancels the request.
            </summary>
        </member>
        <member name="F:CefGlue.Interop.cef_web_urlrequest_t.get_state">
            <summary>
            Returns the current ready state of the request.
            </summary>
        </member>
        <member name="T:CefGlue.Interop.cef_xml_reader_t">
            <summary>
            Structure that supports the reading of XML data via the libxml streaming
            API. The functions of this structure should only be called on the thread
            that creates the object.
            </summary>
        </member>
        <member name="F:CefGlue.Interop.cef_xml_reader_t.base">
            <summary>
            Base structure.
            </summary>
        </member>
        <member name="F:CefGlue.Interop.cef_xml_reader_t.move_to_next_node">
            <summary>
            Moves the cursor to the next node in the document. This function must
            be called at least once to set the current cursor position. Returns
            true (1) if the cursor position was set successfully.
            </summary>
        </member>
        <member name="F:CefGlue.Interop.cef_xml_reader_t.close">
            <summary>
            Close the document. This should be called directly to ensure that
            cleanup occurs on the correct thread.
            </summary>
        </member>
        <member name="F:CefGlue.Interop.cef_xml_reader_t.has_error">
            <summary>
            Returns true (1) if an error has been reported by the XML parser.
            </summary>
        </member>
        <member name="F:CefGlue.Interop.cef_xml_reader_t.get_error">
            <summary>
            Returns the error string.
            </summary>
            <remarks>
            The resulting string must be freed by calling cef_string_userfree_free().
            </remarks>
        </member>
        <member name="F:CefGlue.Interop.cef_xml_reader_t.get_type">
            <summary>
            Returns the node type.
            </summary>
        </member>
        <member name="F:CefGlue.Interop.cef_xml_reader_t.get_depth">
            <summary>
            Returns the node depth. Depth starts at 0 for the root node.
            </summary>
        </member>
        <member name="F:CefGlue.Interop.cef_xml_reader_t.get_local_name">
            <summary>
            Returns the local name. See http://www.w3.org/TR/REC-xml-names/#NT-
            LocalPart for additional details.
            </summary>
            <remarks>
            The resulting string must be freed by calling cef_string_userfree_free().
            </remarks>
        </member>
        <member name="F:CefGlue.Interop.cef_xml_reader_t.get_prefix">
            <summary>
            Returns the namespace prefix. See http://www.w3.org/TR/REC-xml-names/
            for additional details.
            </summary>
            <remarks>
            The resulting string must be freed by calling cef_string_userfree_free().
            </remarks>
        </member>
        <member name="F:CefGlue.Interop.cef_xml_reader_t.get_qualified_name">
            <summary>
            Returns the qualified name, equal to (Prefix:)LocalName. See
            http://www.w3.org/TR/REC-xml-names/#ns-qualnames for additional
            details.
            </summary>
            <remarks>
            The resulting string must be freed by calling cef_string_userfree_free().
            </remarks>
        </member>
        <member name="F:CefGlue.Interop.cef_xml_reader_t.get_namespace_uri">
            <summary>
            Returns the URI defining the namespace associated with the node. See
            http://www.w3.org/TR/REC-xml-names/ for additional details.
            </summary>
            <remarks>
            The resulting string must be freed by calling cef_string_userfree_free().
            </remarks>
        </member>
        <member name="F:CefGlue.Interop.cef_xml_reader_t.get_base_uri">
            <summary>
            Returns the base URI of the node. See http://www.w3.org/TR/xmlbase/
            for additional details.
            </summary>
            <remarks>
            The resulting string must be freed by calling cef_string_userfree_free().
            </remarks>
        </member>
        <member name="F:CefGlue.Interop.cef_xml_reader_t.get_xml_lang">
            <summary>
            Returns the xml:lang scope within which the node resides. See
            http://www.w3.org/TR/REC-xml/#sec-lang-tag for additional details.
            </summary>
            <remarks>
            The resulting string must be freed by calling cef_string_userfree_free().
            </remarks>
        </member>
        <member name="F:CefGlue.Interop.cef_xml_reader_t.is_empty_element">
            <summary>
            Returns true (1) if the node represents an NULL element. &lt;a/&gt; is
            considered NULL but &lt;a&gt;&lt;/a&gt; is not.
            </summary>
        </member>
        <member name="F:CefGlue.Interop.cef_xml_reader_t.has_value">
            <summary>
            Returns true (1) if the node has a text value.
            </summary>
        </member>
        <member name="F:CefGlue.Interop.cef_xml_reader_t.get_value">
            <summary>
            Returns the text value.
            </summary>
            <remarks>
            The resulting string must be freed by calling cef_string_userfree_free().
            </remarks>
        </member>
        <member name="F:CefGlue.Interop.cef_xml_reader_t.has_attributes">
            <summary>
            Returns true (1) if the node has attributes.
            </summary>
        </member>
        <member name="F:CefGlue.Interop.cef_xml_reader_t.get_attribute_count">
            <summary>
            Returns the number of attributes.
            </summary>
        </member>
        <member name="F:CefGlue.Interop.cef_xml_reader_t.get_attribute_byindex">
            <summary>
            Returns the value of the attribute at the specified 0-based index.
            </summary>
            <remarks>
            The resulting string must be freed by calling cef_string_userfree_free().
            </remarks>
        </member>
        <member name="F:CefGlue.Interop.cef_xml_reader_t.get_attribute_byqname">
            <summary>
            Returns the value of the attribute with the specified qualified name.
            </summary>
            <remarks>
            The resulting string must be freed by calling cef_string_userfree_free().
            </remarks>
        </member>
        <member name="F:CefGlue.Interop.cef_xml_reader_t.get_attribute_bylname">
            <summary>
            Returns the value of the attribute with the specified local name and
            namespace URI.
            </summary>
            <remarks>
            The resulting string must be freed by calling cef_string_userfree_free().
            </remarks>
        </member>
        <member name="F:CefGlue.Interop.cef_xml_reader_t.get_inner_xml">
            <summary>
            Returns an XML representation of the current node's children.
            </summary>
            <remarks>
            The resulting string must be freed by calling cef_string_userfree_free().
            </remarks>
        </member>
        <member name="F:CefGlue.Interop.cef_xml_reader_t.get_outer_xml">
            <summary>
            Returns an XML representation of the current node including its
            children.
            </summary>
            <remarks>
            The resulting string must be freed by calling cef_string_userfree_free().
            </remarks>
        </member>
        <member name="F:CefGlue.Interop.cef_xml_reader_t.get_line_number">
            <summary>
            Returns the line number for the current node.
            </summary>
        </member>
        <member name="F:CefGlue.Interop.cef_xml_reader_t.move_to_attribute_byindex">
            <summary>
            Moves the cursor to the attribute at the specified 0-based index.
            Returns true (1) if the cursor position was set successfully.
            </summary>
        </member>
        <member name="F:CefGlue.Interop.cef_xml_reader_t.move_to_attribute_byqname">
            <summary>
            Moves the cursor to the attribute with the specified qualified name.
            Returns true (1) if the cursor position was set successfully.
            </summary>
        </member>
        <member name="F:CefGlue.Interop.cef_xml_reader_t.move_to_attribute_bylname">
            <summary>
            Moves the cursor to the attribute with the specified local name and
            namespace URI. Returns true (1) if the cursor position was set
            successfully.
            </summary>
        </member>
        <member name="F:CefGlue.Interop.cef_xml_reader_t.move_to_first_attribute">
            <summary>
            Moves the cursor to the first attribute in the current element.
            Returns true (1) if the cursor position was set successfully.
            </summary>
        </member>
        <member name="F:CefGlue.Interop.cef_xml_reader_t.move_to_next_attribute">
            <summary>
            Moves the cursor to the next attribute in the current element.
            Returns true (1) if the cursor position was set successfully.
            </summary>
        </member>
        <member name="F:CefGlue.Interop.cef_xml_reader_t.move_to_carrying_element">
            <summary>
            Moves the cursor back to the carrying element. Returns true (1) if
            the cursor position was set successfully.
            </summary>
        </member>
        <member name="T:CefGlue.Interop.cef_zip_reader_t">
            <summary>
            Structure that supports the reading of zip archives via the zlib unzip
            API. The functions of this structure should only be called on the thread
            that creates the object.
            </summary>
        </member>
        <member name="F:CefGlue.Interop.cef_zip_reader_t.base">
            <summary>
            Base structure.
            </summary>
        </member>
        <member name="F:CefGlue.Interop.cef_zip_reader_t.move_to_first_file">
            <summary>
            Moves the cursor to the first file in the archive. Returns true (1)
            if the cursor position was set successfully.
            </summary>
        </member>
        <member name="F:CefGlue.Interop.cef_zip_reader_t.move_to_next_file">
            <summary>
            Moves the cursor to the next file in the archive. Returns true (1) if
            the cursor position was set successfully.
            </summary>
        </member>
        <member name="F:CefGlue.Interop.cef_zip_reader_t.move_to_file">
            <summary>
            Moves the cursor to the specified file in the archive. If
            |caseSensitive| is true (1) then the search will be case sensitive.
            Returns true (1) if the cursor position was set successfully.
            </summary>
        </member>
        <member name="F:CefGlue.Interop.cef_zip_reader_t.close">
            <summary>
            Closes the archive. This should be called directly to ensure that
            cleanup occurs on the correct thread.
            </summary>
        </member>
        <member name="F:CefGlue.Interop.cef_zip_reader_t.get_file_name">
            <summary>
            Returns the name of the file.
            </summary>
            <remarks>
            The resulting string must be freed by calling cef_string_userfree_free().
            </remarks>
        </member>
        <member name="F:CefGlue.Interop.cef_zip_reader_t.get_file_size">
            <summary>
            Returns the uncompressed size of the file.
            </summary>
        </member>
        <member name="F:CefGlue.Interop.cef_zip_reader_t.get_file_last_modified">
            <summary>
            Returns the last modified timestamp for the file.
            </summary>
        </member>
        <member name="F:CefGlue.Interop.cef_zip_reader_t.open_file">
            <summary>
            Opens the file for reading of uncompressed data. A read password may
            optionally be specified.
            </summary>
        </member>
        <member name="F:CefGlue.Interop.cef_zip_reader_t.close_file">
            <summary>
            Closes the file.
            </summary>
        </member>
        <member name="F:CefGlue.Interop.cef_zip_reader_t.read_file">
            <summary>
            Read uncompressed file contents into the specified buffer. Returns &lt;
            0 if an error occurred, 0 if at the end of file, or the number of
            bytes read.
            </summary>
        </member>
        <member name="F:CefGlue.Interop.cef_zip_reader_t.tell">
            <summary>
            Returns the current offset in the uncompressed file contents.
            </summary>
        </member>
        <member name="F:CefGlue.Interop.cef_zip_reader_t.eof">
            <summary>
            Returns true (1) if at end of the file contents.
            </summary>
        </member>
        <member name="T:CefGlue.Interop.cef_string_multimap">
             <summary>
             CEF string map.
             </summary>
             <remarks>
            <c>cef_string_multimap*</c> === <c>cef_string_multimap_t</c>.
             </remarks>
        </member>
        <member name="T:CefGlue.Interop.cef_string_list">
             <summary>
             CEF string list.
             </summary>
             <remarks>
            <c>cef_string_list*</c> === <c>cef_string_list_t</c>.
             </remarks>
        </member>
        <member name="T:CefGlue.Interop.cef_string_map">
             <summary>
             CEF string map.
             </summary>
             <remarks>
            <c>cef_string_map*</c> === <c>cef_string_map_t</c>.
             </remarks>
        </member>
        <member name="T:CefGlue.Interop.cef_string_userfree">
            <summary>
            It is sometimes necessary for the system to allocate string structures with
            the expectation that the user will free them. The userfree types act as a
            hint that the user is responsible for freeing the structure.
            </summary>
            <remarks>
            <c>cef_string_userfree*</c> === <c>cef_string_userfree_t</c>.
            </remarks>
        </member>
        <member name="T:CefGlue.Interop.cef_window_handle">
            <summary>
            CEF window handle.
            </summary>
            <remarks>
            <c>cef_window_handle*</c> === <c>cef_window_handle_t</c>.
            </remarks>
        </member>
        <member name="T:CefGlue.Interop.cef_cursor_handle">
            <summary>
            CEF cursor handle.
            </summary>
            <remarks>
            <c>cef_cursor_handle*</c> === <c>cef_cursor_handle_t</c>.
            </remarks>
        </member>
    </members>
</doc>
