<!DOCTYPE PATCH  SYSTEM "http://vvvv.org/versions/vvvv45debug29.3.dtd" >
   <PATCH nodename="C:\Users\Joreg\dev\github\vvvv\public\vvvv45\lib\nodes\native\Tidy (XML) help.v4p">
   <BOUNDS height="10005" left="1260" top="2415" type="Window" width="9960">
   </BOUNDS>
   <NODE componentmode="InABox" id="14" nodename="IOBox (String)">
   <BOUNDS height="255" left="150" top="525" type="Node" width="570">
   </BOUNDS>
   <BOUNDS height="300" left="150" top="525" type="Box" width="3270">
   </BOUNDS>
   <BOUNDS height="160" left="600" top="2160" type="Window" width="215">
   </BOUNDS>
   <PIN pinname="Input String" slicecount="1" visible="0" values="|Tidies bad HTML into proper XML/(X)HTML|">
   </PIN>
   <PIN pinname="Output String" visible="0">
   </PIN>
   <PIN pinname="Show Grid" slicecount="1" values="0">
   </PIN>
   </NODE>
   <NODE componentmode="InABox" id="13" nodename="IOBox (String)">
   <BOUNDS height="270" left="135" top="165" type="Node" width="915">
   </BOUNDS>
   <BOUNDS height="390" left="135" top="165" type="Box" width="4095">
   </BOUNDS>
   <BOUNDS height="160" left="600" top="2160" type="Window" width="215">
   </BOUNDS>
   <PIN pinname="Input String" slicecount="1" visible="0" values="|Tidy (XML)|">
   </PIN>
   <PIN pinname="Output String" visible="0">
   </PIN>
   <PIN pinname="Show Grid" slicecount="1" values="0">
   </PIN>
   <PIN pinname="Size" slicecount="1" values="12">
   </PIN>
   </NODE>
   <NODE id="12" nodename="IsWellFormed (XML)">
   <BOUNDS height="0" left="405" top="2760" type="Node" width="0">
   </BOUNDS>
   <PIN pinname="XML Input" visible="1">
   </PIN>
   <PIN pinname="Is well formed" visible="1">
   </PIN>
   </NODE>
   <NODE id="11" nodename="Tidy (XML)">
   <BOUNDS height="0" left="195" top="4335" type="Node" width="0">
   </BOUNDS>
   <PIN pinname="HTML Input" visible="1">
   </PIN>
   <PIN pinname="Output" visible="1">
   </PIN>
   <PIN pinname="Pretty Print" slicecount="1" values="1">
   </PIN>
   <PIN pinname="Doctype Mode" slicecount="1" values="Auto">
   </PIN>
   <PIN pinname="Output Type" slicecount="1" visible="1" values="XHTML">
   </PIN>
   <PIN pinname="Clean up" slicecount="1" values="1">
   </PIN>
   <PIN pinname="Output Encoding Type" slicecount="1" values="Latin1">
   </PIN>
   </NODE>
   <NODE id="10" nodename="IsWellFormed (XML)">
   <BOUNDS height="0" left="225" top="8265" type="Node" width="0">
   </BOUNDS>
   <PIN pinname="XML Input" visible="1">
   </PIN>
   <PIN pinname="Is well formed" visible="1">
   </PIN>
   </NODE>
   <NODE componentmode="InABox" id="9" nodename="IOBox (String)">
   <BOUNDS height="0" left="210" top="5175" type="Node" width="0">
   </BOUNDS>
   <BOUNDS height="160" left="8310" top="5985" type="Window" width="215">
   </BOUNDS>
   <BOUNDS height="2145" left="210" top="5175" type="Box" width="5235">
   </BOUNDS>
   <PIN pinname="Input String" visible="1">
   </PIN>
   <PIN pinname="Output String" visible="1">
   </PIN>
   </NODE>
   <LINK dstnodeid="9" dstpinname="Input String" linkstyle="VHV" srcnodeid="11" srcpinname="Output">
   <LINKPOINT x="240" y="5580">
   </LINKPOINT>
   <LINKPOINT x="5415" y="5580">
   </LINKPOINT>
   </LINK>
   <LINK dstnodeid="10" dstpinname="XML Input" srcnodeid="9" srcpinname="Output String">
   </LINK>
   <NODE componentmode="InABox" id="8" nodename="IOBOX (VALUE ADVANCED)">
   <BOUNDS height="0" left="375" top="3180" type="Node" width="0">
   </BOUNDS>
   <BOUNDS height="160" left="7755" top="5445" type="Window" width="215">
   </BOUNDS>
   <BOUNDS height="525" left="375" top="3180" type="Box" width="450">
   </BOUNDS>
   <PIN pinname="Y Input Value" visible="1">
   </PIN>
   <PIN pinname="Size" slicecount="1" values="22">
   </PIN>
   </NODE>
   <LINK dstnodeid="8" dstpinname="Y Input Value" linkstyle="VHV" srcnodeid="12" srcpinname="Is well formed">
   </LINK>
   <NODE componentmode="InABox" id="7" nodename="IOBOX (VALUE ADVANCED)">
   <BOUNDS height="0" left="240" top="8880" type="Node" width="0">
   </BOUNDS>
   <BOUNDS height="160" left="8055" top="5745" type="Window" width="215">
   </BOUNDS>
   <BOUNDS height="525" left="240" top="8880" type="Box" width="450">
   </BOUNDS>
   <PIN pinname="Y Input Value" visible="1">
   </PIN>
   <PIN pinname="Size" slicecount="1" values="22">
   </PIN>
   </NODE>
   <LINK dstnodeid="7" dstpinname="Y Input Value" linkstyle="VHV" srcnodeid="10" srcpinname="Is well formed">
   <LINKPOINT x="255" y="8745">
   </LINKPOINT>
   <LINKPOINT x="660" y="8745">
   </LINKPOINT>
   </LINK>
   <NODE componentmode="InABox" id="6" nodename="IOBox (String)">
   <BOUNDS height="270" left="1170" top="3150" type="Node" width="4380">
   </BOUNDS>
   <BOUNDS height="585" left="1170" top="3150" type="Box" width="3930">
   </BOUNDS>
   <BOUNDS height="160" left="0" top="0" type="Window" width="215">
   </BOUNDS>
   <PIN pinname="Input String" slicecount="1" visible="0" values="|&lt;-- Seems to be loose HTML and we can&apos;t really use it.   (Think about Xpath (XML) to Query some Content)|">
   </PIN>
   <PIN pinname="Output String" visible="0">
   </PIN>
   <PIN pinname="Show Grid" slicecount="1" values="0">
   </PIN>
   </NODE>
   <NODE componentmode="InABox" id="5" nodename="IOBox (String)">
   <BOUNDS height="270" left="1425" top="4320" type="Node" width="1545">
   </BOUNDS>
   <BOUNDS height="300" left="1425" top="4320" type="Box" width="1710">
   </BOUNDS>
   <BOUNDS height="160" left="0" top="0" type="Window" width="215">
   </BOUNDS>
   <PIN pinname="Input String" slicecount="1" visible="0" values="|&lt;- LetÂ´s TIDY it up.|">
   </PIN>
   <PIN pinname="Output String" visible="0">
   </PIN>
   <PIN pinname="Show Grid" slicecount="1" values="0">
   </PIN>
   </NODE>
   <NODE componentmode="InABox" id="4" nodename="IOBox (String)">
   <BOUNDS height="270" left="870" top="8910" type="Node" width="2970">
   </BOUNDS>
   <BOUNDS height="315" left="870" top="8910" type="Box" width="3150">
   </BOUNDS>
   <BOUNDS height="160" left="0" top="0" type="Window" width="215">
   </BOUNDS>
   <PIN pinname="Input String" slicecount="1" visible="0" values="|&lt;-- ...and we have nice well formed XHTML&cr;&lf;|">
   </PIN>
   <PIN pinname="Output String" visible="0">
   </PIN>
   <PIN pinname="Show Grid" slicecount="1" values="0">
   </PIN>
   </NODE>
   <NODE componentmode="InABox" id="2" nodename="IOBox (String)">
   <BOUNDS height="270" left="2160" top="9135" type="Node" width="1845">
   </BOUNDS>
   <BOUNDS height="270" left="2160" top="9135" type="Box" width="1845">
   </BOUNDS>
   <BOUNDS height="160" left="0" top="0" type="Window" width="215">
   </BOUNDS>
   <PIN pinname="Input String" slicecount="1" visible="0" values="|Now try to query it with|">
   </PIN>
   <PIN pinname="Output String" visible="0">
   </PIN>
   <PIN pinname="Show Grid" slicecount="1" values="0">
   </PIN>
   </NODE>
   <NODE componentmode="InABox" id="1" nodename="IOBox (String)">
   <BOUNDS height="0" left="210" top="1065" type="Node" width="0">
   </BOUNDS>
   <BOUNDS height="160" left="8610" top="6285" type="Window" width="215">
   </BOUNDS>
   <BOUNDS height="1485" left="210" top="1065" type="Box" width="5310">
   </BOUNDS>
   <PIN pinname="Input String" slicecount="1" visible="1" values="|&lt;title&gt;This is poor HTML&lf;&lt;center&gt;&lf;&lt;font size=10 style=font-size:60pt; color=yellow&gt;bad html&lf;&lt;/center&gt;&lf;&lt;p&gt;This is poor HTML&lt;/b&gt;&lf;&lt;body bgcolor=black background=innanet.jpg&gt;&lf;&lt;h1&gt;&lt;FONT COLOR=RED&gt;INTERNET TECHNOLOGY&lt;/FONT&gt;&lt;/H1&gt;&lf;&lt;BR&gt;&lt;BR&gt;&lf;&lt;B&gt;&lt;A HREF=WWW.BADHTML.COM&gt;MY FRIENDES NETSITE&lt;/A&gt;&lt;/B&gt;&lf;&lt;/HTML&gt;|">
   </PIN>
   <PIN pinname="Output String" visible="1">
   </PIN>
   </NODE>
   <LINK dstnodeid="11" dstpinname="HTML Input" srcnodeid="1" srcpinname="Output String">
   </LINK>
   <LINK dstnodeid="12" dstpinname="XML Input" linkstyle="VHV" srcnodeid="1" srcpinname="Output String">
   </LINK>
   <NODE componentmode="InABox" id="0" nodename="IOBox (String)">
   <BOUNDS height="270" left="5865" top="1020" type="Node" width="2940">
   </BOUNDS>
   <BOUNDS height="8775" left="5865" top="1020" type="Box" width="3795">
   </BOUNDS>
   <BOUNDS height="160" left="0" top="0" type="Window" width="215">
   </BOUNDS>
   <PIN pinname="Input String" slicecount="1" visible="0" values="|On the Output Type-Pin you can choose the desired Output-Format. If set to &quot;XMLNoHeader&quot; Tidy will strip the XML- and Doctype-declaration, this can be useful if you want to concatenate several XML-documents.&cr;&lf;&cr;&lf;Doctype Mode  allows to specify  the Doctype of the resulting Document.&cr;&lf;If set to &quot;None&quot; the output won&apos;t contain a DOCTYPE declaration. If set to &quot;Auto&quot; (the default) Tidy will &quot;guess&quot;  based upon the contents of the document. If set to &quot;Strict&quot;,  the DOCTYPE will be set to the strict DTD. If set to &quot;Transitional&quot;, the DOCTYPE is set to the transitional DTD.&cr;&lf;&cr;&lf;Input Encoding Type specifies the character encoding Tidy uses for the input.&cr;&lf;Output Encoding Type specifies the character encoding Tidy uses for the output&cr;&lf;For ASCII, Tidy will accept Latin-1 (ISO-8859-1) character values, but will use entities for all characters whose value &gt; 127. For raw, Tidy will output values above 127 without translating them into entities. For Latin1, characters above 255 will be written as entities. For UTF8, Tidy assumes that both input and output is encoded as UTF-8. You can use ISO2022 for files encoded using the ISO-2022 family of encodings e.g. ISO-2022-JP. For MAC and WIN1252, Tidy will accept vendor specific character values, but will use entities for all characters whose value &gt; 127.&cr;&lf;&cr;&lf;Clean Up specifies if  surplus presentational tags and attributes should be stripped out replacing them by style rules and structural markup as appropriate. This works well on the HTML saved by Microsoft Office (TM) products.&cr;&lf;&cr;&lf;The Ouput of Tidy is always pretty printed but if you set Pretty Print to 1 it will be even prettier.|">
   </PIN>
   <PIN pinname="Output String" visible="0">
   </PIN>
   <PIN pinname="Show Grid" slicecount="1" values="0">
   </PIN>
   </NODE>
   <NODE id="3" nodename="XPath (XML)" systemname="XPath (XML)">
   <BOUNDS height="0" left="4065" top="9105" type="Node" width="0">
   </BOUNDS>
   <PIN pinname="XML Input" slicecount="1" visible="1" values="text">
   </PIN>
   <PIN pinname="XPath Query" slicecount="1" values="||">
   </PIN>
   <PIN pinname="Validate on parse">
   </PIN>
   <PIN pinname="Resolve externals">
   </PIN>
   </NODE>
   </PATCH>