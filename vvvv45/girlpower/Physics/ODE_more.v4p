<!DOCTYPE PATCH  SYSTEM "http://vvvv.org/versions/vvvv45debug31.9.dtd" >
   <PATCH nodename="C:\Users\joreg\dev\repos\vvvv\public\vvvv45\girlpower\Physics\ODE_more.v4p">
   <BOUNDS height="11400" left="6750" top="1800" type="Window" width="8685">
   </BOUNDS>
   <NODE componentmode="InABox" id="5" nodename="IOBox (String)">
   <BOUNDS height="750" left="120" top="75" type="Node" width="840">
   </BOUNDS>
   <BOUNDS height="1575" left="120" top="75" type="Box" width="6360">
   </BOUNDS>
   <BOUNDS height="160" left="0" top="0" type="Window" width="215">
   </BOUNDS>
   <PIN pinname="Input String" slicecount="1" visible="0" values="|The Open Dynamics Engine (ODE) is a free, industrial quality library for simulating articulated rigid body dynamics. For example, it is good for simulating ground vehicles, legged creatures, and moving objects in VR environments. It is fast, flexible and robust, and it has built-in collision detection. ODE is being developed by Russell Smith with help from several contributors.&cr;&lf;&cr;&lf;http://www.ode.org|">
   </PIN>
   <PIN pinname="Output String" visible="0">
   </PIN>
   <PIN pinname="Show Grid" slicecount="1" values="0">
   </PIN>
   </NODE>
   <NODE componentmode="InABox" id="4" nodename="IOBox (String)">
   <BOUNDS height="750" left="120" top="2475" type="Node" width="840">
   </BOUNDS>
   <BOUNDS height="6840" left="120" top="2475" type="Box" width="7950">
   </BOUNDS>
   <BOUNDS height="160" left="300" top="300" type="Window" width="215">
   </BOUNDS>
   <PIN pinname="Input String" slicecount="1" visible="0" values="|ODE is good for simulating articulated rigid body structures. An articulated structure is created when rigid bodies of various shapes are connected together with joints of various kinds. Examples are ground vehicles (where the wheels are connected to the chassis), legged creatures (where the legs are connected to the body), or stacks of objects.&cr;&lf;ODE is designed to be used in interactive or real-time simulation. It is particularly good for simulating moving objects in changeable virtual reality environments. This is because it is fast, robust and stable, and the user has complete freedom to change the structure of the system even while the simulation is running.&cr;&lf;ODE uses a highly stable integrator, so that the simulation errors should not grow out of control. The physical meaning of this is that the simulated system should not ”explode” for no reason (believe me, this happens a lot with other simulators if you are not careful). ODE emphasizes speed and stability over physical accuracy.&cr;&lf;ODE has hard contacts. This means that a special non-penetration constraint is used whenever two bodies collide. The alternative, used in many other simulators, is to use virtual springs to represent contacts.&cr;&lf;This is difficult to do right and extremely error-prone.&cr;&lf;ODE has a built-in collision detection system. However you can ignore it and do your own collision detection if you want to. The current collision primitives are sphere, box, capped cylinder, plane, ray, and triangular mesh - more collision objects will come later. ODE’s collision system provides fast identification of potentially intersecting objects, through the concept of “spaces”.&cr;&lf;&cr;&lf;Here are the features:&cr;&lf;• Rigid bodies with arbitrary mass distribution.&cr;&lf;• Joint types: ball-and-socket, hinge, slider (prismatic), hinge-2, fixed, angular motor, universal.&cr;&lf;• Collision primitives: sphere, box, capped cylinder, plane, ray, and triangular mesh.&cr;&lf;• Collision spaces: Quad tree, hash space, and simple.&cr;&lf;• Simulation method: The equations of motion are derived from a Lagrange multiplier velocity based&cr;&lf;model due to Trinkle/Stewart and Anitescu/Potra.&cr;&lf;• A first order integrator is being used. It’s fast, but not accurate enough for quantitative engineering&cr;&lf;yet. Higher order integrators will come later.&cr;&lf;• Choice of time stepping methods: either the standard “big matrix” method or the newer iterative&cr;&lf;QuickStep method can be used.&cr;&lf;• Contact and friction model: This is based on the Dantzig LCP solver described by Baraff, although&cr;&lf;ODE implements a faster approximation to the Coloumb friction model.|">
   </PIN>
   <PIN pinname="Output String" visible="0">
   </PIN>
   <PIN pinname="Show Grid" slicecount="1" values="0">
   </PIN>
   </NODE>
   <NODE componentmode="InABox" id="3" nodename="IOBox (String)">
   <BOUNDS height="255" left="120" top="2130" type="Node" width="1050">
   </BOUNDS>
   <BOUNDS height="330" left="120" top="2130" type="Box" width="1950">
   </BOUNDS>
   <BOUNDS height="160" left="0" top="0" type="Window" width="215">
   </BOUNDS>
   <PIN pinname="Input String" slicecount="1" visible="0" values="FEATURES">
   </PIN>
   <PIN pinname="Output String" visible="0">
   </PIN>
   <PIN pinname="Show Grid" slicecount="1" values="0">
   </PIN>
   <PIN pinname="Size" slicecount="1" values="12">
   </PIN>
   </NODE>
   <NODE componentmode="InABox" id="2" nodename="IOBox (String)">
   <BOUNDS height="420" left="120" top="9390" type="Node" width="810">
   </BOUNDS>
   <BOUNDS height="960" left="120" top="9390" type="Box" width="6120">
   </BOUNDS>
   <BOUNDS height="160" left="0" top="0" type="Window" width="215">
   </BOUNDS>
   <PIN pinname="Input String" slicecount="1" visible="0" values="|This caption is taken from the ODE Users Manuel by Russel Smith and can be found at:&cr;&lf;http://ode.org/ode-docs.html&cr;&lf;&cr;&lf;For more info see also:|">
   </PIN>
   <PIN pinname="Output String" visible="0">
   </PIN>
   <PIN pinname="Show Grid" slicecount="1" values="0">
   </PIN>
   </NODE>
   <NODE componentmode="Hidden" id="1" nodename="%VVVV%\girlpower\Physics\ODE_rigid_bodies.v4p" systemname="ODE_rigid_bodies" filename="%VVVV%\girlpower\Physics\ODE_rigid_bodies.v4p">
   <BOUNDS height="6990" left="3195" top="2445" type="Window" width="12825">
   </BOUNDS>
   <BOUNDS height="100" left="180" top="10380" type="Node" width="100">
   </BOUNDS>
   <BOUNDS left="180" top="10380" type="Box">
   </BOUNDS>
   </NODE>
   <NODE componentmode="Hidden" id="0" nodename="%VVVV%\girlpower\Physics\ODE_collisions.v4p" systemname="ODE_collisions" filename="%VVVV%\girlpower\Physics\ODE_collisions.v4p">
   <BOUNDS height="6495" left="1185" top="1875" type="Window" width="12825">
   </BOUNDS>
   <BOUNDS height="100" left="1860" top="10380" type="Node" width="100">
   </BOUNDS>
   <BOUNDS left="1860" top="10380" type="Box">
   </BOUNDS>
   </NODE>
   <PACK Name="addonpack" Version="31.9.0">
   </PACK>
   </PATCH>